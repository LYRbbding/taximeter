// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "12/17/2020 10:55:40"

// 
// Device: Altera EPM1270T144C5 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module taxi (
	clk,
	rst,
	mile_v,
	onride,
	double,
	night,
	subtotal,
	waiting,
	stopped,
	seg_cat,
	seg_AX,
	speed_led,
	night_led,
	double_led,
	ride_led,
	clk_sound,
	lattice_row,
	lattice_Rcol,
	lattice_Gcol,
	lcd_en,
	lcd_rs,
	lcd_data);
input 	clk;
input 	rst;
input 	[2:0] mile_v;
input 	onride;
input 	double;
input 	night;
input 	subtotal;
input 	waiting;
input 	stopped;
output 	[7:0] seg_cat;
output 	[7:0] seg_AX;
output 	[7:0] speed_led;
output 	night_led;
output 	double_led;
output 	ride_led;
output 	clk_sound;
output 	[7:0] lattice_row;
output 	[7:0] lattice_Rcol;
output 	[7:0] lattice_Gcol;
output 	lcd_en;
output 	lcd_rs;
output 	[7:0] lcd_data;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \people1_price[2][0]~regout ;
wire \people2_price[2][0]~regout ;
wire \people1_price[2][1]~regout ;
wire \people2_price[2][1]~regout ;
wire \people1_price[1][1]~regout ;
wire \people2_price[1][1]~regout ;
wire \people2_price[1][2]~regout ;
wire \people2_price[2][2]~regout ;
wire \people1_price[1][2]~regout ;
wire \people1_price[2][3]~regout ;
wire \people2_price[1][3]~regout ;
wire \people1_price[1][3]~regout ;
wire \people2_price[2][3]~regout ;
wire \subKEY|key_2nd_pre~regout ;
wire \waitingKEY|key_2nd_pre~regout ;
wire \soundBUZ|divideSOUND|Add0~90 ;
wire \subKEY|key_1st_pre~regout ;
wire \stoppedKEY|key_1st_pre~regout ;
wire \waitingKEY|key_1st_pre~regout ;
wire \clk~combout ;
wire \divide1000|Add0~155_combout ;
wire \rst~combout ;
wire \divide1000|Add0~157 ;
wire \divide1000|Add0~150_combout ;
wire \divide1000|Add0~115_combout ;
wire \divide1000|Add0~92 ;
wire \divide1000|Add0~92COUT1_169 ;
wire \divide1000|Add0~85_combout ;
wire \divide1000|Add0~90_combout ;
wire \divide1000|LessThan0~0 ;
wire \divide1000|Add0~117 ;
wire \divide1000|Add0~117COUT1_165 ;
wire \divide1000|Add0~125_combout ;
wire \divide1000|Add0~152 ;
wire \divide1000|Add0~152COUT1_161 ;
wire \divide1000|Add0~147 ;
wire \divide1000|Add0~147COUT1_162 ;
wire \divide1000|Add0~105_combout ;
wire \divide1000|LessThan0~1 ;
wire \divide1000|Add0~127 ;
wire \divide1000|Add0~127COUT1_166 ;
wire \divide1000|Add0~122 ;
wire \divide1000|Add0~122COUT1_167 ;
wire \divide1000|Add0~80_combout ;
wire \divide1000|Add0~82 ;
wire \divide1000|Add0~82COUT1_168 ;
wire \divide1000|Add0~95_combout ;
wire \divide1000|Add0~97 ;
wire \divide1000|Add0~87 ;
wire \divide1000|Add0~87COUT1_170 ;
wire \divide1000|Add0~137 ;
wire \divide1000|Add0~137COUT1_171 ;
wire \divide1000|Add0~130_combout ;
wire \divide1000|Add0~132 ;
wire \divide1000|Add0~132COUT1_172 ;
wire \divide1000|Add0~140_combout ;
wire \divide1000|Add0~142 ;
wire \divide1000|Add0~75_combout ;
wire \divide1000|Add0~77 ;
wire \divide1000|Add0~77COUT1_173 ;
wire \divide1000|Add0~70_combout ;
wire \divide1000|Add0~72 ;
wire \divide1000|Add0~72COUT1_174 ;
wire \divide1000|Add0~65_combout ;
wire \divide1000|Add0~67 ;
wire \divide1000|Add0~67COUT1_175 ;
wire \divide1000|Add0~60_combout ;
wire \divide1000|Add0~62 ;
wire \divide1000|Add0~62COUT1_176 ;
wire \divide1000|Add0~55_combout ;
wire \divide1000|Add0~57 ;
wire \divide1000|Add0~50_combout ;
wire \divide1000|Add0~52 ;
wire \divide1000|Add0~52COUT1_177 ;
wire \divide1000|Add0~45_combout ;
wire \divide1000|Add0~47 ;
wire \divide1000|Add0~47COUT1_178 ;
wire \divide1000|Add0~40_combout ;
wire \divide1000|Add0~42 ;
wire \divide1000|Add0~42COUT1_179 ;
wire \divide1000|Add0~35_combout ;
wire \divide1000|Add0~37 ;
wire \divide1000|Add0~37COUT1_180 ;
wire \divide1000|Add0~30_combout ;
wire \divide1000|Add0~32 ;
wire \divide1000|Add0~25_combout ;
wire \divide1000|Add0~27 ;
wire \divide1000|Add0~27COUT1_181 ;
wire \divide1000|Add0~20_combout ;
wire \divide1000|Add0~22 ;
wire \divide1000|Add0~22COUT1_182 ;
wire \divide1000|Add0~15_combout ;
wire \divide1000|Add0~17 ;
wire \divide1000|Add0~17COUT1_183 ;
wire \divide1000|Add0~10_combout ;
wire \divide1000|Add0~12 ;
wire \divide1000|Add0~12COUT1_184 ;
wire \divide1000|Add0~5_combout ;
wire \divide1000|Add0~7 ;
wire \divide1000|Add0~0_combout ;
wire \divide1000|Equal0~0 ;
wire \divide1000|Equal0~1 ;
wire \divide1000|Equal0~2 ;
wire \divide1000|Equal0~3 ;
wire \divide1000|Equal0~4_combout ;
wire \divide1000|Add0~145_combout ;
wire \divide1000|Equal0~8 ;
wire \divide1000|Equal0~5 ;
wire \divide1000|Add0~135_combout ;
wire \divide1000|Equal0~6 ;
wire \divide1000|Add0~107 ;
wire \divide1000|Add0~107COUT1_163 ;
wire \divide1000|Add0~102 ;
wire \divide1000|Add0~102COUT1_164 ;
wire \divide1000|Add0~110_combout ;
wire \divide1000|Equal0~7 ;
wire \divide1000|Equal0~9_combout ;
wire \divide1000|Add0~100_combout ;
wire \divide1000|Add0~112 ;
wire \divide1000|Add0~120_combout ;
wire \divide1000|LessThan0~3_combout ;
wire \divide1000|LessThan0~2 ;
wire \divide1000|clk_p~regout ;
wire \onride~combout ;
wire \Decoder1~0_combout ;
wire \Decoder2~0_combout ;
wire \seg_cat[0]~reg0_regout ;
wire \Decoder1~1_combout ;
wire \seg_cat[1]~reg0_regout ;
wire \Decoder1~2_combout ;
wire \seg_cat[2]~reg0_regout ;
wire \Decoder1~3_combout ;
wire \seg_cat[3]~reg0_regout ;
wire \Decoder1~4_combout ;
wire \seg_cat[4]~reg0_regout ;
wire \Decoder1~5_combout ;
wire \seg_cat[5]~reg0_regout ;
wire \Decoder1~6_combout ;
wire \seg_cat[6]~reg0_regout ;
wire \seg_cat[7]~reg0_regout ;
wire \stopped~combout ;
wire \stoppedKEY|key_1st_now~regout ;
wire \stoppedKEY|key_edge ;
wire \stoppedKEY|cnt[0]~5 ;
wire \stoppedKEY|cnt[0]~5COUT1_37 ;
wire \stoppedKEY|cnt[1]~7 ;
wire \stoppedKEY|cnt[1]~7COUT1_38 ;
wire \stoppedKEY|cnt[2]~9 ;
wire \stoppedKEY|cnt[2]~9COUT1_39 ;
wire \stoppedKEY|cnt[3]~11 ;
wire \stoppedKEY|cnt[4]~13 ;
wire \stoppedKEY|cnt[4]~13COUT1_40 ;
wire \stoppedKEY|cnt[5]~15 ;
wire \stoppedKEY|cnt[5]~15COUT1_41 ;
wire \stoppedKEY|cnt[6]~17 ;
wire \stoppedKEY|cnt[6]~17COUT1_42 ;
wire \stoppedKEY|cnt[7]~19 ;
wire \stoppedKEY|cnt[7]~19COUT1_43 ;
wire \stoppedKEY|cnt[8]~21 ;
wire \stoppedKEY|cnt[9]~23 ;
wire \stoppedKEY|cnt[9]~23COUT1_44 ;
wire \stoppedKEY|cnt[10]~25 ;
wire \stoppedKEY|cnt[10]~25COUT1_45 ;
wire \stoppedKEY|cnt[11]~27 ;
wire \stoppedKEY|cnt[11]~27COUT1_46 ;
wire \stoppedKEY|cnt[12]~29 ;
wire \stoppedKEY|cnt[12]~29COUT1_47 ;
wire \stoppedKEY|cnt[13]~31 ;
wire \stoppedKEY|cnt[14]~33 ;
wire \stoppedKEY|cnt[14]~33COUT1_48 ;
wire \stoppedKEY|cnt[15]~35 ;
wire \stoppedKEY|cnt[15]~35COUT1_49 ;
wire \stoppedKEY|cnt[16]~1 ;
wire \stoppedKEY|cnt[16]~1COUT1_50 ;
wire \stoppedKEY|Equal0~0_combout ;
wire \stoppedKEY|Equal0~2_combout ;
wire \stoppedKEY|Equal0~1_combout ;
wire \stoppedKEY|Equal0~3_combout ;
wire \stoppedKEY|Equal0~4_combout ;
wire \stoppedKEY|Equal0~5_combout ;
wire \stoppedKEY|key_2nd_now~regout ;
wire \stoppedKEY|key_2nd_pre~regout ;
wire \stop_cnt~regout ;
wire \subtotal~combout ;
wire \subKEY|key_1st_now~regout ;
wire \subKEY|key_edge ;
wire \subKEY|cnt[0]~5 ;
wire \subKEY|cnt[0]~5COUT1_37 ;
wire \subKEY|cnt[1]~7 ;
wire \subKEY|cnt[1]~7COUT1_38 ;
wire \subKEY|cnt[2]~9 ;
wire \subKEY|cnt[2]~9COUT1_39 ;
wire \subKEY|cnt[3]~11 ;
wire \subKEY|cnt[4]~13 ;
wire \subKEY|cnt[4]~13COUT1_40 ;
wire \subKEY|cnt[5]~15 ;
wire \subKEY|cnt[5]~15COUT1_41 ;
wire \subKEY|cnt[6]~17 ;
wire \subKEY|cnt[6]~17COUT1_42 ;
wire \subKEY|cnt[7]~19 ;
wire \subKEY|cnt[7]~19COUT1_43 ;
wire \subKEY|cnt[8]~21 ;
wire \subKEY|cnt[9]~23 ;
wire \subKEY|cnt[9]~23COUT1_44 ;
wire \subKEY|cnt[10]~25 ;
wire \subKEY|cnt[10]~25COUT1_45 ;
wire \subKEY|cnt[11]~27 ;
wire \subKEY|cnt[11]~27COUT1_46 ;
wire \subKEY|cnt[12]~29 ;
wire \subKEY|cnt[12]~29COUT1_47 ;
wire \subKEY|cnt[13]~31 ;
wire \subKEY|cnt[14]~33 ;
wire \subKEY|cnt[14]~33COUT1_48 ;
wire \subKEY|cnt[15]~35 ;
wire \subKEY|cnt[15]~35COUT1_49 ;
wire \subKEY|cnt[16]~1 ;
wire \subKEY|cnt[16]~1COUT1_50 ;
wire \subKEY|Equal0~0_combout ;
wire \subKEY|Equal0~1_combout ;
wire \subKEY|Equal0~2_combout ;
wire \subKEY|Equal0~3_combout ;
wire \subKEY|Equal0~4_combout ;
wire \subKEY|Equal0~5_combout ;
wire \subKEY|key_2nd_now~regout ;
wire \double~combout ;
wire \sub_cnt[0]~0 ;
wire \always1~0_combout ;
wire \Equal13~0_combout ;
wire \waiting~combout ;
wire \waitingKEY|key_1st_now~regout ;
wire \waitingKEY|key_edge ;
wire \waitingKEY|cnt[0]~5 ;
wire \waitingKEY|cnt[0]~5COUT1_37 ;
wire \waitingKEY|cnt[1]~7 ;
wire \waitingKEY|cnt[1]~7COUT1_38 ;
wire \waitingKEY|cnt[2]~9 ;
wire \waitingKEY|cnt[2]~9COUT1_39 ;
wire \waitingKEY|cnt[3]~11 ;
wire \waitingKEY|cnt[4]~13 ;
wire \waitingKEY|cnt[4]~13COUT1_40 ;
wire \waitingKEY|cnt[5]~15 ;
wire \waitingKEY|cnt[5]~15COUT1_41 ;
wire \waitingKEY|cnt[6]~17 ;
wire \waitingKEY|cnt[6]~17COUT1_42 ;
wire \waitingKEY|cnt[7]~19 ;
wire \waitingKEY|cnt[7]~19COUT1_43 ;
wire \waitingKEY|cnt[8]~21 ;
wire \waitingKEY|cnt[9]~23 ;
wire \waitingKEY|cnt[9]~23COUT1_44 ;
wire \waitingKEY|cnt[10]~25 ;
wire \waitingKEY|cnt[10]~25COUT1_45 ;
wire \waitingKEY|cnt[11]~27 ;
wire \waitingKEY|cnt[11]~27COUT1_46 ;
wire \waitingKEY|cnt[12]~29 ;
wire \waitingKEY|cnt[12]~29COUT1_47 ;
wire \waitingKEY|cnt[13]~31 ;
wire \waitingKEY|cnt[14]~33 ;
wire \waitingKEY|cnt[14]~33COUT1_48 ;
wire \waitingKEY|cnt[15]~35 ;
wire \waitingKEY|cnt[15]~35COUT1_49 ;
wire \waitingKEY|cnt[16]~1 ;
wire \waitingKEY|cnt[16]~1COUT1_50 ;
wire \waitingKEY|Equal0~0_combout ;
wire \waitingKEY|Equal0~3_combout ;
wire \waitingKEY|Equal0~1_combout ;
wire \waitingKEY|Equal0~2_combout ;
wire \waitingKEY|Equal0~4_combout ;
wire \waitingKEY|Equal0~5_combout ;
wire \waitingKEY|key_2nd_now~regout ;
wire \waitingKEY|key_pulse ;
wire \wait_status~regout ;
wire \wait_mcnt[7]~20_combout ;
wire \wait_mcnt[9]~21_combout ;
wire \wait_mcnt[0]~3 ;
wire \wait_mcnt[0]~3COUT1_23 ;
wire \wait_mcnt[1]~5 ;
wire \wait_mcnt[1]~5COUT1_24 ;
wire \wait_mcnt[2]~7 ;
wire \wait_mcnt[2]~7COUT1_25 ;
wire \wait_mcnt[3]~1 ;
wire \wait_mcnt[3]~1COUT1_26 ;
wire \wait_mcnt[4]~9 ;
wire \wait_mcnt[5]~11 ;
wire \wait_mcnt[5]~11COUT1_27 ;
wire \wait_mcnt[6]~13 ;
wire \wait_mcnt[6]~13COUT1_28 ;
wire \wait_mcnt[7]~15 ;
wire \wait_mcnt[7]~15COUT1_29 ;
wire \wait_mcnt[8]~17 ;
wire \wait_mcnt[8]~17COUT1_30 ;
wire \Equal9~0_combout ;
wire \Equal9~1_combout ;
wire \Equal9~2_combout ;
wire \seg_data[5][0]~14_combout ;
wire \seg_data[5][0]~15_combout ;
wire \seg_data[4][0]~19_combout ;
wire \seg_data[4][0]~regout ;
wire \seg_data[4][1]~regout ;
wire \Add6~0_combout ;
wire \seg_data[4][2]~regout ;
wire \Add6~1_combout ;
wire \seg_data[4][3]~regout ;
wire \seg_data[5][0]~16_combout ;
wire \seg_data[5][0]~17_combout ;
wire \seg_data[5][0]~regout ;
wire \seg_data[5][1]~regout ;
wire \seg_data[5][2]~regout ;
wire \Add5~0_combout ;
wire \seg_data[5][3]~regout ;
wire \always1~5_combout ;
wire \always1~3_combout ;
wire \always1~4_combout ;
wire \always1~6_combout ;
wire \seg_data[3][0]~38_combout ;
wire \seg_data[3][0]~regout ;
wire \seg_data[3][2]~regout ;
wire \Add7~0_combout ;
wire \seg_data[3][3]~regout ;
wire \seg_data~51_combout ;
wire \seg_data[3][1]~regout ;
wire \night~combout ;
wire \seg_data[7][1]~regout ;
wire \Add16~0_combout ;
wire \seg_data[7][2]~regout ;
wire \Add16~1_combout ;
wire \seg_data[7][3]~regout ;
wire \always1~1_combout ;
wire \always1~2_combout ;
wire \mile_mcnt[9]~22_combout ;
wire \mile_mcnt[0]~3 ;
wire \mile_mcnt[0]~3COUT1_25 ;
wire \mile_mcnt[1]~5 ;
wire \mile_mcnt[1]~5COUT1_26 ;
wire \mile_mcnt[2]~7 ;
wire \mile_mcnt[2]~7COUT1_27 ;
wire \Equal17~0_combout ;
wire \mile_mcnt[3]~1 ;
wire \mile_mcnt[3]~1COUT1_28 ;
wire \mile_mcnt[4]~9 ;
wire \mile_mcnt[5]~11 ;
wire \mile_mcnt[5]~11COUT1_29 ;
wire \mile_mcnt[6]~13 ;
wire \mile_mcnt[6]~13COUT1_30 ;
wire \Equal17~1_combout ;
wire \mile_mcnt[3]~21_combout ;
wire \mile_mcnt[7]~15 ;
wire \mile_mcnt[7]~15COUT1_31 ;
wire \mile_mcnt[8]~17 ;
wire \mile_mcnt[8]~17COUT1_32 ;
wire \Equal17~2_combout ;
wire \mile_speed[2]~0_combout ;
wire \mile_speed[2]~2_combout ;
wire \speedLED|WideOr1~0_combout ;
wire \LessThan6~0_combout ;
wire \LessThan6~1_combout ;
wire \seg_data[6][0]~11_combout ;
wire \seg_data[6][0]~12_combout ;
wire \seg_data[6][0]~regout ;
wire \seg_data[6][1]~regout ;
wire \Add17~0_combout ;
wire \seg_data~61_combout ;
wire \seg_data[6][2]~regout ;
wire \seg_data[6][3]~regout ;
wire \Equal19~0_combout ;
wire \seg_data[7][0]~20_combout ;
wire \seg_data[7][0]~regout ;
wire \Equal8~0_combout ;
wire \Add24~0_combout ;
wire \mile_mcnt[9]~20_combout ;
wire \mile_mcnt~23_combout ;
wire \wait_cnt[3]~2_combout ;
wire \Add14~0_combout ;
wire \wait_cnt[1]~0_combout ;
wire \Add14~1_combout ;
wire \Equal15~0_combout ;
wire \seg_data~25_combout ;
wire \Myuan[0]~0_combout ;
wire \seg_data~49_combout ;
wire \mile_cnt[6]~14_combout ;
wire \mile_cnt[6]~15_combout ;
wire \mile_cnt[0]~5 ;
wire \mile_cnt[0]~5COUT1_17 ;
wire \mile_cnt[1]~7 ;
wire \mile_cnt[1]~7COUT1_18 ;
wire \mile_cnt[2]~1 ;
wire \mile_cnt[2]~1COUT1_19 ;
wire \mile_cnt[3]~3 ;
wire \mile_cnt[4]~9 ;
wire \mile_cnt[4]~9COUT1_20 ;
wire \mile_cnt[5]~11 ;
wire \mile_cnt[5]~11COUT1_21 ;
wire \LessThan7~0_combout ;
wire \LessThan7~1_combout ;
wire \seg_data~24_combout ;
wire \seg_data~34_combout ;
wire \seg_data[0][1]~58_combout ;
wire \seg_data~59_combout ;
wire \Add19~1_combout ;
wire \Add19~0_combout ;
wire \seg_data~35_combout ;
wire \Wjiao[1]~1_combout ;
wire \Wjiao[0]~0_combout ;
wire \Add9~5_combout ;
wire \night_cnt[0]~7_combout ;
wire \night_cnt[0]~8_combout ;
wire \night_cnt[0]~9_combout ;
wire \night_cnt[0]~10_combout ;
wire \Add9~7 ;
wire \Add9~7COUT1_21 ;
wire \Add9~12 ;
wire \Add9~12COUT1_22 ;
wire \Add9~15_combout ;
wire \Add9~17 ;
wire \Add9~17COUT1_23 ;
wire \Add9~0_combout ;
wire \LessThan2~0_combout ;
wire \LessThan2~1_combout ;
wire \LessThan2~2_combout ;
wire \Add13~0_combout ;
wire \Add25~1_combout ;
wire \night_cnt~12_combout ;
wire \always1~14_combout ;
wire \seg_data[0][0]~36_combout ;
wire \Add19~2_combout ;
wire \Add19~3_combout ;
wire \Add25~0_combout ;
wire \night_cnt~0_combout ;
wire \night_cnt~5_combout ;
wire \Add9~10_combout ;
wire \night_cnt~1_combout ;
wire \night_cnt~2_combout ;
wire \night_cnt~3_combout ;
wire \LessThan9~0_combout ;
wire \always1~20_combout ;
wire \always1~21_combout ;
wire \Add18~3_combout ;
wire \Add12~0_combout ;
wire \always1~17_combout ;
wire \always1~18_combout ;
wire \always1~19_combout ;
wire \Add22~0_combout ;
wire \Add8~1_combout ;
wire \Add11~17 ;
wire \Add11~17COUT1_21 ;
wire \Add11~5_combout ;
wire \always1~15_combout ;
wire \Add22~2 ;
wire \Add22~2COUT1_21 ;
wire \Add22~7 ;
wire \Add22~7COUT1_22 ;
wire \Add22~10_combout ;
wire \Add8~2_combout ;
wire \Add12~2 ;
wire \Add12~2COUT1_21 ;
wire \Add12~7 ;
wire \Add12~7COUT1_22 ;
wire \Add12~10_combout ;
wire \Add11~7 ;
wire \Add11~7COUT1_22 ;
wire \Add11~10_combout ;
wire \seg_data~56_combout ;
wire \seg_data~57_combout ;
wire \seg_data[0][2]~regout ;
wire \Add8~0_combout ;
wire \Add12~12 ;
wire \Add12~12COUT1_23 ;
wire \Add12~15_combout ;
wire \Add18~0_combout ;
wire \Add22~12 ;
wire \Add22~12COUT1_23 ;
wire \Add22~15_combout ;
wire \Add21~17 ;
wire \Add21~17COUT1_21 ;
wire \Add21~7 ;
wire \Add21~7COUT1_22 ;
wire \Add21~12 ;
wire \Add21~12COUT1_23 ;
wire \Add21~0_combout ;
wire \seg_data~68_combout ;
wire \seg_data~69_combout ;
wire \seg_data[0][3]~regout ;
wire \Add11~12 ;
wire \Add11~12COUT1_23 ;
wire \Add11~0_combout ;
wire \LessThan4~0_combout ;
wire \seg_data[0][1]~31_combout ;
wire \Add21~15_combout ;
wire \Add11~15_combout ;
wire \seg_data~32_combout ;
wire \seg_data~33_combout ;
wire \seg_data[0][0]~regout ;
wire \Add18~1_combout ;
wire \Add22~5_combout ;
wire \Add12~5_combout ;
wire \Add21~5_combout ;
wire \seg_data~47_combout ;
wire \seg_data~48_combout ;
wire \seg_data[0][1]~regout ;
wire \Add18~2_combout ;
wire \Add21~10_combout ;
wire \LessThan12~0_combout ;
wire \seg_data~26_combout ;
wire \seg_data[1][1]~45_combout ;
wire \seg_data[1][3]~regout ;
wire \seg_data~43_combout ;
wire \seg_data[1][2]~regout ;
wire \Equal20~0_combout ;
wire \always1~8_combout ;
wire \Equal1~0_combout ;
wire \seg_data[2][0]~23_combout ;
wire \seg_data[2][0]~27_combout ;
wire \seg_data[2][0]~regout ;
wire \seg_data[2][1]~regout ;
wire \Add23~0_combout ;
wire \seg_data[2][2]~regout ;
wire \seg_data[2][3]~regout ;
wire \always1~9_combout ;
wire \always1~10_combout ;
wire \always1~11_combout ;
wire \always1~12_combout ;
wire \always1~7_combout ;
wire \always1~13_combout ;
wire \seg_data~28_combout ;
wire \seg_data~29_combout ;
wire \seg_data[1][0]~regout ;
wire \seg_data[1][1]~regout ;
wire \Mux2~2_combout ;
wire \Mux2~3_combout ;
wire \Mux2~0_combout ;
wire \Mux2~1_combout ;
wire \Mux2~4_combout ;
wire \Mux1~0_combout ;
wire \Mux1~1_combout ;
wire \Mux1~2_combout ;
wire \Mux1~3_combout ;
wire \Mux1~4_combout ;
wire \Mux0~0_combout ;
wire \Mux0~1_combout ;
wire \Mux0~2_combout ;
wire \Mux0~3_combout ;
wire \Mux0~4_combout ;
wire \Mux3~2_combout ;
wire \Mux3~3_combout ;
wire \Mux3~0_combout ;
wire \Mux3~1_combout ;
wire \Mux3~4_combout ;
wire \seg_high|seg~0_combout ;
wire \seg_high|seg~1_combout ;
wire \seg_high|seg~2_combout ;
wire \seg_high|seg~3_combout ;
wire \seg_high|seg~4_combout ;
wire \seg_high|seg~5_combout ;
wire \seg_high|seg~6_combout ;
wire \speedLED|led[1]~0_combout ;
wire \speedLED|led[2]~1_combout ;
wire \speedLED|led[3]~2_combout ;
wire \speedLED|led[4]~3_combout ;
wire \speedLED|led[5]~4_combout ;
wire \speedLED|led[6]~5_combout ;
wire \speedLED|led[7]~6_combout ;
wire \always1~16_combout ;
wire \snd_status~8_combout ;
wire \Add29~0_combout ;
wire \Add4~0_combout ;
wire \snd_status~7_combout ;
wire \LessThan14~1_combout ;
wire \LessThan14~0_combout ;
wire \snd_status[1]~5_combout ;
wire \sound_cnt[0]~1 ;
wire \sound_cnt[0]~1COUT1_21 ;
wire \sound_cnt[1]~3 ;
wire \sound_cnt[1]~3COUT1_22 ;
wire \sound_cnt[2]~5 ;
wire \sound_cnt[2]~5COUT1_23 ;
wire \sound_cnt[3]~7 ;
wire \sound_cnt[3]~7COUT1_24 ;
wire \sound_cnt[4]~9 ;
wire \sound_cnt[5]~11 ;
wire \sound_cnt[5]~11COUT1_25 ;
wire \sound_cnt[6]~13 ;
wire \sound_cnt[6]~13COUT1_26 ;
wire \Equal22~0_combout ;
wire \Equal21~0_combout ;
wire \Equal22~1_combout ;
wire \snd_status[1]~6_combout ;
wire \LessThan0~0_combout ;
wire \sound_cnt[8]~18_combout ;
wire \sound_cnt[8]~19_combout ;
wire \sound_cnt[7]~15 ;
wire \sound_cnt[7]~15COUT1_27 ;
wire \Equal21~1_combout ;
wire \Equal21~2_combout ;
wire \sound_on~1_combout ;
wire \sound_on~0_combout ;
wire \sound_on~regout ;
wire \soundBUZ|Mux3~0_combout ;
wire \soundBUZ|Mux4~0_combout ;
wire \soundBUZ|Mux12~0_combout ;
wire \soundBUZ|Mux0~0_combout ;
wire \soundBUZ|divideSOUND|Add0~92_cout0 ;
wire \soundBUZ|divideSOUND|Add0~92COUT1_96 ;
wire \soundBUZ|divideSOUND|Add0~2 ;
wire \soundBUZ|divideSOUND|Add0~2COUT1_97 ;
wire \soundBUZ|divideSOUND|Add0~7 ;
wire \soundBUZ|divideSOUND|Add0~7COUT1_98 ;
wire \soundBUZ|divideSOUND|Add0~12 ;
wire \soundBUZ|Mux10~0_combout ;
wire \soundBUZ|Mux4~1_combout ;
wire \soundBUZ|divideSOUND|Add0~17 ;
wire \soundBUZ|divideSOUND|Add0~17COUT1_99 ;
wire \soundBUZ|divideSOUND|Add0~22 ;
wire \soundBUZ|divideSOUND|Add0~22COUT1_100 ;
wire \soundBUZ|divideSOUND|Add0~32 ;
wire \soundBUZ|divideSOUND|Add0~32COUT1_101 ;
wire \soundBUZ|divideSOUND|Add0~27 ;
wire \soundBUZ|divideSOUND|Add0~27COUT1_102 ;
wire \soundBUZ|divideSOUND|Add0~42 ;
wire \soundBUZ|Mux5~0_combout ;
wire \soundBUZ|Mux6~0_combout ;
wire \soundBUZ|Mux7~0_combout ;
wire \soundBUZ|divideSOUND|Add0~37 ;
wire \soundBUZ|divideSOUND|Add0~37COUT1_103 ;
wire \soundBUZ|divideSOUND|Add0~52 ;
wire \soundBUZ|divideSOUND|Add0~52COUT1_104 ;
wire \soundBUZ|divideSOUND|Add0~47 ;
wire \soundBUZ|divideSOUND|Add0~47COUT1_105 ;
wire \soundBUZ|divideSOUND|Add0~62 ;
wire \soundBUZ|divideSOUND|Add0~62COUT1_106 ;
wire \soundBUZ|divideSOUND|Add0~57 ;
wire \soundBUZ|Mux2~0_combout ;
wire \soundBUZ|divideSOUND|Add0~72 ;
wire \soundBUZ|divideSOUND|Add0~72COUT1_107 ;
wire \soundBUZ|divideSOUND|Add0~67 ;
wire \soundBUZ|divideSOUND|Add0~67COUT1_108 ;
wire \soundBUZ|divideSOUND|Add0~82 ;
wire \soundBUZ|divideSOUND|Add0~82COUT1_109 ;
wire \soundBUZ|divideSOUND|Add0~77 ;
wire \soundBUZ|divideSOUND|Add0~77COUT1_110 ;
wire \soundBUZ|divideSOUND|Add0~85_combout ;
wire \soundBUZ|divideSOUND|cnt_p[0]~59 ;
wire \soundBUZ|divideSOUND|cnt_p[1]~61 ;
wire \soundBUZ|divideSOUND|cnt_p[1]~61COUT1_65 ;
wire \soundBUZ|divideSOUND|cnt_p[2]~63 ;
wire \soundBUZ|divideSOUND|cnt_p[2]~63COUT1_66 ;
wire \soundBUZ|divideSOUND|cnt_p[3]~57 ;
wire \soundBUZ|divideSOUND|cnt_p[3]~57COUT1_67 ;
wire \soundBUZ|divideSOUND|cnt_p[4]~55 ;
wire \soundBUZ|divideSOUND|cnt_p[4]~55COUT1_68 ;
wire \soundBUZ|divideSOUND|cnt_p[5]~53 ;
wire \soundBUZ|divideSOUND|cnt_p[6]~49 ;
wire \soundBUZ|divideSOUND|cnt_p[6]~49COUT1_69 ;
wire \soundBUZ|divideSOUND|cnt_p[7]~51 ;
wire \soundBUZ|divideSOUND|cnt_p[7]~51COUT1_70 ;
wire \soundBUZ|divideSOUND|cnt_p[8]~45 ;
wire \soundBUZ|divideSOUND|cnt_p[8]~45COUT1_71 ;
wire \soundBUZ|divideSOUND|cnt_p[9]~47 ;
wire \soundBUZ|divideSOUND|cnt_p[9]~47COUT1_72 ;
wire \soundBUZ|divideSOUND|cnt_p[10]~43 ;
wire \soundBUZ|divideSOUND|cnt_p[11]~41 ;
wire \soundBUZ|divideSOUND|cnt_p[11]~41COUT1_73 ;
wire \soundBUZ|divideSOUND|cnt_p[12]~39 ;
wire \soundBUZ|divideSOUND|cnt_p[12]~39COUT1_74 ;
wire \soundBUZ|divideSOUND|cnt_p[13]~37 ;
wire \soundBUZ|divideSOUND|cnt_p[13]~37COUT1_75 ;
wire \soundBUZ|divideSOUND|cnt_p[14]~35 ;
wire \soundBUZ|divideSOUND|cnt_p[14]~35COUT1_76 ;
wire \soundBUZ|divideSOUND|cnt_p[15]~31 ;
wire \soundBUZ|divideSOUND|cnt_p[16]~33 ;
wire \soundBUZ|divideSOUND|cnt_p[16]~33COUT1_77 ;
wire \soundBUZ|divideSOUND|cnt_p[17]~1 ;
wire \soundBUZ|divideSOUND|cnt_p[17]~1COUT1_78 ;
wire \soundBUZ|divideSOUND|cnt_p[18]~3 ;
wire \soundBUZ|divideSOUND|cnt_p[18]~3COUT1_79 ;
wire \soundBUZ|divideSOUND|cnt_p[19]~5 ;
wire \soundBUZ|divideSOUND|cnt_p[19]~5COUT1_80 ;
wire \soundBUZ|divideSOUND|cnt_p[20]~7 ;
wire \soundBUZ|divideSOUND|cnt_p[21]~9 ;
wire \soundBUZ|divideSOUND|cnt_p[21]~9COUT1_81 ;
wire \soundBUZ|divideSOUND|cnt_p[22]~11 ;
wire \soundBUZ|divideSOUND|cnt_p[22]~11COUT1_82 ;
wire \soundBUZ|divideSOUND|cnt_p[23]~13 ;
wire \soundBUZ|divideSOUND|cnt_p[23]~13COUT1_83 ;
wire \soundBUZ|divideSOUND|cnt_p[24]~15 ;
wire \soundBUZ|divideSOUND|cnt_p[24]~15COUT1_84 ;
wire \soundBUZ|divideSOUND|cnt_p[25]~17 ;
wire \soundBUZ|divideSOUND|cnt_p[26]~19 ;
wire \soundBUZ|divideSOUND|cnt_p[26]~19COUT1_85 ;
wire \soundBUZ|divideSOUND|cnt_p[27]~21 ;
wire \soundBUZ|divideSOUND|cnt_p[27]~21COUT1_86 ;
wire \soundBUZ|divideSOUND|cnt_p[28]~23 ;
wire \soundBUZ|divideSOUND|cnt_p[28]~23COUT1_87 ;
wire \soundBUZ|divideSOUND|cnt_p[29]~25 ;
wire \soundBUZ|divideSOUND|cnt_p[29]~25COUT1_88 ;
wire \soundBUZ|divideSOUND|cnt_p[30]~27 ;
wire \soundBUZ|divideSOUND|Equal0~15_combout ;
wire \soundBUZ|divideSOUND|Equal0~16_combout ;
wire \soundBUZ|divideSOUND|Add0~0_combout ;
wire \soundBUZ|divideSOUND|Equal0~0_combout ;
wire \soundBUZ|divideSOUND|Add0~10_combout ;
wire \soundBUZ|divideSOUND|Add0~5_combout ;
wire \soundBUZ|divideSOUND|Equal0~1_combout ;
wire \soundBUZ|divideSOUND|Add0~25_combout ;
wire \soundBUZ|divideSOUND|Add0~30_combout ;
wire \soundBUZ|divideSOUND|Equal0~3_combout ;
wire \soundBUZ|divideSOUND|Add0~15_combout ;
wire \soundBUZ|divideSOUND|Add0~20_combout ;
wire \soundBUZ|divideSOUND|Equal0~2_combout ;
wire \soundBUZ|divideSOUND|Equal0~4_combout ;
wire \soundBUZ|divideSOUND|Add0~40_combout ;
wire \soundBUZ|divideSOUND|Add0~35_combout ;
wire \soundBUZ|divideSOUND|Equal0~5_combout ;
wire \soundBUZ|divideSOUND|Add0~70_combout ;
wire \soundBUZ|divideSOUND|Add0~65_combout ;
wire \soundBUZ|divideSOUND|Equal0~8_combout ;
wire \soundBUZ|divideSOUND|Add0~50_combout ;
wire \soundBUZ|divideSOUND|Add0~45_combout ;
wire \soundBUZ|divideSOUND|Equal0~6_combout ;
wire \soundBUZ|divideSOUND|Add0~60_combout ;
wire \soundBUZ|divideSOUND|Add0~55_combout ;
wire \soundBUZ|divideSOUND|Equal0~7_combout ;
wire \soundBUZ|divideSOUND|Equal0~9_combout ;
wire \soundBUZ|divideSOUND|Equal0~12_combout ;
wire \soundBUZ|divideSOUND|Equal0~13_combout ;
wire \soundBUZ|divideSOUND|Add0~80_combout ;
wire \soundBUZ|divideSOUND|Add0~75_combout ;
wire \soundBUZ|divideSOUND|Equal0~10_combout ;
wire \soundBUZ|divideSOUND|Equal0~11_combout ;
wire \soundBUZ|divideSOUND|Equal0~14_combout ;
wire \soundBUZ|divideSOUND|Equal0~17_combout ;
wire \soundBUZ|divideSOUND|LessThan0~17_combout ;
wire \soundBUZ|divideSOUND|LessThan0~18_combout ;
wire \soundBUZ|divideSOUND|LessThan0~5_combout ;
wire \soundBUZ|divideSOUND|LessThan0~6_combout ;
wire \soundBUZ|divideSOUND|LessThan0~3_combout ;
wire \soundBUZ|divideSOUND|LessThan0~2_combout ;
wire \soundBUZ|divideSOUND|LessThan0~1_combout ;
wire \soundBUZ|divideSOUND|LessThan0~0_combout ;
wire \soundBUZ|divideSOUND|LessThan0~4_combout ;
wire \soundBUZ|divideSOUND|LessThan0~7_combout ;
wire \soundBUZ|divideSOUND|LessThan0~8_combout ;
wire \soundBUZ|divideSOUND|LessThan0~9_combout ;
wire \soundBUZ|divideSOUND|LessThan0~11_combout ;
wire \soundBUZ|divideSOUND|LessThan0~10_combout ;
wire \soundBUZ|divideSOUND|LessThan0~22_combout ;
wire \soundBUZ|divideSOUND|LessThan0~23_combout ;
wire \soundBUZ|divideSOUND|LessThan0~12_combout ;
wire \soundBUZ|divideSOUND|LessThan0~20_combout ;
wire \soundBUZ|divideSOUND|LessThan0~21_combout ;
wire \soundBUZ|divideSOUND|LessThan0~13_combout ;
wire \soundBUZ|divideSOUND|LessThan0~14_combout ;
wire \soundBUZ|divideSOUND|LessThan0~15_combout ;
wire \soundBUZ|divideSOUND|LessThan0~16_combout ;
wire \soundBUZ|divideSOUND|clk_p~regout ;
wire \soundBUZ|buz_sound~0_combout ;
wire \lattice_row[0]~reg0_regout ;
wire \lattice_row[1]~reg0_regout ;
wire \lattice_row[2]~reg0_regout ;
wire \lattice_row[3]~reg0_regout ;
wire \lattice_row[4]~reg0_regout ;
wire \lattice_row[5]~reg0_regout ;
wire \lattice_row[6]~reg0_regout ;
wire \lattice_row[7]~reg0_regout ;
wire \lat_Htimer[1]~1 ;
wire \lat_Htimer[1]~1COUT1_18 ;
wire \lat_Htimer[2]~3 ;
wire \lat_Htimer[2]~3COUT1_19 ;
wire \lat_Htimer[3]~5 ;
wire \lat_Htimer[3]~5COUT1_20 ;
wire \lat_Htimer[4]~7 ;
wire \lat_Htimer[4]~7COUT1_21 ;
wire \lat_Htimer[5]~9 ;
wire \lat_Htimer[6]~11 ;
wire \lat_Htimer[6]~11COUT1_22 ;
wire \lat_Htimer[7]~13 ;
wire \lat_Htimer[7]~13COUT1_23 ;
wire \lat_Hcnt[3]~0_combout ;
wire \lat_Hcnt[3]~1_combout ;
wire \lat_Hcnt[3]~2_combout ;
wire \lat_Hcnt[1]~3_combout ;
wire \Decoder3~0_combout ;
wire \EMPTY|Mux15~8_combout ;
wire \EMPTY|Mux15~7_combout ;
wire \EMPTY|Mux15~3_combout ;
wire \EMPTY|Mux15~33_combout ;
wire \EMPTY|Mux15~6_combout ;
wire \EMPTY|Mux15~9_combout ;
wire \EMPTY|Mux15~10_combout ;
wire \EMPTY|Mux15~11_combout ;
wire \EMPTY|Mux15~12_combout ;
wire \lattice_Rcol~0_combout ;
wire \lattice_Rcol~1_combout ;
wire \lattice_Rcol~2_combout ;
wire \lattice_Rcol~3_combout ;
wire \lattice_Rcol~4_combout ;
wire \EMPTY|Mux15~13_combout ;
wire \EMPTY|Mux15~14_combout ;
wire \lattice_Rcol~5_combout ;
wire \lattice_Rcol~6_combout ;
wire \EMPTY|lat_data_R~0_combout ;
wire \EMPTY|Mux15~15_combout ;
wire \EMPTY|Mux15~16_combout ;
wire \lattice_Rcol~7_combout ;
wire \lattice_Rcol~8_combout ;
wire \lattice_Rcol~9_combout ;
wire \lattice_Rcol~11_combout ;
wire \EMPTY|Mux15~17_combout ;
wire \EMPTY|Mux15~18_combout ;
wire \lattice_Rcol~10_combout ;
wire \lattice_Rcol~12_combout ;
wire \EMPTY|Mux15~19_combout ;
wire \lattice_Rcol~13_combout ;
wire \lattice_Rcol~14_combout ;
wire \EMPTY|Mux15~20_combout ;
wire \EMPTY|Mux15~21_combout ;
wire \lattice_Rcol~15_combout ;
wire \lattice_Rcol~16_combout ;
wire \EMPTY|lat_data_R~1_combout ;
wire \EMPTY|Mux15~23_combout ;
wire \EMPTY|Mux15~24_combout ;
wire \EMPTY|Mux15~25_combout ;
wire \EMPTY|Mux15~22_combout ;
wire \EMPTY|Mux15~26_combout ;
wire \lattice_Rcol~17_combout ;
wire \lattice_Rcol~18_combout ;
wire \lattice_Rcol~19_combout ;
wire \lattice_Rcol~20_combout ;
wire \lattice_Rcol~21_combout ;
wire \lattice_Rcol~22_combout ;
wire \EMPTY|Mux15~30_combout ;
wire \lattice_Gcol~0_combout ;
wire \lattice_Gcol~1_combout ;
wire \WELCOME|Mux0~6_combout ;
wire \EMPTY|Mux15~29_combout ;
wire \WELCOME|Mux0~7_combout ;
wire \lattice_Gcol~2_combout ;
wire \WELCOME|Mux0~21_combout ;
wire \WELCOME|Mux0~22_combout ;
wire \EMPTY|Mux15~27_combout ;
wire \EMPTY|Mux15~28_combout ;
wire \WELCOME|lat_data_G~0_combout ;
wire \WELCOME|Mux0~4_combout ;
wire \WELCOME|Mux0~5_combout ;
wire \lattice_Gcol~3_combout ;
wire \EMPTY|Mux15~31_combout ;
wire \WELCOME|Mux0~8_combout ;
wire \WELCOME|Mux0~9_combout ;
wire \lattice_Gcol~4_combout ;
wire \EMPTY|Mux15~32_combout ;
wire \WELCOME|Mux0~10_combout ;
wire \WELCOME|Mux0~11_combout ;
wire \lattice_Gcol~5_combout ;
wire \WELCOME|Mux0~12_combout ;
wire \WELCOME|Mux0~13_combout ;
wire \WELCOME|Mux0~14_combout ;
wire \lattice_Gcol~6_combout ;
wire \WELCOME|Mux0~15_combout ;
wire \WELCOME|Mux0~16_combout ;
wire \lattice_Gcol~7_combout ;
wire \WELCOME|Mux0~17_combout ;
wire \WELCOME|Mux0~18_combout ;
wire \lattice_Gcol~8_combout ;
wire \lattice_Gcol~9_combout ;
wire \WELCOME|lat_data_G~1_combout ;
wire \WELCOME|Mux0~19_combout ;
wire \WELCOME|Mux0~20_combout ;
wire \lattice_Gcol~10_combout ;
wire \lattice_Gcol~11_combout ;
wire \lattice_Gcol~12_combout ;
wire \lattice_Gcol~13_combout ;
wire \lattice_Gcol~14_combout ;
wire \LCD1602|cnt_500hz[0]~33 ;
wire \LCD1602|cnt_500hz[0]~33COUT1_42 ;
wire \LCD1602|cnt_500hz[1]~35 ;
wire \LCD1602|cnt_500hz[1]~35COUT1_43 ;
wire \LCD1602|cnt_500hz[2]~37 ;
wire \LCD1602|cnt_500hz[2]~37COUT1_44 ;
wire \LCD1602|cnt_500hz[3]~39 ;
wire \LCD1602|cnt_500hz[3]~39COUT1_45 ;
wire \LCD1602|cnt_500hz[4]~29 ;
wire \LCD1602|cnt_500hz[5]~31 ;
wire \LCD1602|cnt_500hz[5]~31COUT1_46 ;
wire \LCD1602|cnt_500hz[6]~27 ;
wire \LCD1602|cnt_500hz[6]~27COUT1_47 ;
wire \LCD1602|cnt_500hz[7]~25 ;
wire \LCD1602|cnt_500hz[7]~25COUT1_48 ;
wire \LCD1602|cnt_500hz[8]~21 ;
wire \LCD1602|cnt_500hz[8]~21COUT1_49 ;
wire \LCD1602|cnt_500hz[9]~23 ;
wire \LCD1602|cnt_500hz[10]~11 ;
wire \LCD1602|cnt_500hz[10]~11COUT1_50 ;
wire \LCD1602|cnt_500hz[11]~13 ;
wire \LCD1602|cnt_500hz[11]~13COUT1_51 ;
wire \LCD1602|cnt_500hz[12]~15 ;
wire \LCD1602|cnt_500hz[12]~15COUT1_52 ;
wire \LCD1602|cnt_500hz[13]~17 ;
wire \LCD1602|cnt_500hz[13]~17COUT1_53 ;
wire \LCD1602|cnt_500hz[14]~1 ;
wire \LCD1602|cnt_500hz[15]~19 ;
wire \LCD1602|cnt_500hz[15]~19COUT1_54 ;
wire \LCD1602|Equal1~2_combout ;
wire \LCD1602|Equal1~4_combout ;
wire \LCD1602|Equal1~5_combout ;
wire \LCD1602|Equal1~1_combout ;
wire \LCD1602|cnt_500hz[16]~3 ;
wire \LCD1602|cnt_500hz[16]~3COUT1_55 ;
wire \LCD1602|cnt_500hz[17]~5 ;
wire \LCD1602|cnt_500hz[17]~5COUT1_56 ;
wire \LCD1602|cnt_500hz[18]~7 ;
wire \LCD1602|cnt_500hz[18]~7COUT1_57 ;
wire \LCD1602|Equal1~0_combout ;
wire \LCD1602|Equal1~3_combout ;
wire \LCD1602|Equal1~6_combout ;
wire \LCD1602|cnt_20ms[1]~9 ;
wire \LCD1602|cnt_20ms[1]~9COUT1_40 ;
wire \LCD1602|cnt_20ms[2]~11 ;
wire \LCD1602|cnt_20ms[2]~11COUT1_41 ;
wire \LCD1602|cnt_20ms[3]~13 ;
wire \LCD1602|cnt_20ms[3]~13COUT1_42 ;
wire \LCD1602|cnt_20ms[4]~15 ;
wire \LCD1602|cnt_20ms[5]~17 ;
wire \LCD1602|cnt_20ms[5]~17COUT1_43 ;
wire \LCD1602|cnt_20ms[6]~19 ;
wire \LCD1602|cnt_20ms[6]~19COUT1_44 ;
wire \LCD1602|cnt_20ms[7]~21 ;
wire \LCD1602|cnt_20ms[7]~21COUT1_45 ;
wire \LCD1602|cnt_20ms[8]~25 ;
wire \LCD1602|cnt_20ms[8]~25COUT1_46 ;
wire \LCD1602|cnt_20ms[9]~23 ;
wire \LCD1602|cnt_20ms[10]~27 ;
wire \LCD1602|cnt_20ms[10]~27COUT1_47 ;
wire \LCD1602|cnt_20ms[11]~29 ;
wire \LCD1602|cnt_20ms[11]~29COUT1_48 ;
wire \LCD1602|cnt_20ms[12]~33 ;
wire \LCD1602|cnt_20ms[12]~33COUT1_49 ;
wire \LCD1602|cnt_20ms[13]~35 ;
wire \LCD1602|cnt_20ms[13]~35COUT1_50 ;
wire \LCD1602|cnt_20ms[14]~31 ;
wire \LCD1602|Equal0~5_combout ;
wire \LCD1602|cnt_20ms[15]~37 ;
wire \LCD1602|cnt_20ms[15]~37COUT1_51 ;
wire \LCD1602|cnt_20ms[16]~1 ;
wire \LCD1602|cnt_20ms[16]~1COUT1_52 ;
wire \LCD1602|cnt_20ms[17]~3 ;
wire \LCD1602|cnt_20ms[17]~3COUT1_53 ;
wire \LCD1602|cnt_20ms[18]~5 ;
wire \LCD1602|cnt_20ms[18]~5COUT1_54 ;
wire \LCD1602|Equal0~0_combout ;
wire \LCD1602|Equal0~4_combout ;
wire \LCD1602|Equal0~2_combout ;
wire \LCD1602|Equal0~1_combout ;
wire \LCD1602|Equal0~3_combout ;
wire \LCD1602|Equal0~6_combout ;
wire \LCD1602|cnt_500hz[1]~40_combout ;
wire \LCD1602|LessThan0~0_combout ;
wire \LCD1602|LessThan0~1_combout ;
wire \LCD1602|LessThan0~2_combout ;
wire \LCD1602|LessThan0~3_combout ;
wire \LCD1602|Selector7~10 ;
wire \people2_price[0][0]~1_combout ;
wire \people1_price[1][0]~regout ;
wire \comb~1_combout ;
wire \LCD1602|c_state.IDLE~regout ;
wire \LCD1602|c_state.SET_FUNCTION~regout ;
wire \LCD1602|c_state.ROW1_1~regout ;
wire \LCD1602|c_state.ROW1_2~regout ;
wire \LCD1602|c_state.ROW1_3~regout ;
wire \LCD1602|c_state.ROW2_C~regout ;
wire \LCD1602|c_state.ROW2_D~regout ;
wire \people2_price[0][0]~0_combout ;
wire \people2_price[0][0]~regout ;
wire \LCD1602|c_state.ROW2_E~regout ;
wire \LCD1602|c_state.ROW2_F~regout ;
wire \LCD1602|n_state~0 ;
wire \LCD1602|c_state.DISP_CLEAR~regout ;
wire \LCD1602|Selector4~15 ;
wire \LCD1602|c_state.ENTRY_MODE~regout ;
wire \LCD1602|Selector2~0 ;
wire \LCD1602|c_state.ROW1_4~regout ;
wire \LCD1602|c_state.ROW1_5~regout ;
wire \LCD1602|Selector6~2 ;
wire \LCD1602|Selector6~3 ;
wire \LCD1602|Selector6~4 ;
wire \LCD1602|Selector6~1 ;
wire \LCD1602|Selector6~5_combout ;
wire \LCD1602|c_state.ROW1_C~regout ;
wire \LCD1602|c_state.ROW1_D~regout ;
wire \LCD1602|c_state.ROW1_E~regout ;
wire \LCD1602|Selector7~4 ;
wire \LCD1602|c_state.ROW1_F~regout ;
wire \LCD1602|c_state.ROW2_ADDR~regout ;
wire \LCD1602|c_state.ROW2_0~regout ;
wire \LCD1602|c_state.ROW2_1~regout ;
wire \LCD1602|c_state.ROW2_2~regout ;
wire \LCD1602|c_state.ROW2_5~regout ;
wire \comb~0_combout ;
wire \LCD1602|c_state.ROW2_6~regout ;
wire \people1_price[0][0]~regout ;
wire \LCD1602|c_state.ROW2_7~regout ;
wire \LCD1602|c_state.ROW2_9~regout ;
wire \LCD1602|c_state.ROW2_A~regout ;
wire \people2_price[0][1]~regout ;
wire \LCD1602|Selector6~7 ;
wire \people1_price[0][1]~regout ;
wire \LCD1602|Selector6~8 ;
wire \LCD1602|c_state.ROW2_B~regout ;
wire \LCD1602|c_state.ROW1_6~regout ;
wire \LCD1602|c_state.ROW1_7~regout ;
wire \LCD1602|c_state.ROW1_8~regout ;
wire \LCD1602|c_state.ROW1_9~regout ;
wire \LCD1602|c_state.ROW2_3~regout ;
wire \LCD1602|c_state.ROW2_4~regout ;
wire \LCD1602|Selector1~0 ;
wire \LCD1602|c_state.ROW2_8~regout ;
wire \LCD1602|c_state.ROW1_B~regout ;
wire \LCD1602|c_state.ROW1_0~regout ;
wire \LCD1602|c_state.ROW1_ADDR~regout ;
wire \LCD1602|c_state.ROW1_A~regout ;
wire \LCD1602|Selector2~8 ;
wire \LCD1602|Selector2~1_combout ;
wire \LCD1602|c_state.DISP_OFF~regout ;
wire \LCD1602|LCD_RS~regout ;
wire \LCD1602|Selector7~1 ;
wire \LCD1602|Selector7~2_combout ;
wire \LCD1602|Selector7~0 ;
wire \LCD1602|Selector7~3_combout ;
wire \LCD1602|Selector7~14_combout ;
wire \LCD1602|Selector7~15_combout ;
wire \LCD1602|Selector7~17_combout ;
wire \LCD1602|Selector7~16_combout ;
wire \LCD1602|Selector7~18_combout ;
wire \LCD1602|Selector7~12 ;
wire \LCD1602|Selector6~0_combout ;
wire \LCD1602|Selector7~11 ;
wire \LCD1602|Selector7~13_combout ;
wire \LCD1602|Selector7~6 ;
wire \people2_price[1][0]~regout ;
wire \LCD1602|Selector7~7_combout ;
wire \LCD1602|Selector7~8 ;
wire \LCD1602|Selector7~5 ;
wire \LCD1602|Selector7~9_combout ;
wire \LCD1602|Selector6~16 ;
wire \LCD1602|Selector6~17_combout ;
wire \LCD1602|Selector6~11 ;
wire \LCD1602|Selector6~12_combout ;
wire \LCD1602|Selector6~14 ;
wire \LCD1602|Selector6~13_combout ;
wire \LCD1602|Selector6~15_combout ;
wire \LCD1602|Selector6~9 ;
wire \LCD1602|Selector6~6 ;
wire \LCD1602|Selector6~10_combout ;
wire \LCD1602|Selector2~3 ;
wire \LCD1602|Selector2~2 ;
wire \LCD1602|Selector5~0_combout ;
wire \people1_price[0][2]~regout ;
wire \LCD1602|Selector5~2 ;
wire \people2_price[0][2]~regout ;
wire \LCD1602|Selector5~1 ;
wire \LCD1602|Selector5~3_combout ;
wire \LCD1602|Selector5~6 ;
wire \LCD1602|Selector5~5 ;
wire \LCD1602|Selector5~4 ;
wire \LCD1602|Selector5~7_combout ;
wire \LCD1602|Selector5~12_combout ;
wire \people1_price[2][2]~regout ;
wire \LCD1602|Selector5~13 ;
wire \LCD1602|Selector5~14_combout ;
wire \LCD1602|Selector5~15_combout ;
wire \LCD1602|Selector5~8_combout ;
wire \LCD1602|Selector5~9_combout ;
wire \LCD1602|Selector5~10 ;
wire \LCD1602|Selector5~11_combout ;
wire \LCD1602|Selector5~16_combout ;
wire \people2_price[0][3]~regout ;
wire \LCD1602|Selector4~6 ;
wire \people1_price[0][3]~regout ;
wire \LCD1602|Selector4~7 ;
wire \LCD1602|Selector4~8_combout ;
wire \LCD1602|Selector4~9_combout ;
wire \LCD1602|Selector4~10_combout ;
wire \LCD1602|Selector4~11_combout ;
wire \LCD1602|Selector4~1_combout ;
wire \LCD1602|Selector4~2 ;
wire \LCD1602|Selector4~0 ;
wire \LCD1602|Selector4~3 ;
wire \LCD1602|Selector4~4_combout ;
wire \LCD1602|Selector4~5_combout ;
wire \LCD1602|Selector4~14_combout ;
wire \LCD1602|Selector4~13_combout ;
wire \LCD1602|Selector4~16 ;
wire \LCD1602|Selector4~12 ;
wire \LCD1602|Selector4~17_combout ;
wire \LCD1602|Selector3~6_combout ;
wire \LCD1602|Selector3~0 ;
wire \LCD1602|Selector3~1 ;
wire \LCD1602|Selector3~2_combout ;
wire \LCD1602|Selector3~4 ;
wire \LCD1602|Selector3~3 ;
wire \LCD1602|Selector3~5_combout ;
wire \LCD1602|Selector2~9 ;
wire \LCD1602|Selector2~4 ;
wire \LCD1602|Selector2~5 ;
wire \LCD1602|Selector2~6_combout ;
wire \LCD1602|Selector2~7_combout ;
wire \LCD1602|Selector4~19_combout ;
wire \LCD1602|Selector1~1 ;
wire \LCD1602|Selector1~2_combout ;
wire \LCD1602|c_state.DISP_ON~regout ;
wire [9:0] mile_mcnt;
wire [19:0] \LCD1602|cnt_500hz ;
wire [17:0] \waitingKEY|cnt ;
wire [2:0] lat_Vcnt;
wire [2:0] seg_cnt;
wire [2:0] mile_speed;
wire [7:0] \LCD1602|LCD_DATA ;
wire [3:0] lat_Hcnt;
wire [1:0] sub_cnt;
wire [2:0] \mile_v~combout ;
wire [9:0] wait_mcnt;
wire [6:0] mile_cnt;
wire [3:0] wait_cnt;
wire [31:0] \soundBUZ|divideSOUND|cnt_p ;
wire [3:0] snd_status;
wire [8:0] sound_cnt;
wire [8:0] lat_Htimer;
wire [17:0] \stoppedKEY|cnt ;
wire [19:0] \LCD1602|cnt_20ms ;
wire [3:0] night_cnt;
wire [31:0] \divide1000|cnt_p ;
wire [17:0] \subKEY|cnt ;


// Location: PIN_18,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X12_Y4_N4
maxii_lcell \divide1000|Add0~155 (
// Equation(s):
// \divide1000|Add0~155_combout  = ((!\divide1000|cnt_p [0]))
// \divide1000|Add0~157  = CARRY(((\divide1000|cnt_p [0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~155_combout ),
	.regout(),
	.cout(\divide1000|Add0~157 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Add0~155 .lut_mask = "33cc";
defparam \divide1000|Add0~155 .operation_mode = "arithmetic";
defparam \divide1000|Add0~155 .output_mode = "comb_only";
defparam \divide1000|Add0~155 .register_cascade_mode = "off";
defparam \divide1000|Add0~155 .sum_lutc_input = "datac";
defparam \divide1000|Add0~155 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_124,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \rst~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\rst~combout ),
	.padio(rst));
// synopsys translate_off
defparam \rst~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X11_Y4_N7
maxii_lcell \divide1000|cnt_p[0] (
// Equation(s):
// \divide1000|cnt_p [0] = DFFEAS((((\divide1000|Add0~155_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~155_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[0] .lut_mask = "ff00";
defparam \divide1000|cnt_p[0] .operation_mode = "normal";
defparam \divide1000|cnt_p[0] .output_mode = "reg_only";
defparam \divide1000|cnt_p[0] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[0] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y4_N5
maxii_lcell \divide1000|Add0~150 (
// Equation(s):
// \divide1000|Add0~150_combout  = (\divide1000|cnt_p [1] $ ((\divide1000|Add0~157 )))
// \divide1000|Add0~152  = CARRY(((!\divide1000|Add0~157 ) # (!\divide1000|cnt_p [1])))
// \divide1000|Add0~152COUT1_161  = CARRY(((!\divide1000|Add0~157 ) # (!\divide1000|cnt_p [1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~157 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~150_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~152 ),
	.cout1(\divide1000|Add0~152COUT1_161 ));
// synopsys translate_off
defparam \divide1000|Add0~150 .cin_used = "true";
defparam \divide1000|Add0~150 .lut_mask = "3c3f";
defparam \divide1000|Add0~150 .operation_mode = "arithmetic";
defparam \divide1000|Add0~150 .output_mode = "comb_only";
defparam \divide1000|Add0~150 .register_cascade_mode = "off";
defparam \divide1000|Add0~150 .sum_lutc_input = "cin";
defparam \divide1000|Add0~150 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N8
maxii_lcell \divide1000|cnt_p[1] (
// Equation(s):
// \divide1000|cnt_p [1] = DFFEAS((((\divide1000|Add0~150_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~150_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[1] .lut_mask = "ff00";
defparam \divide1000|cnt_p[1] .operation_mode = "normal";
defparam \divide1000|cnt_p[1] .output_mode = "reg_only";
defparam \divide1000|cnt_p[1] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[1] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y4_N0
maxii_lcell \divide1000|Add0~115 (
// Equation(s):
// \divide1000|Add0~115_combout  = (\divide1000|cnt_p [6] $ ((!\divide1000|Add0~112 )))
// \divide1000|Add0~117  = CARRY(((\divide1000|cnt_p [6] & !\divide1000|Add0~112 )))
// \divide1000|Add0~117COUT1_165  = CARRY(((\divide1000|cnt_p [6] & !\divide1000|Add0~112 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~112 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~115_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~117 ),
	.cout1(\divide1000|Add0~117COUT1_165 ));
// synopsys translate_off
defparam \divide1000|Add0~115 .cin_used = "true";
defparam \divide1000|Add0~115 .lut_mask = "c30c";
defparam \divide1000|Add0~115 .operation_mode = "arithmetic";
defparam \divide1000|Add0~115 .output_mode = "comb_only";
defparam \divide1000|Add0~115 .register_cascade_mode = "off";
defparam \divide1000|Add0~115 .sum_lutc_input = "cin";
defparam \divide1000|Add0~115 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y4_N5
maxii_lcell \divide1000|Add0~90 (
// Equation(s):
// \divide1000|Add0~90_combout  = \divide1000|cnt_p [11] $ ((((\divide1000|Add0~97 ))))
// \divide1000|Add0~92  = CARRY(((!\divide1000|Add0~97 )) # (!\divide1000|cnt_p [11]))
// \divide1000|Add0~92COUT1_169  = CARRY(((!\divide1000|Add0~97 )) # (!\divide1000|cnt_p [11]))

	.clk(gnd),
	.dataa(\divide1000|cnt_p [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~97 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~90_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~92 ),
	.cout1(\divide1000|Add0~92COUT1_169 ));
// synopsys translate_off
defparam \divide1000|Add0~90 .cin_used = "true";
defparam \divide1000|Add0~90 .lut_mask = "5a5f";
defparam \divide1000|Add0~90 .operation_mode = "arithmetic";
defparam \divide1000|Add0~90 .output_mode = "comb_only";
defparam \divide1000|Add0~90 .register_cascade_mode = "off";
defparam \divide1000|Add0~90 .sum_lutc_input = "cin";
defparam \divide1000|Add0~90 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y4_N6
maxii_lcell \divide1000|Add0~85 (
// Equation(s):
// \divide1000|Add0~85_combout  = \divide1000|cnt_p [12] $ ((((!(!\divide1000|Add0~97  & \divide1000|Add0~92 ) # (\divide1000|Add0~97  & \divide1000|Add0~92COUT1_169 )))))
// \divide1000|Add0~87  = CARRY((\divide1000|cnt_p [12] & ((!\divide1000|Add0~92 ))))
// \divide1000|Add0~87COUT1_170  = CARRY((\divide1000|cnt_p [12] & ((!\divide1000|Add0~92COUT1_169 ))))

	.clk(gnd),
	.dataa(\divide1000|cnt_p [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~97 ),
	.cin0(\divide1000|Add0~92 ),
	.cin1(\divide1000|Add0~92COUT1_169 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~85_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~87 ),
	.cout1(\divide1000|Add0~87COUT1_170 ));
// synopsys translate_off
defparam \divide1000|Add0~85 .cin0_used = "true";
defparam \divide1000|Add0~85 .cin1_used = "true";
defparam \divide1000|Add0~85 .cin_used = "true";
defparam \divide1000|Add0~85 .lut_mask = "a50a";
defparam \divide1000|Add0~85 .operation_mode = "arithmetic";
defparam \divide1000|Add0~85 .output_mode = "comb_only";
defparam \divide1000|Add0~85 .register_cascade_mode = "off";
defparam \divide1000|Add0~85 .sum_lutc_input = "cin";
defparam \divide1000|Add0~85 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N7
maxii_lcell \divide1000|cnt_p[12] (
// Equation(s):
// \divide1000|LessThan0~0  = (!\divide1000|cnt_p [11] & (!\divide1000|cnt_p [9] & (!D1_cnt_p[12] & !\divide1000|cnt_p [10])))
// \divide1000|cnt_p [12] = DFFEAS(\divide1000|LessThan0~0 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~85_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [11]),
	.datab(\divide1000|cnt_p [9]),
	.datac(\divide1000|Add0~85_combout ),
	.datad(\divide1000|cnt_p [10]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|LessThan0~0 ),
	.regout(\divide1000|cnt_p [12]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[12] .lut_mask = "0001";
defparam \divide1000|cnt_p[12] .operation_mode = "normal";
defparam \divide1000|cnt_p[12] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[12] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[12] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y4_N2
maxii_lcell \divide1000|cnt_p[11] (
// Equation(s):
// \divide1000|Equal0~5  = (\divide1000|cnt_p [15] & (!\divide1000|cnt_p [12] & (!D1_cnt_p[11] & !\divide1000|cnt_p [10])))
// \divide1000|cnt_p [11] = DFFEAS(\divide1000|Equal0~5 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~90_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [15]),
	.datab(\divide1000|cnt_p [12]),
	.datac(\divide1000|Add0~90_combout ),
	.datad(\divide1000|cnt_p [10]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~5 ),
	.regout(\divide1000|cnt_p [11]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[11] .lut_mask = "0002";
defparam \divide1000|cnt_p[11] .operation_mode = "normal";
defparam \divide1000|cnt_p[11] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[11] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[11] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y4_N1
maxii_lcell \divide1000|Add0~125 (
// Equation(s):
// \divide1000|Add0~125_combout  = (\divide1000|cnt_p [7] $ (((!\divide1000|Add0~112  & \divide1000|Add0~117 ) # (\divide1000|Add0~112  & \divide1000|Add0~117COUT1_165 ))))
// \divide1000|Add0~127  = CARRY(((!\divide1000|Add0~117 ) # (!\divide1000|cnt_p [7])))
// \divide1000|Add0~127COUT1_166  = CARRY(((!\divide1000|Add0~117COUT1_165 ) # (!\divide1000|cnt_p [7])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~112 ),
	.cin0(\divide1000|Add0~117 ),
	.cin1(\divide1000|Add0~117COUT1_165 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~125_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~127 ),
	.cout1(\divide1000|Add0~127COUT1_166 ));
// synopsys translate_off
defparam \divide1000|Add0~125 .cin0_used = "true";
defparam \divide1000|Add0~125 .cin1_used = "true";
defparam \divide1000|Add0~125 .cin_used = "true";
defparam \divide1000|Add0~125 .lut_mask = "3c3f";
defparam \divide1000|Add0~125 .operation_mode = "arithmetic";
defparam \divide1000|Add0~125 .output_mode = "comb_only";
defparam \divide1000|Add0~125 .register_cascade_mode = "off";
defparam \divide1000|Add0~125 .sum_lutc_input = "cin";
defparam \divide1000|Add0~125 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y4_N6
maxii_lcell \divide1000|Add0~145 (
// Equation(s):
// \divide1000|Add0~145_combout  = \divide1000|cnt_p [2] $ ((((!(!\divide1000|Add0~157  & \divide1000|Add0~152 ) # (\divide1000|Add0~157  & \divide1000|Add0~152COUT1_161 )))))
// \divide1000|Add0~147  = CARRY((\divide1000|cnt_p [2] & ((!\divide1000|Add0~152 ))))
// \divide1000|Add0~147COUT1_162  = CARRY((\divide1000|cnt_p [2] & ((!\divide1000|Add0~152COUT1_161 ))))

	.clk(gnd),
	.dataa(\divide1000|cnt_p [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~157 ),
	.cin0(\divide1000|Add0~152 ),
	.cin1(\divide1000|Add0~152COUT1_161 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~145_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~147 ),
	.cout1(\divide1000|Add0~147COUT1_162 ));
// synopsys translate_off
defparam \divide1000|Add0~145 .cin0_used = "true";
defparam \divide1000|Add0~145 .cin1_used = "true";
defparam \divide1000|Add0~145 .cin_used = "true";
defparam \divide1000|Add0~145 .lut_mask = "a50a";
defparam \divide1000|Add0~145 .operation_mode = "arithmetic";
defparam \divide1000|Add0~145 .output_mode = "comb_only";
defparam \divide1000|Add0~145 .register_cascade_mode = "off";
defparam \divide1000|Add0~145 .sum_lutc_input = "cin";
defparam \divide1000|Add0~145 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y4_N7
maxii_lcell \divide1000|Add0~105 (
// Equation(s):
// \divide1000|Add0~105_combout  = \divide1000|cnt_p [3] $ (((((!\divide1000|Add0~157  & \divide1000|Add0~147 ) # (\divide1000|Add0~157  & \divide1000|Add0~147COUT1_162 )))))
// \divide1000|Add0~107  = CARRY(((!\divide1000|Add0~147 )) # (!\divide1000|cnt_p [3]))
// \divide1000|Add0~107COUT1_163  = CARRY(((!\divide1000|Add0~147COUT1_162 )) # (!\divide1000|cnt_p [3]))

	.clk(gnd),
	.dataa(\divide1000|cnt_p [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~157 ),
	.cin0(\divide1000|Add0~147 ),
	.cin1(\divide1000|Add0~147COUT1_162 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~105_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~107 ),
	.cout1(\divide1000|Add0~107COUT1_163 ));
// synopsys translate_off
defparam \divide1000|Add0~105 .cin0_used = "true";
defparam \divide1000|Add0~105 .cin1_used = "true";
defparam \divide1000|Add0~105 .cin_used = "true";
defparam \divide1000|Add0~105 .lut_mask = "5a5f";
defparam \divide1000|Add0~105 .operation_mode = "arithmetic";
defparam \divide1000|Add0~105 .output_mode = "comb_only";
defparam \divide1000|Add0~105 .register_cascade_mode = "off";
defparam \divide1000|Add0~105 .sum_lutc_input = "cin";
defparam \divide1000|Add0~105 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N9
maxii_lcell \divide1000|cnt_p[3] (
// Equation(s):
// \divide1000|LessThan0~1  = (!\divide1000|cnt_p [6] & (((!D1_cnt_p[3] & !\divide1000|cnt_p [4])) # (!\divide1000|cnt_p [5])))
// \divide1000|cnt_p [3] = DFFEAS(\divide1000|LessThan0~1 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~105_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [5]),
	.datab(\divide1000|cnt_p [6]),
	.datac(\divide1000|Add0~105_combout ),
	.datad(\divide1000|cnt_p [4]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|LessThan0~1 ),
	.regout(\divide1000|cnt_p [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[3] .lut_mask = "1113";
defparam \divide1000|cnt_p[3] .operation_mode = "normal";
defparam \divide1000|cnt_p[3] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[3] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[3] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y4_N1
maxii_lcell \divide1000|cnt_p[7] (
// Equation(s):
// \divide1000|LessThan0~2  = (\divide1000|LessThan0~0  & (((\divide1000|LessThan0~1 ) # (!D1_cnt_p[7])) # (!\divide1000|cnt_p [8])))
// \divide1000|cnt_p [7] = DFFEAS(\divide1000|LessThan0~2 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~125_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [8]),
	.datab(\divide1000|LessThan0~0 ),
	.datac(\divide1000|Add0~125_combout ),
	.datad(\divide1000|LessThan0~1 ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|LessThan0~2 ),
	.regout(\divide1000|cnt_p [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[7] .lut_mask = "cc4c";
defparam \divide1000|cnt_p[7] .operation_mode = "normal";
defparam \divide1000|cnt_p[7] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[7] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[7] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y4_N2
maxii_lcell \divide1000|Add0~120 (
// Equation(s):
// \divide1000|Add0~120_combout  = (\divide1000|cnt_p [8] $ ((!(!\divide1000|Add0~112  & \divide1000|Add0~127 ) # (\divide1000|Add0~112  & \divide1000|Add0~127COUT1_166 ))))
// \divide1000|Add0~122  = CARRY(((\divide1000|cnt_p [8] & !\divide1000|Add0~127 )))
// \divide1000|Add0~122COUT1_167  = CARRY(((\divide1000|cnt_p [8] & !\divide1000|Add0~127COUT1_166 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~112 ),
	.cin0(\divide1000|Add0~127 ),
	.cin1(\divide1000|Add0~127COUT1_166 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~120_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~122 ),
	.cout1(\divide1000|Add0~122COUT1_167 ));
// synopsys translate_off
defparam \divide1000|Add0~120 .cin0_used = "true";
defparam \divide1000|Add0~120 .cin1_used = "true";
defparam \divide1000|Add0~120 .cin_used = "true";
defparam \divide1000|Add0~120 .lut_mask = "c30c";
defparam \divide1000|Add0~120 .operation_mode = "arithmetic";
defparam \divide1000|Add0~120 .output_mode = "comb_only";
defparam \divide1000|Add0~120 .register_cascade_mode = "off";
defparam \divide1000|Add0~120 .sum_lutc_input = "cin";
defparam \divide1000|Add0~120 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y4_N3
maxii_lcell \divide1000|Add0~80 (
// Equation(s):
// \divide1000|Add0~80_combout  = (\divide1000|cnt_p [9] $ (((!\divide1000|Add0~112  & \divide1000|Add0~122 ) # (\divide1000|Add0~112  & \divide1000|Add0~122COUT1_167 ))))
// \divide1000|Add0~82  = CARRY(((!\divide1000|Add0~122 ) # (!\divide1000|cnt_p [9])))
// \divide1000|Add0~82COUT1_168  = CARRY(((!\divide1000|Add0~122COUT1_167 ) # (!\divide1000|cnt_p [9])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~112 ),
	.cin0(\divide1000|Add0~122 ),
	.cin1(\divide1000|Add0~122COUT1_167 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~80_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~82 ),
	.cout1(\divide1000|Add0~82COUT1_168 ));
// synopsys translate_off
defparam \divide1000|Add0~80 .cin0_used = "true";
defparam \divide1000|Add0~80 .cin1_used = "true";
defparam \divide1000|Add0~80 .cin_used = "true";
defparam \divide1000|Add0~80 .lut_mask = "3c3f";
defparam \divide1000|Add0~80 .operation_mode = "arithmetic";
defparam \divide1000|Add0~80 .output_mode = "comb_only";
defparam \divide1000|Add0~80 .register_cascade_mode = "off";
defparam \divide1000|Add0~80 .sum_lutc_input = "cin";
defparam \divide1000|Add0~80 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N1
maxii_lcell \divide1000|cnt_p[9] (
// Equation(s):
// \divide1000|cnt_p [9] = DFFEAS(((\divide1000|Add0~80_combout  & ((!\divide1000|Equal0~4_combout ) # (!\divide1000|Equal0~9_combout )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\divide1000|Equal0~9_combout ),
	.datab(vcc),
	.datac(\divide1000|Equal0~4_combout ),
	.datad(\divide1000|Add0~80_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[9] .lut_mask = "5f00";
defparam \divide1000|cnt_p[9] .operation_mode = "normal";
defparam \divide1000|cnt_p[9] .output_mode = "reg_only";
defparam \divide1000|cnt_p[9] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[9] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[9] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y4_N4
maxii_lcell \divide1000|Add0~95 (
// Equation(s):
// \divide1000|Add0~95_combout  = (\divide1000|cnt_p [10] $ ((!(!\divide1000|Add0~112  & \divide1000|Add0~82 ) # (\divide1000|Add0~112  & \divide1000|Add0~82COUT1_168 ))))
// \divide1000|Add0~97  = CARRY(((\divide1000|cnt_p [10] & !\divide1000|Add0~82COUT1_168 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~112 ),
	.cin0(\divide1000|Add0~82 ),
	.cin1(\divide1000|Add0~82COUT1_168 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~95_combout ),
	.regout(),
	.cout(\divide1000|Add0~97 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Add0~95 .cin0_used = "true";
defparam \divide1000|Add0~95 .cin1_used = "true";
defparam \divide1000|Add0~95 .cin_used = "true";
defparam \divide1000|Add0~95 .lut_mask = "c30c";
defparam \divide1000|Add0~95 .operation_mode = "arithmetic";
defparam \divide1000|Add0~95 .output_mode = "comb_only";
defparam \divide1000|Add0~95 .register_cascade_mode = "off";
defparam \divide1000|Add0~95 .sum_lutc_input = "cin";
defparam \divide1000|Add0~95 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N9
maxii_lcell \divide1000|cnt_p[10] (
// Equation(s):
// \divide1000|cnt_p [10] = DFFEAS(GND, GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~95_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\divide1000|Add0~95_combout ),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [10]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[10] .lut_mask = "0000";
defparam \divide1000|cnt_p[10] .operation_mode = "normal";
defparam \divide1000|cnt_p[10] .output_mode = "reg_only";
defparam \divide1000|cnt_p[10] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[10] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y4_N7
maxii_lcell \divide1000|Add0~135 (
// Equation(s):
// \divide1000|Add0~135_combout  = \divide1000|cnt_p [13] $ (((((!\divide1000|Add0~97  & \divide1000|Add0~87 ) # (\divide1000|Add0~97  & \divide1000|Add0~87COUT1_170 )))))
// \divide1000|Add0~137  = CARRY(((!\divide1000|Add0~87 )) # (!\divide1000|cnt_p [13]))
// \divide1000|Add0~137COUT1_171  = CARRY(((!\divide1000|Add0~87COUT1_170 )) # (!\divide1000|cnt_p [13]))

	.clk(gnd),
	.dataa(\divide1000|cnt_p [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~97 ),
	.cin0(\divide1000|Add0~87 ),
	.cin1(\divide1000|Add0~87COUT1_170 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~135_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~137 ),
	.cout1(\divide1000|Add0~137COUT1_171 ));
// synopsys translate_off
defparam \divide1000|Add0~135 .cin0_used = "true";
defparam \divide1000|Add0~135 .cin1_used = "true";
defparam \divide1000|Add0~135 .cin_used = "true";
defparam \divide1000|Add0~135 .lut_mask = "5a5f";
defparam \divide1000|Add0~135 .operation_mode = "arithmetic";
defparam \divide1000|Add0~135 .output_mode = "comb_only";
defparam \divide1000|Add0~135 .register_cascade_mode = "off";
defparam \divide1000|Add0~135 .sum_lutc_input = "cin";
defparam \divide1000|Add0~135 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y4_N8
maxii_lcell \divide1000|Add0~130 (
// Equation(s):
// \divide1000|Add0~130_combout  = \divide1000|cnt_p [14] $ ((((!(!\divide1000|Add0~97  & \divide1000|Add0~137 ) # (\divide1000|Add0~97  & \divide1000|Add0~137COUT1_171 )))))
// \divide1000|Add0~132  = CARRY((\divide1000|cnt_p [14] & ((!\divide1000|Add0~137 ))))
// \divide1000|Add0~132COUT1_172  = CARRY((\divide1000|cnt_p [14] & ((!\divide1000|Add0~137COUT1_171 ))))

	.clk(gnd),
	.dataa(\divide1000|cnt_p [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~97 ),
	.cin0(\divide1000|Add0~137 ),
	.cin1(\divide1000|Add0~137COUT1_171 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~130_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~132 ),
	.cout1(\divide1000|Add0~132COUT1_172 ));
// synopsys translate_off
defparam \divide1000|Add0~130 .cin0_used = "true";
defparam \divide1000|Add0~130 .cin1_used = "true";
defparam \divide1000|Add0~130 .cin_used = "true";
defparam \divide1000|Add0~130 .lut_mask = "a50a";
defparam \divide1000|Add0~130 .operation_mode = "arithmetic";
defparam \divide1000|Add0~130 .output_mode = "comb_only";
defparam \divide1000|Add0~130 .register_cascade_mode = "off";
defparam \divide1000|Add0~130 .sum_lutc_input = "cin";
defparam \divide1000|Add0~130 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y4_N1
maxii_lcell \divide1000|cnt_p[14] (
// Equation(s):
// \divide1000|cnt_p [14] = DFFEAS(((\divide1000|Add0~130_combout  & ((!\divide1000|Equal0~9_combout ) # (!\divide1000|Equal0~4_combout )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\divide1000|Equal0~4_combout ),
	.datab(vcc),
	.datac(\divide1000|Equal0~9_combout ),
	.datad(\divide1000|Add0~130_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [14]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[14] .lut_mask = "5f00";
defparam \divide1000|cnt_p[14] .operation_mode = "normal";
defparam \divide1000|cnt_p[14] .output_mode = "reg_only";
defparam \divide1000|cnt_p[14] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[14] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[14] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y4_N9
maxii_lcell \divide1000|Add0~140 (
// Equation(s):
// \divide1000|Add0~140_combout  = (\divide1000|cnt_p [15] $ (((!\divide1000|Add0~97  & \divide1000|Add0~132 ) # (\divide1000|Add0~97  & \divide1000|Add0~132COUT1_172 ))))
// \divide1000|Add0~142  = CARRY(((!\divide1000|Add0~132COUT1_172 ) # (!\divide1000|cnt_p [15])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~97 ),
	.cin0(\divide1000|Add0~132 ),
	.cin1(\divide1000|Add0~132COUT1_172 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~140_combout ),
	.regout(),
	.cout(\divide1000|Add0~142 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Add0~140 .cin0_used = "true";
defparam \divide1000|Add0~140 .cin1_used = "true";
defparam \divide1000|Add0~140 .cin_used = "true";
defparam \divide1000|Add0~140 .lut_mask = "3c3f";
defparam \divide1000|Add0~140 .operation_mode = "arithmetic";
defparam \divide1000|Add0~140 .output_mode = "comb_only";
defparam \divide1000|Add0~140 .register_cascade_mode = "off";
defparam \divide1000|Add0~140 .sum_lutc_input = "cin";
defparam \divide1000|Add0~140 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N4
maxii_lcell \divide1000|cnt_p[15] (
// Equation(s):
// \divide1000|cnt_p [15] = DFFEAS(((\divide1000|Add0~140_combout  & ((!\divide1000|Equal0~4_combout ) # (!\divide1000|Equal0~9_combout )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\divide1000|Equal0~9_combout ),
	.datab(vcc),
	.datac(\divide1000|Equal0~4_combout ),
	.datad(\divide1000|Add0~140_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [15]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[15] .lut_mask = "5f00";
defparam \divide1000|cnt_p[15] .operation_mode = "normal";
defparam \divide1000|cnt_p[15] .output_mode = "reg_only";
defparam \divide1000|cnt_p[15] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[15] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[15] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y4_N0
maxii_lcell \divide1000|Add0~75 (
// Equation(s):
// \divide1000|Add0~75_combout  = (\divide1000|cnt_p [16] $ ((!\divide1000|Add0~142 )))
// \divide1000|Add0~77  = CARRY(((\divide1000|cnt_p [16] & !\divide1000|Add0~142 )))
// \divide1000|Add0~77COUT1_173  = CARRY(((\divide1000|cnt_p [16] & !\divide1000|Add0~142 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~142 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~75_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~77 ),
	.cout1(\divide1000|Add0~77COUT1_173 ));
// synopsys translate_off
defparam \divide1000|Add0~75 .cin_used = "true";
defparam \divide1000|Add0~75 .lut_mask = "c30c";
defparam \divide1000|Add0~75 .operation_mode = "arithmetic";
defparam \divide1000|Add0~75 .output_mode = "comb_only";
defparam \divide1000|Add0~75 .register_cascade_mode = "off";
defparam \divide1000|Add0~75 .sum_lutc_input = "cin";
defparam \divide1000|Add0~75 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y4_N8
maxii_lcell \divide1000|cnt_p[16] (
// Equation(s):
// \divide1000|cnt_p [16] = DFFEAS((((\divide1000|Add0~75_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~75_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [16]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[16] .lut_mask = "ff00";
defparam \divide1000|cnt_p[16] .operation_mode = "normal";
defparam \divide1000|cnt_p[16] .output_mode = "reg_only";
defparam \divide1000|cnt_p[16] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[16] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[16] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y4_N1
maxii_lcell \divide1000|Add0~70 (
// Equation(s):
// \divide1000|Add0~70_combout  = (\divide1000|cnt_p [17] $ (((!\divide1000|Add0~142  & \divide1000|Add0~77 ) # (\divide1000|Add0~142  & \divide1000|Add0~77COUT1_173 ))))
// \divide1000|Add0~72  = CARRY(((!\divide1000|Add0~77 ) # (!\divide1000|cnt_p [17])))
// \divide1000|Add0~72COUT1_174  = CARRY(((!\divide1000|Add0~77COUT1_173 ) # (!\divide1000|cnt_p [17])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~142 ),
	.cin0(\divide1000|Add0~77 ),
	.cin1(\divide1000|Add0~77COUT1_173 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~70_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~72 ),
	.cout1(\divide1000|Add0~72COUT1_174 ));
// synopsys translate_off
defparam \divide1000|Add0~70 .cin0_used = "true";
defparam \divide1000|Add0~70 .cin1_used = "true";
defparam \divide1000|Add0~70 .cin_used = "true";
defparam \divide1000|Add0~70 .lut_mask = "3c3f";
defparam \divide1000|Add0~70 .operation_mode = "arithmetic";
defparam \divide1000|Add0~70 .output_mode = "comb_only";
defparam \divide1000|Add0~70 .register_cascade_mode = "off";
defparam \divide1000|Add0~70 .sum_lutc_input = "cin";
defparam \divide1000|Add0~70 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y4_N5
maxii_lcell \divide1000|cnt_p[17] (
// Equation(s):
// \divide1000|cnt_p [17] = DFFEAS((((\divide1000|Add0~70_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~70_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [17]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[17] .lut_mask = "ff00";
defparam \divide1000|cnt_p[17] .operation_mode = "normal";
defparam \divide1000|cnt_p[17] .output_mode = "reg_only";
defparam \divide1000|cnt_p[17] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[17] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[17] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y4_N2
maxii_lcell \divide1000|Add0~65 (
// Equation(s):
// \divide1000|Add0~65_combout  = (\divide1000|cnt_p [18] $ ((!(!\divide1000|Add0~142  & \divide1000|Add0~72 ) # (\divide1000|Add0~142  & \divide1000|Add0~72COUT1_174 ))))
// \divide1000|Add0~67  = CARRY(((\divide1000|cnt_p [18] & !\divide1000|Add0~72 )))
// \divide1000|Add0~67COUT1_175  = CARRY(((\divide1000|cnt_p [18] & !\divide1000|Add0~72COUT1_174 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~142 ),
	.cin0(\divide1000|Add0~72 ),
	.cin1(\divide1000|Add0~72COUT1_174 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~65_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~67 ),
	.cout1(\divide1000|Add0~67COUT1_175 ));
// synopsys translate_off
defparam \divide1000|Add0~65 .cin0_used = "true";
defparam \divide1000|Add0~65 .cin1_used = "true";
defparam \divide1000|Add0~65 .cin_used = "true";
defparam \divide1000|Add0~65 .lut_mask = "c30c";
defparam \divide1000|Add0~65 .operation_mode = "arithmetic";
defparam \divide1000|Add0~65 .output_mode = "comb_only";
defparam \divide1000|Add0~65 .register_cascade_mode = "off";
defparam \divide1000|Add0~65 .sum_lutc_input = "cin";
defparam \divide1000|Add0~65 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y4_N7
maxii_lcell \divide1000|cnt_p[18] (
// Equation(s):
// \divide1000|cnt_p [18] = DFFEAS((((\divide1000|Add0~65_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~65_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [18]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[18] .lut_mask = "ff00";
defparam \divide1000|cnt_p[18] .operation_mode = "normal";
defparam \divide1000|cnt_p[18] .output_mode = "reg_only";
defparam \divide1000|cnt_p[18] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[18] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[18] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y4_N3
maxii_lcell \divide1000|Add0~60 (
// Equation(s):
// \divide1000|Add0~60_combout  = (\divide1000|cnt_p [19] $ (((!\divide1000|Add0~142  & \divide1000|Add0~67 ) # (\divide1000|Add0~142  & \divide1000|Add0~67COUT1_175 ))))
// \divide1000|Add0~62  = CARRY(((!\divide1000|Add0~67 ) # (!\divide1000|cnt_p [19])))
// \divide1000|Add0~62COUT1_176  = CARRY(((!\divide1000|Add0~67COUT1_175 ) # (!\divide1000|cnt_p [19])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [19]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~142 ),
	.cin0(\divide1000|Add0~67 ),
	.cin1(\divide1000|Add0~67COUT1_175 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~60_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~62 ),
	.cout1(\divide1000|Add0~62COUT1_176 ));
// synopsys translate_off
defparam \divide1000|Add0~60 .cin0_used = "true";
defparam \divide1000|Add0~60 .cin1_used = "true";
defparam \divide1000|Add0~60 .cin_used = "true";
defparam \divide1000|Add0~60 .lut_mask = "3c3f";
defparam \divide1000|Add0~60 .operation_mode = "arithmetic";
defparam \divide1000|Add0~60 .output_mode = "comb_only";
defparam \divide1000|Add0~60 .register_cascade_mode = "off";
defparam \divide1000|Add0~60 .sum_lutc_input = "cin";
defparam \divide1000|Add0~60 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y4_N6
maxii_lcell \divide1000|cnt_p[19] (
// Equation(s):
// \divide1000|Equal0~3  = (!\divide1000|cnt_p [18] & (!\divide1000|cnt_p [17] & (!D1_cnt_p[19] & !\divide1000|cnt_p [16])))
// \divide1000|cnt_p [19] = DFFEAS(\divide1000|Equal0~3 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~60_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [18]),
	.datab(\divide1000|cnt_p [17]),
	.datac(\divide1000|Add0~60_combout ),
	.datad(\divide1000|cnt_p [16]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~3 ),
	.regout(\divide1000|cnt_p [19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[19] .lut_mask = "0001";
defparam \divide1000|cnt_p[19] .operation_mode = "normal";
defparam \divide1000|cnt_p[19] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[19] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[19] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y4_N4
maxii_lcell \divide1000|Add0~55 (
// Equation(s):
// \divide1000|Add0~55_combout  = (\divide1000|cnt_p [20] $ ((!(!\divide1000|Add0~142  & \divide1000|Add0~62 ) # (\divide1000|Add0~142  & \divide1000|Add0~62COUT1_176 ))))
// \divide1000|Add0~57  = CARRY(((\divide1000|cnt_p [20] & !\divide1000|Add0~62COUT1_176 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [20]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~142 ),
	.cin0(\divide1000|Add0~62 ),
	.cin1(\divide1000|Add0~62COUT1_176 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~55_combout ),
	.regout(),
	.cout(\divide1000|Add0~57 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Add0~55 .cin0_used = "true";
defparam \divide1000|Add0~55 .cin1_used = "true";
defparam \divide1000|Add0~55 .cin_used = "true";
defparam \divide1000|Add0~55 .lut_mask = "c30c";
defparam \divide1000|Add0~55 .operation_mode = "arithmetic";
defparam \divide1000|Add0~55 .output_mode = "comb_only";
defparam \divide1000|Add0~55 .register_cascade_mode = "off";
defparam \divide1000|Add0~55 .sum_lutc_input = "cin";
defparam \divide1000|Add0~55 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y4_N9
maxii_lcell \divide1000|cnt_p[20] (
// Equation(s):
// \divide1000|cnt_p [20] = DFFEAS((((\divide1000|Add0~55_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~55_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [20]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[20] .lut_mask = "ff00";
defparam \divide1000|cnt_p[20] .operation_mode = "normal";
defparam \divide1000|cnt_p[20] .output_mode = "reg_only";
defparam \divide1000|cnt_p[20] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[20] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[20] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y4_N5
maxii_lcell \divide1000|Add0~50 (
// Equation(s):
// \divide1000|Add0~50_combout  = (\divide1000|cnt_p [21] $ ((\divide1000|Add0~57 )))
// \divide1000|Add0~52  = CARRY(((!\divide1000|Add0~57 ) # (!\divide1000|cnt_p [21])))
// \divide1000|Add0~52COUT1_177  = CARRY(((!\divide1000|Add0~57 ) # (!\divide1000|cnt_p [21])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [21]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~57 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~50_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~52 ),
	.cout1(\divide1000|Add0~52COUT1_177 ));
// synopsys translate_off
defparam \divide1000|Add0~50 .cin_used = "true";
defparam \divide1000|Add0~50 .lut_mask = "3c3f";
defparam \divide1000|Add0~50 .operation_mode = "arithmetic";
defparam \divide1000|Add0~50 .output_mode = "comb_only";
defparam \divide1000|Add0~50 .register_cascade_mode = "off";
defparam \divide1000|Add0~50 .sum_lutc_input = "cin";
defparam \divide1000|Add0~50 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N0
maxii_lcell \divide1000|cnt_p[21] (
// Equation(s):
// \divide1000|cnt_p [21] = DFFEAS((((\divide1000|Add0~50_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~50_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [21]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[21] .lut_mask = "ff00";
defparam \divide1000|cnt_p[21] .operation_mode = "normal";
defparam \divide1000|cnt_p[21] .output_mode = "reg_only";
defparam \divide1000|cnt_p[21] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[21] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[21] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y4_N6
maxii_lcell \divide1000|Add0~45 (
// Equation(s):
// \divide1000|Add0~45_combout  = (\divide1000|cnt_p [22] $ ((!(!\divide1000|Add0~57  & \divide1000|Add0~52 ) # (\divide1000|Add0~57  & \divide1000|Add0~52COUT1_177 ))))
// \divide1000|Add0~47  = CARRY(((\divide1000|cnt_p [22] & !\divide1000|Add0~52 )))
// \divide1000|Add0~47COUT1_178  = CARRY(((\divide1000|cnt_p [22] & !\divide1000|Add0~52COUT1_177 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [22]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~57 ),
	.cin0(\divide1000|Add0~52 ),
	.cin1(\divide1000|Add0~52COUT1_177 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~45_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~47 ),
	.cout1(\divide1000|Add0~47COUT1_178 ));
// synopsys translate_off
defparam \divide1000|Add0~45 .cin0_used = "true";
defparam \divide1000|Add0~45 .cin1_used = "true";
defparam \divide1000|Add0~45 .cin_used = "true";
defparam \divide1000|Add0~45 .lut_mask = "c30c";
defparam \divide1000|Add0~45 .operation_mode = "arithmetic";
defparam \divide1000|Add0~45 .output_mode = "comb_only";
defparam \divide1000|Add0~45 .register_cascade_mode = "off";
defparam \divide1000|Add0~45 .sum_lutc_input = "cin";
defparam \divide1000|Add0~45 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y4_N4
maxii_lcell \divide1000|cnt_p[22] (
// Equation(s):
// \divide1000|cnt_p [22] = DFFEAS(GND, GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~45_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\divide1000|Add0~45_combout ),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [22]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[22] .lut_mask = "0000";
defparam \divide1000|cnt_p[22] .operation_mode = "normal";
defparam \divide1000|cnt_p[22] .output_mode = "reg_only";
defparam \divide1000|cnt_p[22] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[22] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[22] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y4_N7
maxii_lcell \divide1000|Add0~40 (
// Equation(s):
// \divide1000|Add0~40_combout  = (\divide1000|cnt_p [23] $ (((!\divide1000|Add0~57  & \divide1000|Add0~47 ) # (\divide1000|Add0~57  & \divide1000|Add0~47COUT1_178 ))))
// \divide1000|Add0~42  = CARRY(((!\divide1000|Add0~47 ) # (!\divide1000|cnt_p [23])))
// \divide1000|Add0~42COUT1_179  = CARRY(((!\divide1000|Add0~47COUT1_178 ) # (!\divide1000|cnt_p [23])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [23]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~57 ),
	.cin0(\divide1000|Add0~47 ),
	.cin1(\divide1000|Add0~47COUT1_178 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~40_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~42 ),
	.cout1(\divide1000|Add0~42COUT1_179 ));
// synopsys translate_off
defparam \divide1000|Add0~40 .cin0_used = "true";
defparam \divide1000|Add0~40 .cin1_used = "true";
defparam \divide1000|Add0~40 .cin_used = "true";
defparam \divide1000|Add0~40 .lut_mask = "3c3f";
defparam \divide1000|Add0~40 .operation_mode = "arithmetic";
defparam \divide1000|Add0~40 .output_mode = "comb_only";
defparam \divide1000|Add0~40 .register_cascade_mode = "off";
defparam \divide1000|Add0~40 .sum_lutc_input = "cin";
defparam \divide1000|Add0~40 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N4
maxii_lcell \divide1000|cnt_p[23] (
// Equation(s):
// \divide1000|Equal0~2  = (!\divide1000|cnt_p [22] & (!\divide1000|cnt_p [21] & (!D1_cnt_p[23] & !\divide1000|cnt_p [20])))
// \divide1000|cnt_p [23] = DFFEAS(\divide1000|Equal0~2 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~40_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [22]),
	.datab(\divide1000|cnt_p [21]),
	.datac(\divide1000|Add0~40_combout ),
	.datad(\divide1000|cnt_p [20]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~2 ),
	.regout(\divide1000|cnt_p [23]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[23] .lut_mask = "0001";
defparam \divide1000|cnt_p[23] .operation_mode = "normal";
defparam \divide1000|cnt_p[23] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[23] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[23] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[23] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y4_N8
maxii_lcell \divide1000|Add0~35 (
// Equation(s):
// \divide1000|Add0~35_combout  = (\divide1000|cnt_p [24] $ ((!(!\divide1000|Add0~57  & \divide1000|Add0~42 ) # (\divide1000|Add0~57  & \divide1000|Add0~42COUT1_179 ))))
// \divide1000|Add0~37  = CARRY(((\divide1000|cnt_p [24] & !\divide1000|Add0~42 )))
// \divide1000|Add0~37COUT1_180  = CARRY(((\divide1000|cnt_p [24] & !\divide1000|Add0~42COUT1_179 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [24]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~57 ),
	.cin0(\divide1000|Add0~42 ),
	.cin1(\divide1000|Add0~42COUT1_179 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~35_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~37 ),
	.cout1(\divide1000|Add0~37COUT1_180 ));
// synopsys translate_off
defparam \divide1000|Add0~35 .cin0_used = "true";
defparam \divide1000|Add0~35 .cin1_used = "true";
defparam \divide1000|Add0~35 .cin_used = "true";
defparam \divide1000|Add0~35 .lut_mask = "c30c";
defparam \divide1000|Add0~35 .operation_mode = "arithmetic";
defparam \divide1000|Add0~35 .output_mode = "comb_only";
defparam \divide1000|Add0~35 .register_cascade_mode = "off";
defparam \divide1000|Add0~35 .sum_lutc_input = "cin";
defparam \divide1000|Add0~35 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y4_N6
maxii_lcell \divide1000|cnt_p[24] (
// Equation(s):
// \divide1000|cnt_p [24] = DFFEAS((((\divide1000|Add0~35_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~35_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [24]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[24] .lut_mask = "ff00";
defparam \divide1000|cnt_p[24] .operation_mode = "normal";
defparam \divide1000|cnt_p[24] .output_mode = "reg_only";
defparam \divide1000|cnt_p[24] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[24] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[24] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y4_N9
maxii_lcell \divide1000|Add0~30 (
// Equation(s):
// \divide1000|Add0~30_combout  = (\divide1000|cnt_p [25] $ (((!\divide1000|Add0~57  & \divide1000|Add0~37 ) # (\divide1000|Add0~57  & \divide1000|Add0~37COUT1_180 ))))
// \divide1000|Add0~32  = CARRY(((!\divide1000|Add0~37COUT1_180 ) # (!\divide1000|cnt_p [25])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [25]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~57 ),
	.cin0(\divide1000|Add0~37 ),
	.cin1(\divide1000|Add0~37COUT1_180 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~30_combout ),
	.regout(),
	.cout(\divide1000|Add0~32 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Add0~30 .cin0_used = "true";
defparam \divide1000|Add0~30 .cin1_used = "true";
defparam \divide1000|Add0~30 .cin_used = "true";
defparam \divide1000|Add0~30 .lut_mask = "3c3f";
defparam \divide1000|Add0~30 .operation_mode = "arithmetic";
defparam \divide1000|Add0~30 .output_mode = "comb_only";
defparam \divide1000|Add0~30 .register_cascade_mode = "off";
defparam \divide1000|Add0~30 .sum_lutc_input = "cin";
defparam \divide1000|Add0~30 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y4_N2
maxii_lcell \divide1000|cnt_p[25] (
// Equation(s):
// \divide1000|cnt_p [25] = DFFEAS(GND, GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~30_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\divide1000|Add0~30_combout ),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [25]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[25] .lut_mask = "0000";
defparam \divide1000|cnt_p[25] .operation_mode = "normal";
defparam \divide1000|cnt_p[25] .output_mode = "reg_only";
defparam \divide1000|cnt_p[25] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[25] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[25] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y4_N0
maxii_lcell \divide1000|Add0~25 (
// Equation(s):
// \divide1000|Add0~25_combout  = (\divide1000|cnt_p [26] $ ((!\divide1000|Add0~32 )))
// \divide1000|Add0~27  = CARRY(((\divide1000|cnt_p [26] & !\divide1000|Add0~32 )))
// \divide1000|Add0~27COUT1_181  = CARRY(((\divide1000|cnt_p [26] & !\divide1000|Add0~32 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [26]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~32 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~25_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~27 ),
	.cout1(\divide1000|Add0~27COUT1_181 ));
// synopsys translate_off
defparam \divide1000|Add0~25 .cin_used = "true";
defparam \divide1000|Add0~25 .lut_mask = "c30c";
defparam \divide1000|Add0~25 .operation_mode = "arithmetic";
defparam \divide1000|Add0~25 .output_mode = "comb_only";
defparam \divide1000|Add0~25 .register_cascade_mode = "off";
defparam \divide1000|Add0~25 .sum_lutc_input = "cin";
defparam \divide1000|Add0~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y4_N9
maxii_lcell \divide1000|cnt_p[26] (
// Equation(s):
// \divide1000|cnt_p [26] = DFFEAS((((\divide1000|Add0~25_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~25_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [26]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[26] .lut_mask = "ff00";
defparam \divide1000|cnt_p[26] .operation_mode = "normal";
defparam \divide1000|cnt_p[26] .output_mode = "reg_only";
defparam \divide1000|cnt_p[26] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[26] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[26] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y4_N1
maxii_lcell \divide1000|Add0~20 (
// Equation(s):
// \divide1000|Add0~20_combout  = (\divide1000|cnt_p [27] $ (((!\divide1000|Add0~32  & \divide1000|Add0~27 ) # (\divide1000|Add0~32  & \divide1000|Add0~27COUT1_181 ))))
// \divide1000|Add0~22  = CARRY(((!\divide1000|Add0~27 ) # (!\divide1000|cnt_p [27])))
// \divide1000|Add0~22COUT1_182  = CARRY(((!\divide1000|Add0~27COUT1_181 ) # (!\divide1000|cnt_p [27])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [27]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~32 ),
	.cin0(\divide1000|Add0~27 ),
	.cin1(\divide1000|Add0~27COUT1_181 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~20_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~22 ),
	.cout1(\divide1000|Add0~22COUT1_182 ));
// synopsys translate_off
defparam \divide1000|Add0~20 .cin0_used = "true";
defparam \divide1000|Add0~20 .cin1_used = "true";
defparam \divide1000|Add0~20 .cin_used = "true";
defparam \divide1000|Add0~20 .lut_mask = "3c3f";
defparam \divide1000|Add0~20 .operation_mode = "arithmetic";
defparam \divide1000|Add0~20 .output_mode = "comb_only";
defparam \divide1000|Add0~20 .register_cascade_mode = "off";
defparam \divide1000|Add0~20 .sum_lutc_input = "cin";
defparam \divide1000|Add0~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y4_N7
maxii_lcell \divide1000|cnt_p[27] (
// Equation(s):
// \divide1000|Equal0~1  = (!\divide1000|cnt_p [24] & (!\divide1000|cnt_p [25] & (!D1_cnt_p[27] & !\divide1000|cnt_p [26])))
// \divide1000|cnt_p [27] = DFFEAS(\divide1000|Equal0~1 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~20_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [24]),
	.datab(\divide1000|cnt_p [25]),
	.datac(\divide1000|Add0~20_combout ),
	.datad(\divide1000|cnt_p [26]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~1 ),
	.regout(\divide1000|cnt_p [27]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[27] .lut_mask = "0001";
defparam \divide1000|cnt_p[27] .operation_mode = "normal";
defparam \divide1000|cnt_p[27] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[27] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[27] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[27] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y4_N2
maxii_lcell \divide1000|Add0~15 (
// Equation(s):
// \divide1000|Add0~15_combout  = (\divide1000|cnt_p [28] $ ((!(!\divide1000|Add0~32  & \divide1000|Add0~22 ) # (\divide1000|Add0~32  & \divide1000|Add0~22COUT1_182 ))))
// \divide1000|Add0~17  = CARRY(((\divide1000|cnt_p [28] & !\divide1000|Add0~22 )))
// \divide1000|Add0~17COUT1_183  = CARRY(((\divide1000|cnt_p [28] & !\divide1000|Add0~22COUT1_182 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [28]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~32 ),
	.cin0(\divide1000|Add0~22 ),
	.cin1(\divide1000|Add0~22COUT1_182 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~15_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~17 ),
	.cout1(\divide1000|Add0~17COUT1_183 ));
// synopsys translate_off
defparam \divide1000|Add0~15 .cin0_used = "true";
defparam \divide1000|Add0~15 .cin1_used = "true";
defparam \divide1000|Add0~15 .cin_used = "true";
defparam \divide1000|Add0~15 .lut_mask = "c30c";
defparam \divide1000|Add0~15 .operation_mode = "arithmetic";
defparam \divide1000|Add0~15 .output_mode = "comb_only";
defparam \divide1000|Add0~15 .register_cascade_mode = "off";
defparam \divide1000|Add0~15 .sum_lutc_input = "cin";
defparam \divide1000|Add0~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y4_N8
maxii_lcell \divide1000|cnt_p[28] (
// Equation(s):
// \divide1000|cnt_p [28] = DFFEAS((((\divide1000|Add0~15_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~15_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [28]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[28] .lut_mask = "ff00";
defparam \divide1000|cnt_p[28] .operation_mode = "normal";
defparam \divide1000|cnt_p[28] .output_mode = "reg_only";
defparam \divide1000|cnt_p[28] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[28] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[28] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y4_N3
maxii_lcell \divide1000|Add0~10 (
// Equation(s):
// \divide1000|Add0~10_combout  = \divide1000|cnt_p [29] $ (((((!\divide1000|Add0~32  & \divide1000|Add0~17 ) # (\divide1000|Add0~32  & \divide1000|Add0~17COUT1_183 )))))
// \divide1000|Add0~12  = CARRY(((!\divide1000|Add0~17 )) # (!\divide1000|cnt_p [29]))
// \divide1000|Add0~12COUT1_184  = CARRY(((!\divide1000|Add0~17COUT1_183 )) # (!\divide1000|cnt_p [29]))

	.clk(gnd),
	.dataa(\divide1000|cnt_p [29]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~32 ),
	.cin0(\divide1000|Add0~17 ),
	.cin1(\divide1000|Add0~17COUT1_183 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~10_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~12 ),
	.cout1(\divide1000|Add0~12COUT1_184 ));
// synopsys translate_off
defparam \divide1000|Add0~10 .cin0_used = "true";
defparam \divide1000|Add0~10 .cin1_used = "true";
defparam \divide1000|Add0~10 .cin_used = "true";
defparam \divide1000|Add0~10 .lut_mask = "5a5f";
defparam \divide1000|Add0~10 .operation_mode = "arithmetic";
defparam \divide1000|Add0~10 .output_mode = "comb_only";
defparam \divide1000|Add0~10 .register_cascade_mode = "off";
defparam \divide1000|Add0~10 .sum_lutc_input = "cin";
defparam \divide1000|Add0~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y4_N1
maxii_lcell \divide1000|cnt_p[29] (
// Equation(s):
// \divide1000|cnt_p [29] = DFFEAS((((\divide1000|Add0~10_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\divide1000|Add0~10_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [29]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[29] .lut_mask = "ff00";
defparam \divide1000|cnt_p[29] .operation_mode = "normal";
defparam \divide1000|cnt_p[29] .output_mode = "reg_only";
defparam \divide1000|cnt_p[29] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[29] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[29] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y4_N4
maxii_lcell \divide1000|Add0~5 (
// Equation(s):
// \divide1000|Add0~5_combout  = \divide1000|cnt_p [30] $ ((((!(!\divide1000|Add0~32  & \divide1000|Add0~12 ) # (\divide1000|Add0~32  & \divide1000|Add0~12COUT1_184 )))))
// \divide1000|Add0~7  = CARRY((\divide1000|cnt_p [30] & ((!\divide1000|Add0~12COUT1_184 ))))

	.clk(gnd),
	.dataa(\divide1000|cnt_p [30]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~32 ),
	.cin0(\divide1000|Add0~12 ),
	.cin1(\divide1000|Add0~12COUT1_184 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~5_combout ),
	.regout(),
	.cout(\divide1000|Add0~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Add0~5 .cin0_used = "true";
defparam \divide1000|Add0~5 .cin1_used = "true";
defparam \divide1000|Add0~5 .cin_used = "true";
defparam \divide1000|Add0~5 .lut_mask = "a50a";
defparam \divide1000|Add0~5 .operation_mode = "arithmetic";
defparam \divide1000|Add0~5 .output_mode = "comb_only";
defparam \divide1000|Add0~5 .register_cascade_mode = "off";
defparam \divide1000|Add0~5 .sum_lutc_input = "cin";
defparam \divide1000|Add0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y4_N3
maxii_lcell \divide1000|cnt_p[30] (
// Equation(s):
// \divide1000|cnt_p [30] = DFFEAS(GND, GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~5_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\divide1000|Add0~5_combout ),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [30]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[30] .lut_mask = "0000";
defparam \divide1000|cnt_p[30] .operation_mode = "normal";
defparam \divide1000|cnt_p[30] .output_mode = "reg_only";
defparam \divide1000|cnt_p[30] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[30] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[30] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X16_Y4_N0
maxii_lcell \divide1000|cnt_p[31] (
// Equation(s):
// \divide1000|Equal0~0  = (!\divide1000|cnt_p [28] & (!\divide1000|cnt_p [29] & (!D1_cnt_p[31] & !\divide1000|cnt_p [30])))
// \divide1000|cnt_p [31] = DFFEAS(\divide1000|Equal0~0 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~0_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [28]),
	.datab(\divide1000|cnt_p [29]),
	.datac(\divide1000|Add0~0_combout ),
	.datad(\divide1000|cnt_p [30]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~0 ),
	.regout(\divide1000|cnt_p [31]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[31] .lut_mask = "0001";
defparam \divide1000|cnt_p[31] .operation_mode = "normal";
defparam \divide1000|cnt_p[31] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[31] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[31] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[31] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y4_N5
maxii_lcell \divide1000|Add0~0 (
// Equation(s):
// \divide1000|Add0~0_combout  = \divide1000|cnt_p [31] $ ((((\divide1000|Add0~7 ))))

	.clk(gnd),
	.dataa(\divide1000|cnt_p [31]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Add0~0 .cin_used = "true";
defparam \divide1000|Add0~0 .lut_mask = "5a5a";
defparam \divide1000|Add0~0 .operation_mode = "normal";
defparam \divide1000|Add0~0 .output_mode = "comb_only";
defparam \divide1000|Add0~0 .register_cascade_mode = "off";
defparam \divide1000|Add0~0 .sum_lutc_input = "cin";
defparam \divide1000|Add0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N0
maxii_lcell \divide1000|Equal0~4 (
// Equation(s):
// \divide1000|Equal0~4_combout  = (\divide1000|Equal0~0  & (\divide1000|Equal0~1  & (\divide1000|Equal0~2  & \divide1000|Equal0~3 )))

	.clk(gnd),
	.dataa(\divide1000|Equal0~0 ),
	.datab(\divide1000|Equal0~1 ),
	.datac(\divide1000|Equal0~2 ),
	.datad(\divide1000|Equal0~3 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Equal0~4 .lut_mask = "8000";
defparam \divide1000|Equal0~4 .operation_mode = "normal";
defparam \divide1000|Equal0~4 .output_mode = "comb_only";
defparam \divide1000|Equal0~4 .register_cascade_mode = "off";
defparam \divide1000|Equal0~4 .sum_lutc_input = "datac";
defparam \divide1000|Equal0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y4_N2
maxii_lcell \divide1000|cnt_p[6] (
// Equation(s):
// \divide1000|cnt_p [6] = DFFEAS(((\divide1000|Add0~115_combout  & ((!\divide1000|Equal0~4_combout ) # (!\divide1000|Equal0~9_combout )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divide1000|Equal0~9_combout ),
	.datac(\divide1000|Add0~115_combout ),
	.datad(\divide1000|Equal0~4_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[6] .lut_mask = "30f0";
defparam \divide1000|cnt_p[6] .operation_mode = "normal";
defparam \divide1000|cnt_p[6] .output_mode = "reg_only";
defparam \divide1000|cnt_p[6] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[6] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N5
maxii_lcell \divide1000|cnt_p[2] (
// Equation(s):
// \divide1000|Equal0~8  = (\divide1000|cnt_p [1] & (\divide1000|cnt_p [0] & (D1_cnt_p[2] & \divide1000|cnt_p [3])))
// \divide1000|cnt_p [2] = DFFEAS(\divide1000|Equal0~8 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~145_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [1]),
	.datab(\divide1000|cnt_p [0]),
	.datac(\divide1000|Add0~145_combout ),
	.datad(\divide1000|cnt_p [3]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~8 ),
	.regout(\divide1000|cnt_p [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[2] .lut_mask = "8000";
defparam \divide1000|cnt_p[2] .operation_mode = "normal";
defparam \divide1000|cnt_p[2] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[2] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[2] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y4_N0
maxii_lcell \divide1000|cnt_p[13] (
// Equation(s):
// \divide1000|Equal0~6  = (\divide1000|cnt_p [8] & (\divide1000|cnt_p [9] & (!D1_cnt_p[13] & \divide1000|cnt_p [14])))
// \divide1000|cnt_p [13] = DFFEAS(\divide1000|Equal0~6 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~135_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [8]),
	.datab(\divide1000|cnt_p [9]),
	.datac(\divide1000|Add0~135_combout ),
	.datad(\divide1000|cnt_p [14]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~6 ),
	.regout(\divide1000|cnt_p [13]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[13] .lut_mask = "0800";
defparam \divide1000|cnt_p[13] .operation_mode = "normal";
defparam \divide1000|cnt_p[13] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[13] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[13] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y4_N8
maxii_lcell \divide1000|Add0~100 (
// Equation(s):
// \divide1000|Add0~100_combout  = (\divide1000|cnt_p [4] $ ((!(!\divide1000|Add0~157  & \divide1000|Add0~107 ) # (\divide1000|Add0~157  & \divide1000|Add0~107COUT1_163 ))))
// \divide1000|Add0~102  = CARRY(((\divide1000|cnt_p [4] & !\divide1000|Add0~107 )))
// \divide1000|Add0~102COUT1_164  = CARRY(((\divide1000|cnt_p [4] & !\divide1000|Add0~107COUT1_163 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~157 ),
	.cin0(\divide1000|Add0~107 ),
	.cin1(\divide1000|Add0~107COUT1_163 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~100_combout ),
	.regout(),
	.cout(),
	.cout0(\divide1000|Add0~102 ),
	.cout1(\divide1000|Add0~102COUT1_164 ));
// synopsys translate_off
defparam \divide1000|Add0~100 .cin0_used = "true";
defparam \divide1000|Add0~100 .cin1_used = "true";
defparam \divide1000|Add0~100 .cin_used = "true";
defparam \divide1000|Add0~100 .lut_mask = "c30c";
defparam \divide1000|Add0~100 .operation_mode = "arithmetic";
defparam \divide1000|Add0~100 .output_mode = "comb_only";
defparam \divide1000|Add0~100 .register_cascade_mode = "off";
defparam \divide1000|Add0~100 .sum_lutc_input = "cin";
defparam \divide1000|Add0~100 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y4_N9
maxii_lcell \divide1000|Add0~110 (
// Equation(s):
// \divide1000|Add0~110_combout  = (\divide1000|cnt_p [5] $ (((!\divide1000|Add0~157  & \divide1000|Add0~102 ) # (\divide1000|Add0~157  & \divide1000|Add0~102COUT1_164 ))))
// \divide1000|Add0~112  = CARRY(((!\divide1000|Add0~102COUT1_164 ) # (!\divide1000|cnt_p [5])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\divide1000|cnt_p [5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\divide1000|Add0~157 ),
	.cin0(\divide1000|Add0~102 ),
	.cin1(\divide1000|Add0~102COUT1_164 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Add0~110_combout ),
	.regout(),
	.cout(\divide1000|Add0~112 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Add0~110 .cin0_used = "true";
defparam \divide1000|Add0~110 .cin1_used = "true";
defparam \divide1000|Add0~110 .cin_used = "true";
defparam \divide1000|Add0~110 .lut_mask = "3c3f";
defparam \divide1000|Add0~110 .operation_mode = "arithmetic";
defparam \divide1000|Add0~110 .output_mode = "comb_only";
defparam \divide1000|Add0~110 .register_cascade_mode = "off";
defparam \divide1000|Add0~110 .sum_lutc_input = "cin";
defparam \divide1000|Add0~110 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N3
maxii_lcell \divide1000|cnt_p[5] (
// Equation(s):
// \divide1000|Equal0~7  = (!\divide1000|cnt_p [4] & (\divide1000|cnt_p [6] & (!D1_cnt_p[5] & !\divide1000|cnt_p [7])))
// \divide1000|cnt_p [5] = DFFEAS(\divide1000|Equal0~7 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , \divide1000|Add0~110_combout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\divide1000|cnt_p [4]),
	.datab(\divide1000|cnt_p [6]),
	.datac(\divide1000|Add0~110_combout ),
	.datad(\divide1000|cnt_p [7]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~7 ),
	.regout(\divide1000|cnt_p [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[5] .lut_mask = "0004";
defparam \divide1000|cnt_p[5] .operation_mode = "normal";
defparam \divide1000|cnt_p[5] .output_mode = "reg_and_comb";
defparam \divide1000|cnt_p[5] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[5] .sum_lutc_input = "qfbk";
defparam \divide1000|cnt_p[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y4_N6
maxii_lcell \divide1000|Equal0~9 (
// Equation(s):
// \divide1000|Equal0~9_combout  = (\divide1000|Equal0~8  & (\divide1000|Equal0~5  & (\divide1000|Equal0~6  & \divide1000|Equal0~7 )))

	.clk(gnd),
	.dataa(\divide1000|Equal0~8 ),
	.datab(\divide1000|Equal0~5 ),
	.datac(\divide1000|Equal0~6 ),
	.datad(\divide1000|Equal0~7 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|Equal0~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|Equal0~9 .lut_mask = "8000";
defparam \divide1000|Equal0~9 .operation_mode = "normal";
defparam \divide1000|Equal0~9 .output_mode = "comb_only";
defparam \divide1000|Equal0~9 .register_cascade_mode = "off";
defparam \divide1000|Equal0~9 .sum_lutc_input = "datac";
defparam \divide1000|Equal0~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y4_N2
maxii_lcell \divide1000|cnt_p[4] (
// Equation(s):
// \divide1000|cnt_p [4] = DFFEAS(((\divide1000|Add0~100_combout  & ((!\divide1000|Equal0~4_combout ) # (!\divide1000|Equal0~9_combout )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\divide1000|Equal0~9_combout ),
	.datab(vcc),
	.datac(\divide1000|Equal0~4_combout ),
	.datad(\divide1000|Add0~100_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[4] .lut_mask = "5f00";
defparam \divide1000|cnt_p[4] .operation_mode = "normal";
defparam \divide1000|cnt_p[4] .output_mode = "reg_only";
defparam \divide1000|cnt_p[4] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[4] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y4_N3
maxii_lcell \divide1000|cnt_p[8] (
// Equation(s):
// \divide1000|cnt_p [8] = DFFEAS(((\divide1000|Add0~120_combout  & ((!\divide1000|Equal0~4_combout ) # (!\divide1000|Equal0~9_combout )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divide1000|Add0~120_combout ),
	.datac(\divide1000|Equal0~9_combout ),
	.datad(\divide1000|Equal0~4_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|cnt_p [8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|cnt_p[8] .lut_mask = "0ccc";
defparam \divide1000|cnt_p[8] .operation_mode = "normal";
defparam \divide1000|cnt_p[8] .output_mode = "reg_only";
defparam \divide1000|cnt_p[8] .register_cascade_mode = "off";
defparam \divide1000|cnt_p[8] .sum_lutc_input = "datac";
defparam \divide1000|cnt_p[8] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N5
maxii_lcell \divide1000|LessThan0~3 (
// Equation(s):
// \divide1000|LessThan0~3_combout  = (((!\divide1000|cnt_p [14]) # (!\divide1000|cnt_p [13])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\divide1000|cnt_p [13]),
	.datad(\divide1000|cnt_p [14]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divide1000|LessThan0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|LessThan0~3 .lut_mask = "0fff";
defparam \divide1000|LessThan0~3 .operation_mode = "normal";
defparam \divide1000|LessThan0~3 .output_mode = "comb_only";
defparam \divide1000|LessThan0~3 .register_cascade_mode = "off";
defparam \divide1000|LessThan0~3 .sum_lutc_input = "datac";
defparam \divide1000|LessThan0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N7
maxii_lcell \divide1000|clk_p (
// Equation(s):
// \divide1000|clk_p~regout  = DFFEAS((\divide1000|cnt_p [15]) # (((!\divide1000|LessThan0~3_combout  & !\divide1000|LessThan0~2 )) # (!\divide1000|Equal0~4_combout )), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\divide1000|LessThan0~3_combout ),
	.datab(\divide1000|cnt_p [15]),
	.datac(\divide1000|LessThan0~2 ),
	.datad(\divide1000|Equal0~4_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divide1000|clk_p~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divide1000|clk_p .lut_mask = "cdff";
defparam \divide1000|clk_p .operation_mode = "normal";
defparam \divide1000|clk_p .output_mode = "reg_only";
defparam \divide1000|clk_p .register_cascade_mode = "off";
defparam \divide1000|clk_p .sum_lutc_input = "datac";
defparam \divide1000|clk_p .synch_mode = "off";
// synopsys translate_on

// Location: PIN_129,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \onride~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\onride~combout ),
	.padio(onride));
// synopsys translate_off
defparam \onride~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y7_N9
maxii_lcell \seg_cnt[0] (
// Equation(s):
// seg_cnt[0] = DFFEAS(((\onride~combout  & (!seg_cnt[0]))), GLOBAL(\divide1000|clk_p~regout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(\onride~combout ),
	.datac(seg_cnt[0]),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(seg_cnt[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cnt[0] .lut_mask = "0c0c";
defparam \seg_cnt[0] .operation_mode = "normal";
defparam \seg_cnt[0] .output_mode = "reg_only";
defparam \seg_cnt[0] .register_cascade_mode = "off";
defparam \seg_cnt[0] .sum_lutc_input = "datac";
defparam \seg_cnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y7_N0
maxii_lcell \seg_cnt[1] (
// Equation(s):
// seg_cnt[1] = DFFEAS((seg_cnt[0] $ (((seg_cnt[1])))), GLOBAL(\divide1000|clk_p~regout ), !GLOBAL(\rst~combout ), , , , , !\onride~combout , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(seg_cnt[0]),
	.datac(vcc),
	.datad(seg_cnt[1]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(!\onride~combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(seg_cnt[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cnt[1] .lut_mask = "33cc";
defparam \seg_cnt[1] .operation_mode = "normal";
defparam \seg_cnt[1] .output_mode = "reg_only";
defparam \seg_cnt[1] .register_cascade_mode = "off";
defparam \seg_cnt[1] .sum_lutc_input = "datac";
defparam \seg_cnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y7_N4
maxii_lcell \seg_cnt[2] (
// Equation(s):
// seg_cnt[2] = DFFEAS((seg_cnt[2] $ (((seg_cnt[1] & seg_cnt[0])))), GLOBAL(\divide1000|clk_p~regout ), !GLOBAL(\rst~combout ), , , , , !\onride~combout , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(seg_cnt[1]),
	.datab(vcc),
	.datac(seg_cnt[0]),
	.datad(seg_cnt[2]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(!\onride~combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(seg_cnt[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cnt[2] .lut_mask = "5fa0";
defparam \seg_cnt[2] .operation_mode = "normal";
defparam \seg_cnt[2] .output_mode = "reg_only";
defparam \seg_cnt[2] .register_cascade_mode = "off";
defparam \seg_cnt[2] .sum_lutc_input = "datac";
defparam \seg_cnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y7_N7
maxii_lcell \Decoder1~0 (
// Equation(s):
// \Decoder1~0_combout  = ((!seg_cnt[2] & (!seg_cnt[0] & !seg_cnt[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(seg_cnt[2]),
	.datac(seg_cnt[0]),
	.datad(seg_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder1~0 .lut_mask = "0003";
defparam \Decoder1~0 .operation_mode = "normal";
defparam \Decoder1~0 .output_mode = "comb_only";
defparam \Decoder1~0 .register_cascade_mode = "off";
defparam \Decoder1~0 .sum_lutc_input = "datac";
defparam \Decoder1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y7_N3
maxii_lcell \Decoder2~0 (
// Equation(s):
// \Decoder2~0_combout  = ((seg_cnt[2] & (seg_cnt[0] & seg_cnt[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(seg_cnt[2]),
	.datac(seg_cnt[0]),
	.datad(seg_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder2~0 .lut_mask = "c000";
defparam \Decoder2~0 .operation_mode = "normal";
defparam \Decoder2~0 .output_mode = "comb_only";
defparam \Decoder2~0 .register_cascade_mode = "off";
defparam \Decoder2~0 .sum_lutc_input = "datac";
defparam \Decoder2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y7_N4
maxii_lcell \seg_cat[0]~reg0 (
// Equation(s):
// \seg_cat[0]~reg0_regout  = DFFEAS(((!\Decoder2~0_combout  & ((\seg_cat[0]~reg0_regout ) # (\Decoder1~0_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , VCC, , , !\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_cat[0]~reg0_regout ),
	.datab(\Decoder1~0_combout ),
	.datac(vcc),
	.datad(\Decoder2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\onride~combout ),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_cat[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cat[0]~reg0 .lut_mask = "00ee";
defparam \seg_cat[0]~reg0 .operation_mode = "normal";
defparam \seg_cat[0]~reg0 .output_mode = "reg_only";
defparam \seg_cat[0]~reg0 .register_cascade_mode = "off";
defparam \seg_cat[0]~reg0 .sum_lutc_input = "datac";
defparam \seg_cat[0]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y7_N5
maxii_lcell \Decoder1~1 (
// Equation(s):
// \Decoder1~1_combout  = ((!seg_cnt[1] & (!seg_cnt[2] & seg_cnt[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(seg_cnt[1]),
	.datac(seg_cnt[2]),
	.datad(seg_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder1~1 .lut_mask = "0300";
defparam \Decoder1~1 .operation_mode = "normal";
defparam \Decoder1~1 .output_mode = "comb_only";
defparam \Decoder1~1 .register_cascade_mode = "off";
defparam \Decoder1~1 .sum_lutc_input = "datac";
defparam \Decoder1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y7_N8
maxii_lcell \seg_cat[1]~reg0 (
// Equation(s):
// \seg_cat[1]~reg0_regout  = DFFEAS((!\Decoder1~0_combout  & ((\seg_cat[1]~reg0_regout ) # ((\Decoder1~1_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , VCC, , , !\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_cat[1]~reg0_regout ),
	.datab(\Decoder1~0_combout ),
	.datac(vcc),
	.datad(\Decoder1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\onride~combout ),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_cat[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cat[1]~reg0 .lut_mask = "3322";
defparam \seg_cat[1]~reg0 .operation_mode = "normal";
defparam \seg_cat[1]~reg0 .output_mode = "reg_only";
defparam \seg_cat[1]~reg0 .register_cascade_mode = "off";
defparam \seg_cat[1]~reg0 .sum_lutc_input = "datac";
defparam \seg_cat[1]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y7_N8
maxii_lcell \Decoder1~2 (
// Equation(s):
// \Decoder1~2_combout  = (seg_cnt[1] & (!seg_cnt[2] & (!seg_cnt[0])))

	.clk(gnd),
	.dataa(seg_cnt[1]),
	.datab(seg_cnt[2]),
	.datac(seg_cnt[0]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder1~2 .lut_mask = "0202";
defparam \Decoder1~2 .operation_mode = "normal";
defparam \Decoder1~2 .output_mode = "comb_only";
defparam \Decoder1~2 .register_cascade_mode = "off";
defparam \Decoder1~2 .sum_lutc_input = "datac";
defparam \Decoder1~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y7_N7
maxii_lcell \seg_cat[2]~reg0 (
// Equation(s):
// \seg_cat[2]~reg0_regout  = DFFEAS(((!\Decoder1~1_combout  & ((\Decoder1~2_combout ) # (\seg_cat[2]~reg0_regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , VCC, , , !\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\Decoder1~2_combout ),
	.datab(\seg_cat[2]~reg0_regout ),
	.datac(vcc),
	.datad(\Decoder1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\onride~combout ),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_cat[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cat[2]~reg0 .lut_mask = "00ee";
defparam \seg_cat[2]~reg0 .operation_mode = "normal";
defparam \seg_cat[2]~reg0 .output_mode = "reg_only";
defparam \seg_cat[2]~reg0 .register_cascade_mode = "off";
defparam \seg_cat[2]~reg0 .sum_lutc_input = "datac";
defparam \seg_cat[2]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y7_N5
maxii_lcell \Decoder1~3 (
// Equation(s):
// \Decoder1~3_combout  = (seg_cnt[1] & (!seg_cnt[2] & (seg_cnt[0])))

	.clk(gnd),
	.dataa(seg_cnt[1]),
	.datab(seg_cnt[2]),
	.datac(seg_cnt[0]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder1~3 .lut_mask = "2020";
defparam \Decoder1~3 .operation_mode = "normal";
defparam \Decoder1~3 .output_mode = "comb_only";
defparam \Decoder1~3 .register_cascade_mode = "off";
defparam \Decoder1~3 .sum_lutc_input = "datac";
defparam \Decoder1~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y7_N9
maxii_lcell \seg_cat[3]~reg0 (
// Equation(s):
// \seg_cat[3]~reg0_regout  = DFFEAS(((!\Decoder1~2_combout  & ((\Decoder1~3_combout ) # (\seg_cat[3]~reg0_regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , VCC, , , !\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\Decoder1~3_combout ),
	.datab(\seg_cat[3]~reg0_regout ),
	.datac(vcc),
	.datad(\Decoder1~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\onride~combout ),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_cat[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cat[3]~reg0 .lut_mask = "00ee";
defparam \seg_cat[3]~reg0 .operation_mode = "normal";
defparam \seg_cat[3]~reg0 .output_mode = "reg_only";
defparam \seg_cat[3]~reg0 .register_cascade_mode = "off";
defparam \seg_cat[3]~reg0 .sum_lutc_input = "datac";
defparam \seg_cat[3]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y7_N1
maxii_lcell \Decoder1~4 (
// Equation(s):
// \Decoder1~4_combout  = (!seg_cnt[1] & (seg_cnt[2] & (!seg_cnt[0])))

	.clk(gnd),
	.dataa(seg_cnt[1]),
	.datab(seg_cnt[2]),
	.datac(seg_cnt[0]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder1~4 .lut_mask = "0404";
defparam \Decoder1~4 .operation_mode = "normal";
defparam \Decoder1~4 .output_mode = "comb_only";
defparam \Decoder1~4 .register_cascade_mode = "off";
defparam \Decoder1~4 .sum_lutc_input = "datac";
defparam \Decoder1~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y7_N6
maxii_lcell \seg_cat[4]~reg0 (
// Equation(s):
// \seg_cat[4]~reg0_regout  = DFFEAS(((!\Decoder1~3_combout  & ((\seg_cat[4]~reg0_regout ) # (\Decoder1~4_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , VCC, , , !\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_cat[4]~reg0_regout ),
	.datab(\Decoder1~4_combout ),
	.datac(vcc),
	.datad(\Decoder1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\onride~combout ),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_cat[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cat[4]~reg0 .lut_mask = "00ee";
defparam \seg_cat[4]~reg0 .operation_mode = "normal";
defparam \seg_cat[4]~reg0 .output_mode = "reg_only";
defparam \seg_cat[4]~reg0 .register_cascade_mode = "off";
defparam \seg_cat[4]~reg0 .sum_lutc_input = "datac";
defparam \seg_cat[4]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y7_N2
maxii_lcell \Decoder1~5 (
// Equation(s):
// \Decoder1~5_combout  = ((!seg_cnt[1] & (seg_cnt[2] & seg_cnt[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(seg_cnt[1]),
	.datac(seg_cnt[2]),
	.datad(seg_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder1~5 .lut_mask = "3000";
defparam \Decoder1~5 .operation_mode = "normal";
defparam \Decoder1~5 .output_mode = "comb_only";
defparam \Decoder1~5 .register_cascade_mode = "off";
defparam \Decoder1~5 .sum_lutc_input = "datac";
defparam \Decoder1~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y7_N4
maxii_lcell \seg_cat[5]~reg0 (
// Equation(s):
// \seg_cat[5]~reg0_regout  = DFFEAS(((!\Decoder1~4_combout  & ((\seg_cat[5]~reg0_regout ) # (\Decoder1~5_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , VCC, , , !\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_cat[5]~reg0_regout ),
	.datab(\Decoder1~5_combout ),
	.datac(vcc),
	.datad(\Decoder1~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\onride~combout ),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_cat[5]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cat[5]~reg0 .lut_mask = "00ee";
defparam \seg_cat[5]~reg0 .operation_mode = "normal";
defparam \seg_cat[5]~reg0 .output_mode = "reg_only";
defparam \seg_cat[5]~reg0 .register_cascade_mode = "off";
defparam \seg_cat[5]~reg0 .sum_lutc_input = "datac";
defparam \seg_cat[5]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y7_N1
maxii_lcell \Decoder1~6 (
// Equation(s):
// \Decoder1~6_combout  = ((seg_cnt[2] & (!seg_cnt[0] & seg_cnt[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(seg_cnt[2]),
	.datac(seg_cnt[0]),
	.datad(seg_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder1~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder1~6 .lut_mask = "0c00";
defparam \Decoder1~6 .operation_mode = "normal";
defparam \Decoder1~6 .output_mode = "comb_only";
defparam \Decoder1~6 .register_cascade_mode = "off";
defparam \Decoder1~6 .sum_lutc_input = "datac";
defparam \Decoder1~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y7_N0
maxii_lcell \seg_cat[6]~reg0 (
// Equation(s):
// \seg_cat[6]~reg0_regout  = DFFEAS(((!\Decoder1~5_combout  & ((\seg_cat[6]~reg0_regout ) # (\Decoder1~6_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , VCC, , , !\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_cat[6]~reg0_regout ),
	.datab(\Decoder1~6_combout ),
	.datac(vcc),
	.datad(\Decoder1~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\onride~combout ),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_cat[6]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cat[6]~reg0 .lut_mask = "00ee";
defparam \seg_cat[6]~reg0 .operation_mode = "normal";
defparam \seg_cat[6]~reg0 .output_mode = "reg_only";
defparam \seg_cat[6]~reg0 .register_cascade_mode = "off";
defparam \seg_cat[6]~reg0 .sum_lutc_input = "datac";
defparam \seg_cat[6]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y7_N2
maxii_lcell \seg_cat[7]~reg0 (
// Equation(s):
// \seg_cat[7]~reg0_regout  = DFFEAS(((!\Decoder1~6_combout  & ((\Decoder2~0_combout ) # (\seg_cat[7]~reg0_regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , VCC, , , !\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\Decoder2~0_combout ),
	.datab(\seg_cat[7]~reg0_regout ),
	.datac(vcc),
	.datad(\Decoder1~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(!\onride~combout ),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_cat[7]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_cat[7]~reg0 .lut_mask = "00ee";
defparam \seg_cat[7]~reg0 .operation_mode = "normal";
defparam \seg_cat[7]~reg0 .output_mode = "reg_only";
defparam \seg_cat[7]~reg0 .register_cascade_mode = "off";
defparam \seg_cat[7]~reg0 .sum_lutc_input = "datac";
defparam \seg_cat[7]~reg0 .synch_mode = "on";
// synopsys translate_on

// Location: PIN_122,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \stopped~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\stopped~combout ),
	.padio(stopped));
// synopsys translate_off
defparam \stopped~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X15_Y9_N9
maxii_lcell \stoppedKEY|key_1st_now (
// Equation(s):
// \stoppedKEY|key_1st_now~regout  = DFFEAS((((!\stopped~combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\stopped~combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|key_1st_now~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|key_1st_now .lut_mask = "00ff";
defparam \stoppedKEY|key_1st_now .operation_mode = "normal";
defparam \stoppedKEY|key_1st_now .output_mode = "reg_only";
defparam \stoppedKEY|key_1st_now .register_cascade_mode = "off";
defparam \stoppedKEY|key_1st_now .sum_lutc_input = "datac";
defparam \stoppedKEY|key_1st_now .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y9_N3
maxii_lcell \stoppedKEY|key_1st_pre (
// Equation(s):
// \stoppedKEY|key_edge  = (((!H2_key_1st_pre & \stoppedKEY|key_1st_now~regout )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\stoppedKEY|key_1st_now~regout ),
	.datad(\stoppedKEY|key_1st_now~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stoppedKEY|key_edge ),
	.regout(\stoppedKEY|key_1st_pre~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|key_1st_pre .lut_mask = "0f00";
defparam \stoppedKEY|key_1st_pre .operation_mode = "normal";
defparam \stoppedKEY|key_1st_pre .output_mode = "comb_only";
defparam \stoppedKEY|key_1st_pre .register_cascade_mode = "off";
defparam \stoppedKEY|key_1st_pre .sum_lutc_input = "qfbk";
defparam \stoppedKEY|key_1st_pre .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y9_N1
maxii_lcell \stoppedKEY|cnt[0] (
// Equation(s):
// \stoppedKEY|cnt [0] = DFFEAS(((!\stoppedKEY|cnt [0])), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[0]~5  = CARRY(((\stoppedKEY|cnt [0])))
// \stoppedKEY|cnt[0]~5COUT1_37  = CARRY(((\stoppedKEY|cnt [0])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stoppedKEY|cnt [0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [0]),
	.cout(),
	.cout0(\stoppedKEY|cnt[0]~5 ),
	.cout1(\stoppedKEY|cnt[0]~5COUT1_37 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[0] .lut_mask = "33cc";
defparam \stoppedKEY|cnt[0] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[0] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[0] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[0] .sum_lutc_input = "datac";
defparam \stoppedKEY|cnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y9_N2
maxii_lcell \stoppedKEY|cnt[1] (
// Equation(s):
// \stoppedKEY|cnt [1] = DFFEAS((\stoppedKEY|cnt [1] $ ((\stoppedKEY|cnt[0]~5 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[1]~7  = CARRY(((!\stoppedKEY|cnt[0]~5 ) # (!\stoppedKEY|cnt [1])))
// \stoppedKEY|cnt[1]~7COUT1_38  = CARRY(((!\stoppedKEY|cnt[0]~5COUT1_37 ) # (!\stoppedKEY|cnt [1])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stoppedKEY|cnt [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\stoppedKEY|cnt[0]~5 ),
	.cin1(\stoppedKEY|cnt[0]~5COUT1_37 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [1]),
	.cout(),
	.cout0(\stoppedKEY|cnt[1]~7 ),
	.cout1(\stoppedKEY|cnt[1]~7COUT1_38 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[1] .cin0_used = "true";
defparam \stoppedKEY|cnt[1] .cin1_used = "true";
defparam \stoppedKEY|cnt[1] .lut_mask = "3c3f";
defparam \stoppedKEY|cnt[1] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[1] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[1] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[1] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y9_N3
maxii_lcell \stoppedKEY|cnt[2] (
// Equation(s):
// \stoppedKEY|cnt [2] = DFFEAS(\stoppedKEY|cnt [2] $ ((((!\stoppedKEY|cnt[1]~7 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[2]~9  = CARRY((\stoppedKEY|cnt [2] & ((!\stoppedKEY|cnt[1]~7 ))))
// \stoppedKEY|cnt[2]~9COUT1_39  = CARRY((\stoppedKEY|cnt [2] & ((!\stoppedKEY|cnt[1]~7COUT1_38 ))))

	.clk(\clk~combout ),
	.dataa(\stoppedKEY|cnt [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\stoppedKEY|cnt[1]~7 ),
	.cin1(\stoppedKEY|cnt[1]~7COUT1_38 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [2]),
	.cout(),
	.cout0(\stoppedKEY|cnt[2]~9 ),
	.cout1(\stoppedKEY|cnt[2]~9COUT1_39 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[2] .cin0_used = "true";
defparam \stoppedKEY|cnt[2] .cin1_used = "true";
defparam \stoppedKEY|cnt[2] .lut_mask = "a50a";
defparam \stoppedKEY|cnt[2] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[2] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[2] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[2] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y9_N4
maxii_lcell \stoppedKEY|cnt[3] (
// Equation(s):
// \stoppedKEY|cnt [3] = DFFEAS(\stoppedKEY|cnt [3] $ ((((\stoppedKEY|cnt[2]~9 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[3]~11  = CARRY(((!\stoppedKEY|cnt[2]~9COUT1_39 )) # (!\stoppedKEY|cnt [3]))

	.clk(\clk~combout ),
	.dataa(\stoppedKEY|cnt [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\stoppedKEY|cnt[2]~9 ),
	.cin1(\stoppedKEY|cnt[2]~9COUT1_39 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [3]),
	.cout(\stoppedKEY|cnt[3]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|cnt[3] .cin0_used = "true";
defparam \stoppedKEY|cnt[3] .cin1_used = "true";
defparam \stoppedKEY|cnt[3] .lut_mask = "5a5f";
defparam \stoppedKEY|cnt[3] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[3] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[3] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[3] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y9_N5
maxii_lcell \stoppedKEY|cnt[4] (
// Equation(s):
// \stoppedKEY|cnt [4] = DFFEAS(\stoppedKEY|cnt [4] $ ((((!\stoppedKEY|cnt[3]~11 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[4]~13  = CARRY((\stoppedKEY|cnt [4] & ((!\stoppedKEY|cnt[3]~11 ))))
// \stoppedKEY|cnt[4]~13COUT1_40  = CARRY((\stoppedKEY|cnt [4] & ((!\stoppedKEY|cnt[3]~11 ))))

	.clk(\clk~combout ),
	.dataa(\stoppedKEY|cnt [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[3]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [4]),
	.cout(),
	.cout0(\stoppedKEY|cnt[4]~13 ),
	.cout1(\stoppedKEY|cnt[4]~13COUT1_40 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[4] .cin_used = "true";
defparam \stoppedKEY|cnt[4] .lut_mask = "a50a";
defparam \stoppedKEY|cnt[4] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[4] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[4] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[4] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y9_N6
maxii_lcell \stoppedKEY|cnt[5] (
// Equation(s):
// \stoppedKEY|cnt [5] = DFFEAS(\stoppedKEY|cnt [5] $ (((((!\stoppedKEY|cnt[3]~11  & \stoppedKEY|cnt[4]~13 ) # (\stoppedKEY|cnt[3]~11  & \stoppedKEY|cnt[4]~13COUT1_40 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[5]~15  = CARRY(((!\stoppedKEY|cnt[4]~13 )) # (!\stoppedKEY|cnt [5]))
// \stoppedKEY|cnt[5]~15COUT1_41  = CARRY(((!\stoppedKEY|cnt[4]~13COUT1_40 )) # (!\stoppedKEY|cnt [5]))

	.clk(\clk~combout ),
	.dataa(\stoppedKEY|cnt [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[3]~11 ),
	.cin0(\stoppedKEY|cnt[4]~13 ),
	.cin1(\stoppedKEY|cnt[4]~13COUT1_40 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [5]),
	.cout(),
	.cout0(\stoppedKEY|cnt[5]~15 ),
	.cout1(\stoppedKEY|cnt[5]~15COUT1_41 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[5] .cin0_used = "true";
defparam \stoppedKEY|cnt[5] .cin1_used = "true";
defparam \stoppedKEY|cnt[5] .cin_used = "true";
defparam \stoppedKEY|cnt[5] .lut_mask = "5a5f";
defparam \stoppedKEY|cnt[5] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[5] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[5] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[5] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y9_N7
maxii_lcell \stoppedKEY|cnt[6] (
// Equation(s):
// \stoppedKEY|cnt [6] = DFFEAS((\stoppedKEY|cnt [6] $ ((!(!\stoppedKEY|cnt[3]~11  & \stoppedKEY|cnt[5]~15 ) # (\stoppedKEY|cnt[3]~11  & \stoppedKEY|cnt[5]~15COUT1_41 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[6]~17  = CARRY(((\stoppedKEY|cnt [6] & !\stoppedKEY|cnt[5]~15 )))
// \stoppedKEY|cnt[6]~17COUT1_42  = CARRY(((\stoppedKEY|cnt [6] & !\stoppedKEY|cnt[5]~15COUT1_41 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stoppedKEY|cnt [6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[3]~11 ),
	.cin0(\stoppedKEY|cnt[5]~15 ),
	.cin1(\stoppedKEY|cnt[5]~15COUT1_41 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [6]),
	.cout(),
	.cout0(\stoppedKEY|cnt[6]~17 ),
	.cout1(\stoppedKEY|cnt[6]~17COUT1_42 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[6] .cin0_used = "true";
defparam \stoppedKEY|cnt[6] .cin1_used = "true";
defparam \stoppedKEY|cnt[6] .cin_used = "true";
defparam \stoppedKEY|cnt[6] .lut_mask = "c30c";
defparam \stoppedKEY|cnt[6] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[6] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[6] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[6] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y9_N8
maxii_lcell \stoppedKEY|cnt[7] (
// Equation(s):
// \stoppedKEY|cnt [7] = DFFEAS(\stoppedKEY|cnt [7] $ (((((!\stoppedKEY|cnt[3]~11  & \stoppedKEY|cnt[6]~17 ) # (\stoppedKEY|cnt[3]~11  & \stoppedKEY|cnt[6]~17COUT1_42 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[7]~19  = CARRY(((!\stoppedKEY|cnt[6]~17 )) # (!\stoppedKEY|cnt [7]))
// \stoppedKEY|cnt[7]~19COUT1_43  = CARRY(((!\stoppedKEY|cnt[6]~17COUT1_42 )) # (!\stoppedKEY|cnt [7]))

	.clk(\clk~combout ),
	.dataa(\stoppedKEY|cnt [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[3]~11 ),
	.cin0(\stoppedKEY|cnt[6]~17 ),
	.cin1(\stoppedKEY|cnt[6]~17COUT1_42 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [7]),
	.cout(),
	.cout0(\stoppedKEY|cnt[7]~19 ),
	.cout1(\stoppedKEY|cnt[7]~19COUT1_43 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[7] .cin0_used = "true";
defparam \stoppedKEY|cnt[7] .cin1_used = "true";
defparam \stoppedKEY|cnt[7] .cin_used = "true";
defparam \stoppedKEY|cnt[7] .lut_mask = "5a5f";
defparam \stoppedKEY|cnt[7] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[7] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[7] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[7] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y9_N9
maxii_lcell \stoppedKEY|cnt[8] (
// Equation(s):
// \stoppedKEY|cnt [8] = DFFEAS((\stoppedKEY|cnt [8] $ ((!(!\stoppedKEY|cnt[3]~11  & \stoppedKEY|cnt[7]~19 ) # (\stoppedKEY|cnt[3]~11  & \stoppedKEY|cnt[7]~19COUT1_43 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[8]~21  = CARRY(((\stoppedKEY|cnt [8] & !\stoppedKEY|cnt[7]~19COUT1_43 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stoppedKEY|cnt [8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[3]~11 ),
	.cin0(\stoppedKEY|cnt[7]~19 ),
	.cin1(\stoppedKEY|cnt[7]~19COUT1_43 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [8]),
	.cout(\stoppedKEY|cnt[8]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|cnt[8] .cin0_used = "true";
defparam \stoppedKEY|cnt[8] .cin1_used = "true";
defparam \stoppedKEY|cnt[8] .cin_used = "true";
defparam \stoppedKEY|cnt[8] .lut_mask = "c30c";
defparam \stoppedKEY|cnt[8] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[8] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[8] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[8] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y9_N0
maxii_lcell \stoppedKEY|cnt[9] (
// Equation(s):
// \stoppedKEY|cnt [9] = DFFEAS((\stoppedKEY|cnt [9] $ ((\stoppedKEY|cnt[8]~21 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[9]~23  = CARRY(((!\stoppedKEY|cnt[8]~21 ) # (!\stoppedKEY|cnt [9])))
// \stoppedKEY|cnt[9]~23COUT1_44  = CARRY(((!\stoppedKEY|cnt[8]~21 ) # (!\stoppedKEY|cnt [9])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stoppedKEY|cnt [9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[8]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [9]),
	.cout(),
	.cout0(\stoppedKEY|cnt[9]~23 ),
	.cout1(\stoppedKEY|cnt[9]~23COUT1_44 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[9] .cin_used = "true";
defparam \stoppedKEY|cnt[9] .lut_mask = "3c3f";
defparam \stoppedKEY|cnt[9] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[9] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[9] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[9] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y9_N1
maxii_lcell \stoppedKEY|cnt[10] (
// Equation(s):
// \stoppedKEY|cnt [10] = DFFEAS((\stoppedKEY|cnt [10] $ ((!(!\stoppedKEY|cnt[8]~21  & \stoppedKEY|cnt[9]~23 ) # (\stoppedKEY|cnt[8]~21  & \stoppedKEY|cnt[9]~23COUT1_44 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[10]~25  = CARRY(((\stoppedKEY|cnt [10] & !\stoppedKEY|cnt[9]~23 )))
// \stoppedKEY|cnt[10]~25COUT1_45  = CARRY(((\stoppedKEY|cnt [10] & !\stoppedKEY|cnt[9]~23COUT1_44 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stoppedKEY|cnt [10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[8]~21 ),
	.cin0(\stoppedKEY|cnt[9]~23 ),
	.cin1(\stoppedKEY|cnt[9]~23COUT1_44 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [10]),
	.cout(),
	.cout0(\stoppedKEY|cnt[10]~25 ),
	.cout1(\stoppedKEY|cnt[10]~25COUT1_45 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[10] .cin0_used = "true";
defparam \stoppedKEY|cnt[10] .cin1_used = "true";
defparam \stoppedKEY|cnt[10] .cin_used = "true";
defparam \stoppedKEY|cnt[10] .lut_mask = "c30c";
defparam \stoppedKEY|cnt[10] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[10] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[10] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[10] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y9_N2
maxii_lcell \stoppedKEY|cnt[11] (
// Equation(s):
// \stoppedKEY|cnt [11] = DFFEAS((\stoppedKEY|cnt [11] $ (((!\stoppedKEY|cnt[8]~21  & \stoppedKEY|cnt[10]~25 ) # (\stoppedKEY|cnt[8]~21  & \stoppedKEY|cnt[10]~25COUT1_45 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[11]~27  = CARRY(((!\stoppedKEY|cnt[10]~25 ) # (!\stoppedKEY|cnt [11])))
// \stoppedKEY|cnt[11]~27COUT1_46  = CARRY(((!\stoppedKEY|cnt[10]~25COUT1_45 ) # (!\stoppedKEY|cnt [11])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stoppedKEY|cnt [11]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[8]~21 ),
	.cin0(\stoppedKEY|cnt[10]~25 ),
	.cin1(\stoppedKEY|cnt[10]~25COUT1_45 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [11]),
	.cout(),
	.cout0(\stoppedKEY|cnt[11]~27 ),
	.cout1(\stoppedKEY|cnt[11]~27COUT1_46 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[11] .cin0_used = "true";
defparam \stoppedKEY|cnt[11] .cin1_used = "true";
defparam \stoppedKEY|cnt[11] .cin_used = "true";
defparam \stoppedKEY|cnt[11] .lut_mask = "3c3f";
defparam \stoppedKEY|cnt[11] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[11] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[11] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[11] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y9_N3
maxii_lcell \stoppedKEY|cnt[12] (
// Equation(s):
// \stoppedKEY|cnt [12] = DFFEAS(\stoppedKEY|cnt [12] $ ((((!(!\stoppedKEY|cnt[8]~21  & \stoppedKEY|cnt[11]~27 ) # (\stoppedKEY|cnt[8]~21  & \stoppedKEY|cnt[11]~27COUT1_46 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[12]~29  = CARRY((\stoppedKEY|cnt [12] & ((!\stoppedKEY|cnt[11]~27 ))))
// \stoppedKEY|cnt[12]~29COUT1_47  = CARRY((\stoppedKEY|cnt [12] & ((!\stoppedKEY|cnt[11]~27COUT1_46 ))))

	.clk(\clk~combout ),
	.dataa(\stoppedKEY|cnt [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[8]~21 ),
	.cin0(\stoppedKEY|cnt[11]~27 ),
	.cin1(\stoppedKEY|cnt[11]~27COUT1_46 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [12]),
	.cout(),
	.cout0(\stoppedKEY|cnt[12]~29 ),
	.cout1(\stoppedKEY|cnt[12]~29COUT1_47 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[12] .cin0_used = "true";
defparam \stoppedKEY|cnt[12] .cin1_used = "true";
defparam \stoppedKEY|cnt[12] .cin_used = "true";
defparam \stoppedKEY|cnt[12] .lut_mask = "a50a";
defparam \stoppedKEY|cnt[12] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[12] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[12] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[12] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y9_N4
maxii_lcell \stoppedKEY|cnt[13] (
// Equation(s):
// \stoppedKEY|cnt [13] = DFFEAS((\stoppedKEY|cnt [13] $ (((!\stoppedKEY|cnt[8]~21  & \stoppedKEY|cnt[12]~29 ) # (\stoppedKEY|cnt[8]~21  & \stoppedKEY|cnt[12]~29COUT1_47 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[13]~31  = CARRY(((!\stoppedKEY|cnt[12]~29COUT1_47 ) # (!\stoppedKEY|cnt [13])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stoppedKEY|cnt [13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[8]~21 ),
	.cin0(\stoppedKEY|cnt[12]~29 ),
	.cin1(\stoppedKEY|cnt[12]~29COUT1_47 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [13]),
	.cout(\stoppedKEY|cnt[13]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|cnt[13] .cin0_used = "true";
defparam \stoppedKEY|cnt[13] .cin1_used = "true";
defparam \stoppedKEY|cnt[13] .cin_used = "true";
defparam \stoppedKEY|cnt[13] .lut_mask = "3c3f";
defparam \stoppedKEY|cnt[13] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[13] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[13] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[13] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y9_N5
maxii_lcell \stoppedKEY|cnt[14] (
// Equation(s):
// \stoppedKEY|cnt [14] = DFFEAS(\stoppedKEY|cnt [14] $ ((((!\stoppedKEY|cnt[13]~31 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[14]~33  = CARRY((\stoppedKEY|cnt [14] & ((!\stoppedKEY|cnt[13]~31 ))))
// \stoppedKEY|cnt[14]~33COUT1_48  = CARRY((\stoppedKEY|cnt [14] & ((!\stoppedKEY|cnt[13]~31 ))))

	.clk(\clk~combout ),
	.dataa(\stoppedKEY|cnt [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[13]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [14]),
	.cout(),
	.cout0(\stoppedKEY|cnt[14]~33 ),
	.cout1(\stoppedKEY|cnt[14]~33COUT1_48 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[14] .cin_used = "true";
defparam \stoppedKEY|cnt[14] .lut_mask = "a50a";
defparam \stoppedKEY|cnt[14] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[14] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[14] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[14] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y9_N6
maxii_lcell \stoppedKEY|cnt[15] (
// Equation(s):
// \stoppedKEY|cnt [15] = DFFEAS(\stoppedKEY|cnt [15] $ (((((!\stoppedKEY|cnt[13]~31  & \stoppedKEY|cnt[14]~33 ) # (\stoppedKEY|cnt[13]~31  & \stoppedKEY|cnt[14]~33COUT1_48 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , 
// )
// \stoppedKEY|cnt[15]~35  = CARRY(((!\stoppedKEY|cnt[14]~33 )) # (!\stoppedKEY|cnt [15]))
// \stoppedKEY|cnt[15]~35COUT1_49  = CARRY(((!\stoppedKEY|cnt[14]~33COUT1_48 )) # (!\stoppedKEY|cnt [15]))

	.clk(\clk~combout ),
	.dataa(\stoppedKEY|cnt [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[13]~31 ),
	.cin0(\stoppedKEY|cnt[14]~33 ),
	.cin1(\stoppedKEY|cnt[14]~33COUT1_48 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [15]),
	.cout(),
	.cout0(\stoppedKEY|cnt[15]~35 ),
	.cout1(\stoppedKEY|cnt[15]~35COUT1_49 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[15] .cin0_used = "true";
defparam \stoppedKEY|cnt[15] .cin1_used = "true";
defparam \stoppedKEY|cnt[15] .cin_used = "true";
defparam \stoppedKEY|cnt[15] .lut_mask = "5a5f";
defparam \stoppedKEY|cnt[15] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[15] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[15] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[15] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y9_N7
maxii_lcell \stoppedKEY|cnt[16] (
// Equation(s):
// \stoppedKEY|cnt [16] = DFFEAS((\stoppedKEY|cnt [16] $ ((!(!\stoppedKEY|cnt[13]~31  & \stoppedKEY|cnt[15]~35 ) # (\stoppedKEY|cnt[13]~31  & \stoppedKEY|cnt[15]~35COUT1_49 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )
// \stoppedKEY|cnt[16]~1  = CARRY(((\stoppedKEY|cnt [16] & !\stoppedKEY|cnt[15]~35 )))
// \stoppedKEY|cnt[16]~1COUT1_50  = CARRY(((\stoppedKEY|cnt [16] & !\stoppedKEY|cnt[15]~35COUT1_49 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stoppedKEY|cnt [16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[13]~31 ),
	.cin0(\stoppedKEY|cnt[15]~35 ),
	.cin1(\stoppedKEY|cnt[15]~35COUT1_49 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [16]),
	.cout(),
	.cout0(\stoppedKEY|cnt[16]~1 ),
	.cout1(\stoppedKEY|cnt[16]~1COUT1_50 ));
// synopsys translate_off
defparam \stoppedKEY|cnt[16] .cin0_used = "true";
defparam \stoppedKEY|cnt[16] .cin1_used = "true";
defparam \stoppedKEY|cnt[16] .cin_used = "true";
defparam \stoppedKEY|cnt[16] .lut_mask = "c30c";
defparam \stoppedKEY|cnt[16] .operation_mode = "arithmetic";
defparam \stoppedKEY|cnt[16] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[16] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[16] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y9_N8
maxii_lcell \stoppedKEY|cnt[17] (
// Equation(s):
// \stoppedKEY|cnt [17] = DFFEAS((((!\stoppedKEY|cnt[13]~31  & \stoppedKEY|cnt[16]~1 ) # (\stoppedKEY|cnt[13]~31  & \stoppedKEY|cnt[16]~1COUT1_50 ) $ (\stoppedKEY|cnt [17]))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \stoppedKEY|key_edge , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\stoppedKEY|cnt [17]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\stoppedKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\stoppedKEY|cnt[13]~31 ),
	.cin0(\stoppedKEY|cnt[16]~1 ),
	.cin1(\stoppedKEY|cnt[16]~1COUT1_50 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|cnt [17]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|cnt[17] .cin0_used = "true";
defparam \stoppedKEY|cnt[17] .cin1_used = "true";
defparam \stoppedKEY|cnt[17] .cin_used = "true";
defparam \stoppedKEY|cnt[17] .lut_mask = "0ff0";
defparam \stoppedKEY|cnt[17] .operation_mode = "normal";
defparam \stoppedKEY|cnt[17] .output_mode = "reg_only";
defparam \stoppedKEY|cnt[17] .register_cascade_mode = "off";
defparam \stoppedKEY|cnt[17] .sum_lutc_input = "cin";
defparam \stoppedKEY|cnt[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y9_N5
maxii_lcell \stoppedKEY|Equal0~0 (
// Equation(s):
// \stoppedKEY|Equal0~0_combout  = (((\stoppedKEY|cnt [17] & \stoppedKEY|cnt [16])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\stoppedKEY|cnt [17]),
	.datad(\stoppedKEY|cnt [16]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stoppedKEY|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|Equal0~0 .lut_mask = "f000";
defparam \stoppedKEY|Equal0~0 .operation_mode = "normal";
defparam \stoppedKEY|Equal0~0 .output_mode = "comb_only";
defparam \stoppedKEY|Equal0~0 .register_cascade_mode = "off";
defparam \stoppedKEY|Equal0~0 .sum_lutc_input = "datac";
defparam \stoppedKEY|Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y9_N8
maxii_lcell \stoppedKEY|Equal0~2 (
// Equation(s):
// \stoppedKEY|Equal0~2_combout  = (\stoppedKEY|cnt [6] & (\stoppedKEY|cnt [7] & (\stoppedKEY|cnt [5] & \stoppedKEY|cnt [4])))

	.clk(gnd),
	.dataa(\stoppedKEY|cnt [6]),
	.datab(\stoppedKEY|cnt [7]),
	.datac(\stoppedKEY|cnt [5]),
	.datad(\stoppedKEY|cnt [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stoppedKEY|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|Equal0~2 .lut_mask = "8000";
defparam \stoppedKEY|Equal0~2 .operation_mode = "normal";
defparam \stoppedKEY|Equal0~2 .output_mode = "comb_only";
defparam \stoppedKEY|Equal0~2 .register_cascade_mode = "off";
defparam \stoppedKEY|Equal0~2 .sum_lutc_input = "datac";
defparam \stoppedKEY|Equal0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y9_N2
maxii_lcell \stoppedKEY|Equal0~1 (
// Equation(s):
// \stoppedKEY|Equal0~1_combout  = (\stoppedKEY|cnt [2] & (\stoppedKEY|cnt [3] & (\stoppedKEY|cnt [1] & \stoppedKEY|cnt [0])))

	.clk(gnd),
	.dataa(\stoppedKEY|cnt [2]),
	.datab(\stoppedKEY|cnt [3]),
	.datac(\stoppedKEY|cnt [1]),
	.datad(\stoppedKEY|cnt [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stoppedKEY|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|Equal0~1 .lut_mask = "8000";
defparam \stoppedKEY|Equal0~1 .operation_mode = "normal";
defparam \stoppedKEY|Equal0~1 .output_mode = "comb_only";
defparam \stoppedKEY|Equal0~1 .register_cascade_mode = "off";
defparam \stoppedKEY|Equal0~1 .sum_lutc_input = "datac";
defparam \stoppedKEY|Equal0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y9_N0
maxii_lcell \stoppedKEY|Equal0~3 (
// Equation(s):
// \stoppedKEY|Equal0~3_combout  = (\stoppedKEY|cnt [9] & (\stoppedKEY|cnt [8] & (\stoppedKEY|cnt [11] & \stoppedKEY|cnt [10])))

	.clk(gnd),
	.dataa(\stoppedKEY|cnt [9]),
	.datab(\stoppedKEY|cnt [8]),
	.datac(\stoppedKEY|cnt [11]),
	.datad(\stoppedKEY|cnt [10]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stoppedKEY|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|Equal0~3 .lut_mask = "8000";
defparam \stoppedKEY|Equal0~3 .operation_mode = "normal";
defparam \stoppedKEY|Equal0~3 .output_mode = "comb_only";
defparam \stoppedKEY|Equal0~3 .register_cascade_mode = "off";
defparam \stoppedKEY|Equal0~3 .sum_lutc_input = "datac";
defparam \stoppedKEY|Equal0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y9_N9
maxii_lcell \stoppedKEY|Equal0~4 (
// Equation(s):
// \stoppedKEY|Equal0~4_combout  = (\stoppedKEY|cnt [14] & (\stoppedKEY|cnt [13] & (\stoppedKEY|cnt [15] & \stoppedKEY|cnt [12])))

	.clk(gnd),
	.dataa(\stoppedKEY|cnt [14]),
	.datab(\stoppedKEY|cnt [13]),
	.datac(\stoppedKEY|cnt [15]),
	.datad(\stoppedKEY|cnt [12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stoppedKEY|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|Equal0~4 .lut_mask = "8000";
defparam \stoppedKEY|Equal0~4 .operation_mode = "normal";
defparam \stoppedKEY|Equal0~4 .output_mode = "comb_only";
defparam \stoppedKEY|Equal0~4 .register_cascade_mode = "off";
defparam \stoppedKEY|Equal0~4 .sum_lutc_input = "datac";
defparam \stoppedKEY|Equal0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y9_N3
maxii_lcell \stoppedKEY|Equal0~5 (
// Equation(s):
// \stoppedKEY|Equal0~5_combout  = (\stoppedKEY|Equal0~2_combout  & (\stoppedKEY|Equal0~1_combout  & (\stoppedKEY|Equal0~3_combout  & \stoppedKEY|Equal0~4_combout )))

	.clk(gnd),
	.dataa(\stoppedKEY|Equal0~2_combout ),
	.datab(\stoppedKEY|Equal0~1_combout ),
	.datac(\stoppedKEY|Equal0~3_combout ),
	.datad(\stoppedKEY|Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\stoppedKEY|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|Equal0~5 .lut_mask = "8000";
defparam \stoppedKEY|Equal0~5 .operation_mode = "normal";
defparam \stoppedKEY|Equal0~5 .output_mode = "comb_only";
defparam \stoppedKEY|Equal0~5 .register_cascade_mode = "off";
defparam \stoppedKEY|Equal0~5 .sum_lutc_input = "datac";
defparam \stoppedKEY|Equal0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y9_N4
maxii_lcell \stoppedKEY|key_2nd_now (
// Equation(s):
// \stoppedKEY|key_2nd_now~regout  = DFFEAS((\stoppedKEY|Equal0~0_combout  & ((\stoppedKEY|Equal0~5_combout  & ((!\stopped~combout ))) # (!\stoppedKEY|Equal0~5_combout  & (\stoppedKEY|key_2nd_now~regout )))) # (!\stoppedKEY|Equal0~0_combout  & 
// (\stoppedKEY|key_2nd_now~regout )), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\stoppedKEY|key_2nd_now~regout ),
	.datab(\stopped~combout ),
	.datac(\stoppedKEY|Equal0~0_combout ),
	.datad(\stoppedKEY|Equal0~5_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|key_2nd_now~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|key_2nd_now .lut_mask = "3aaa";
defparam \stoppedKEY|key_2nd_now .operation_mode = "normal";
defparam \stoppedKEY|key_2nd_now .output_mode = "reg_only";
defparam \stoppedKEY|key_2nd_now .register_cascade_mode = "off";
defparam \stoppedKEY|key_2nd_now .sum_lutc_input = "datac";
defparam \stoppedKEY|key_2nd_now .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y9_N1
maxii_lcell \stoppedKEY|key_2nd_pre (
// Equation(s):
// \stoppedKEY|key_2nd_pre~regout  = DFFEAS((((\stoppedKEY|key_2nd_now~regout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\stoppedKEY|key_2nd_now~regout ),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stoppedKEY|key_2nd_pre~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \stoppedKEY|key_2nd_pre .lut_mask = "f0f0";
defparam \stoppedKEY|key_2nd_pre .operation_mode = "normal";
defparam \stoppedKEY|key_2nd_pre .output_mode = "reg_only";
defparam \stoppedKEY|key_2nd_pre .register_cascade_mode = "off";
defparam \stoppedKEY|key_2nd_pre .sum_lutc_input = "datac";
defparam \stoppedKEY|key_2nd_pre .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y9_N6
maxii_lcell stop_cnt(
// Equation(s):
// \stop_cnt~regout  = DFFEAS(((\stop_cnt~regout ) # ((\stoppedKEY|key_2nd_now~regout  & !\stoppedKEY|key_2nd_pre~regout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , !\onride~combout , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\stop_cnt~regout ),
	.datac(\stoppedKEY|key_2nd_now~regout ),
	.datad(\stoppedKEY|key_2nd_pre~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(!\onride~combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\stop_cnt~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam stop_cnt.lut_mask = "ccfc";
defparam stop_cnt.operation_mode = "normal";
defparam stop_cnt.output_mode = "reg_only";
defparam stop_cnt.register_cascade_mode = "off";
defparam stop_cnt.sum_lutc_input = "datac";
defparam stop_cnt.synch_mode = "on";
// synopsys translate_on

// Location: PIN_20,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \subtotal~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\subtotal~combout ),
	.padio(subtotal));
// synopsys translate_off
defparam \subtotal~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X13_Y6_N9
maxii_lcell \subKEY|key_1st_now (
// Equation(s):
// \subKEY|key_1st_now~regout  = DFFEAS((((!\subtotal~combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\subtotal~combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|key_1st_now~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|key_1st_now .lut_mask = "00ff";
defparam \subKEY|key_1st_now .operation_mode = "normal";
defparam \subKEY|key_1st_now .output_mode = "reg_only";
defparam \subKEY|key_1st_now .register_cascade_mode = "off";
defparam \subKEY|key_1st_now .sum_lutc_input = "datac";
defparam \subKEY|key_1st_now .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y6_N8
maxii_lcell \subKEY|key_1st_pre (
// Equation(s):
// \subKEY|key_edge  = (((!H3_key_1st_pre & \subKEY|key_1st_now~regout )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\subKEY|key_1st_now~regout ),
	.datad(\subKEY|key_1st_now~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\subKEY|key_edge ),
	.regout(\subKEY|key_1st_pre~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|key_1st_pre .lut_mask = "0f00";
defparam \subKEY|key_1st_pre .operation_mode = "normal";
defparam \subKEY|key_1st_pre .output_mode = "comb_only";
defparam \subKEY|key_1st_pre .register_cascade_mode = "off";
defparam \subKEY|key_1st_pre .sum_lutc_input = "qfbk";
defparam \subKEY|key_1st_pre .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y6_N1
maxii_lcell \subKEY|cnt[0] (
// Equation(s):
// \subKEY|cnt [0] = DFFEAS(((!\subKEY|cnt [0])), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[0]~5  = CARRY(((\subKEY|cnt [0])))
// \subKEY|cnt[0]~5COUT1_37  = CARRY(((\subKEY|cnt [0])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\subKEY|cnt [0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [0]),
	.cout(),
	.cout0(\subKEY|cnt[0]~5 ),
	.cout1(\subKEY|cnt[0]~5COUT1_37 ));
// synopsys translate_off
defparam \subKEY|cnt[0] .lut_mask = "33cc";
defparam \subKEY|cnt[0] .operation_mode = "arithmetic";
defparam \subKEY|cnt[0] .output_mode = "reg_only";
defparam \subKEY|cnt[0] .register_cascade_mode = "off";
defparam \subKEY|cnt[0] .sum_lutc_input = "datac";
defparam \subKEY|cnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y6_N2
maxii_lcell \subKEY|cnt[1] (
// Equation(s):
// \subKEY|cnt [1] = DFFEAS((\subKEY|cnt [1] $ ((\subKEY|cnt[0]~5 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[1]~7  = CARRY(((!\subKEY|cnt[0]~5 ) # (!\subKEY|cnt [1])))
// \subKEY|cnt[1]~7COUT1_38  = CARRY(((!\subKEY|cnt[0]~5COUT1_37 ) # (!\subKEY|cnt [1])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\subKEY|cnt [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\subKEY|cnt[0]~5 ),
	.cin1(\subKEY|cnt[0]~5COUT1_37 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [1]),
	.cout(),
	.cout0(\subKEY|cnt[1]~7 ),
	.cout1(\subKEY|cnt[1]~7COUT1_38 ));
// synopsys translate_off
defparam \subKEY|cnt[1] .cin0_used = "true";
defparam \subKEY|cnt[1] .cin1_used = "true";
defparam \subKEY|cnt[1] .lut_mask = "3c3f";
defparam \subKEY|cnt[1] .operation_mode = "arithmetic";
defparam \subKEY|cnt[1] .output_mode = "reg_only";
defparam \subKEY|cnt[1] .register_cascade_mode = "off";
defparam \subKEY|cnt[1] .sum_lutc_input = "cin";
defparam \subKEY|cnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y6_N3
maxii_lcell \subKEY|cnt[2] (
// Equation(s):
// \subKEY|cnt [2] = DFFEAS(\subKEY|cnt [2] $ ((((!\subKEY|cnt[1]~7 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[2]~9  = CARRY((\subKEY|cnt [2] & ((!\subKEY|cnt[1]~7 ))))
// \subKEY|cnt[2]~9COUT1_39  = CARRY((\subKEY|cnt [2] & ((!\subKEY|cnt[1]~7COUT1_38 ))))

	.clk(\clk~combout ),
	.dataa(\subKEY|cnt [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\subKEY|cnt[1]~7 ),
	.cin1(\subKEY|cnt[1]~7COUT1_38 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [2]),
	.cout(),
	.cout0(\subKEY|cnt[2]~9 ),
	.cout1(\subKEY|cnt[2]~9COUT1_39 ));
// synopsys translate_off
defparam \subKEY|cnt[2] .cin0_used = "true";
defparam \subKEY|cnt[2] .cin1_used = "true";
defparam \subKEY|cnt[2] .lut_mask = "a50a";
defparam \subKEY|cnt[2] .operation_mode = "arithmetic";
defparam \subKEY|cnt[2] .output_mode = "reg_only";
defparam \subKEY|cnt[2] .register_cascade_mode = "off";
defparam \subKEY|cnt[2] .sum_lutc_input = "cin";
defparam \subKEY|cnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y6_N4
maxii_lcell \subKEY|cnt[3] (
// Equation(s):
// \subKEY|cnt [3] = DFFEAS(\subKEY|cnt [3] $ ((((\subKEY|cnt[2]~9 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[3]~11  = CARRY(((!\subKEY|cnt[2]~9COUT1_39 )) # (!\subKEY|cnt [3]))

	.clk(\clk~combout ),
	.dataa(\subKEY|cnt [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\subKEY|cnt[2]~9 ),
	.cin1(\subKEY|cnt[2]~9COUT1_39 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [3]),
	.cout(\subKEY|cnt[3]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|cnt[3] .cin0_used = "true";
defparam \subKEY|cnt[3] .cin1_used = "true";
defparam \subKEY|cnt[3] .lut_mask = "5a5f";
defparam \subKEY|cnt[3] .operation_mode = "arithmetic";
defparam \subKEY|cnt[3] .output_mode = "reg_only";
defparam \subKEY|cnt[3] .register_cascade_mode = "off";
defparam \subKEY|cnt[3] .sum_lutc_input = "cin";
defparam \subKEY|cnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y6_N5
maxii_lcell \subKEY|cnt[4] (
// Equation(s):
// \subKEY|cnt [4] = DFFEAS(\subKEY|cnt [4] $ ((((!\subKEY|cnt[3]~11 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[4]~13  = CARRY((\subKEY|cnt [4] & ((!\subKEY|cnt[3]~11 ))))
// \subKEY|cnt[4]~13COUT1_40  = CARRY((\subKEY|cnt [4] & ((!\subKEY|cnt[3]~11 ))))

	.clk(\clk~combout ),
	.dataa(\subKEY|cnt [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[3]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [4]),
	.cout(),
	.cout0(\subKEY|cnt[4]~13 ),
	.cout1(\subKEY|cnt[4]~13COUT1_40 ));
// synopsys translate_off
defparam \subKEY|cnt[4] .cin_used = "true";
defparam \subKEY|cnt[4] .lut_mask = "a50a";
defparam \subKEY|cnt[4] .operation_mode = "arithmetic";
defparam \subKEY|cnt[4] .output_mode = "reg_only";
defparam \subKEY|cnt[4] .register_cascade_mode = "off";
defparam \subKEY|cnt[4] .sum_lutc_input = "cin";
defparam \subKEY|cnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y6_N6
maxii_lcell \subKEY|cnt[5] (
// Equation(s):
// \subKEY|cnt [5] = DFFEAS(\subKEY|cnt [5] $ (((((!\subKEY|cnt[3]~11  & \subKEY|cnt[4]~13 ) # (\subKEY|cnt[3]~11  & \subKEY|cnt[4]~13COUT1_40 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[5]~15  = CARRY(((!\subKEY|cnt[4]~13 )) # (!\subKEY|cnt [5]))
// \subKEY|cnt[5]~15COUT1_41  = CARRY(((!\subKEY|cnt[4]~13COUT1_40 )) # (!\subKEY|cnt [5]))

	.clk(\clk~combout ),
	.dataa(\subKEY|cnt [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[3]~11 ),
	.cin0(\subKEY|cnt[4]~13 ),
	.cin1(\subKEY|cnt[4]~13COUT1_40 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [5]),
	.cout(),
	.cout0(\subKEY|cnt[5]~15 ),
	.cout1(\subKEY|cnt[5]~15COUT1_41 ));
// synopsys translate_off
defparam \subKEY|cnt[5] .cin0_used = "true";
defparam \subKEY|cnt[5] .cin1_used = "true";
defparam \subKEY|cnt[5] .cin_used = "true";
defparam \subKEY|cnt[5] .lut_mask = "5a5f";
defparam \subKEY|cnt[5] .operation_mode = "arithmetic";
defparam \subKEY|cnt[5] .output_mode = "reg_only";
defparam \subKEY|cnt[5] .register_cascade_mode = "off";
defparam \subKEY|cnt[5] .sum_lutc_input = "cin";
defparam \subKEY|cnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y6_N7
maxii_lcell \subKEY|cnt[6] (
// Equation(s):
// \subKEY|cnt [6] = DFFEAS((\subKEY|cnt [6] $ ((!(!\subKEY|cnt[3]~11  & \subKEY|cnt[5]~15 ) # (\subKEY|cnt[3]~11  & \subKEY|cnt[5]~15COUT1_41 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[6]~17  = CARRY(((\subKEY|cnt [6] & !\subKEY|cnt[5]~15 )))
// \subKEY|cnt[6]~17COUT1_42  = CARRY(((\subKEY|cnt [6] & !\subKEY|cnt[5]~15COUT1_41 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\subKEY|cnt [6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[3]~11 ),
	.cin0(\subKEY|cnt[5]~15 ),
	.cin1(\subKEY|cnt[5]~15COUT1_41 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [6]),
	.cout(),
	.cout0(\subKEY|cnt[6]~17 ),
	.cout1(\subKEY|cnt[6]~17COUT1_42 ));
// synopsys translate_off
defparam \subKEY|cnt[6] .cin0_used = "true";
defparam \subKEY|cnt[6] .cin1_used = "true";
defparam \subKEY|cnt[6] .cin_used = "true";
defparam \subKEY|cnt[6] .lut_mask = "c30c";
defparam \subKEY|cnt[6] .operation_mode = "arithmetic";
defparam \subKEY|cnt[6] .output_mode = "reg_only";
defparam \subKEY|cnt[6] .register_cascade_mode = "off";
defparam \subKEY|cnt[6] .sum_lutc_input = "cin";
defparam \subKEY|cnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y6_N8
maxii_lcell \subKEY|cnt[7] (
// Equation(s):
// \subKEY|cnt [7] = DFFEAS(\subKEY|cnt [7] $ (((((!\subKEY|cnt[3]~11  & \subKEY|cnt[6]~17 ) # (\subKEY|cnt[3]~11  & \subKEY|cnt[6]~17COUT1_42 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[7]~19  = CARRY(((!\subKEY|cnt[6]~17 )) # (!\subKEY|cnt [7]))
// \subKEY|cnt[7]~19COUT1_43  = CARRY(((!\subKEY|cnt[6]~17COUT1_42 )) # (!\subKEY|cnt [7]))

	.clk(\clk~combout ),
	.dataa(\subKEY|cnt [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[3]~11 ),
	.cin0(\subKEY|cnt[6]~17 ),
	.cin1(\subKEY|cnt[6]~17COUT1_42 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [7]),
	.cout(),
	.cout0(\subKEY|cnt[7]~19 ),
	.cout1(\subKEY|cnt[7]~19COUT1_43 ));
// synopsys translate_off
defparam \subKEY|cnt[7] .cin0_used = "true";
defparam \subKEY|cnt[7] .cin1_used = "true";
defparam \subKEY|cnt[7] .cin_used = "true";
defparam \subKEY|cnt[7] .lut_mask = "5a5f";
defparam \subKEY|cnt[7] .operation_mode = "arithmetic";
defparam \subKEY|cnt[7] .output_mode = "reg_only";
defparam \subKEY|cnt[7] .register_cascade_mode = "off";
defparam \subKEY|cnt[7] .sum_lutc_input = "cin";
defparam \subKEY|cnt[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y6_N9
maxii_lcell \subKEY|cnt[8] (
// Equation(s):
// \subKEY|cnt [8] = DFFEAS((\subKEY|cnt [8] $ ((!(!\subKEY|cnt[3]~11  & \subKEY|cnt[7]~19 ) # (\subKEY|cnt[3]~11  & \subKEY|cnt[7]~19COUT1_43 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[8]~21  = CARRY(((\subKEY|cnt [8] & !\subKEY|cnt[7]~19COUT1_43 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\subKEY|cnt [8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[3]~11 ),
	.cin0(\subKEY|cnt[7]~19 ),
	.cin1(\subKEY|cnt[7]~19COUT1_43 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [8]),
	.cout(\subKEY|cnt[8]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|cnt[8] .cin0_used = "true";
defparam \subKEY|cnt[8] .cin1_used = "true";
defparam \subKEY|cnt[8] .cin_used = "true";
defparam \subKEY|cnt[8] .lut_mask = "c30c";
defparam \subKEY|cnt[8] .operation_mode = "arithmetic";
defparam \subKEY|cnt[8] .output_mode = "reg_only";
defparam \subKEY|cnt[8] .register_cascade_mode = "off";
defparam \subKEY|cnt[8] .sum_lutc_input = "cin";
defparam \subKEY|cnt[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y6_N0
maxii_lcell \subKEY|cnt[9] (
// Equation(s):
// \subKEY|cnt [9] = DFFEAS((\subKEY|cnt [9] $ ((\subKEY|cnt[8]~21 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[9]~23  = CARRY(((!\subKEY|cnt[8]~21 ) # (!\subKEY|cnt [9])))
// \subKEY|cnt[9]~23COUT1_44  = CARRY(((!\subKEY|cnt[8]~21 ) # (!\subKEY|cnt [9])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\subKEY|cnt [9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[8]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [9]),
	.cout(),
	.cout0(\subKEY|cnt[9]~23 ),
	.cout1(\subKEY|cnt[9]~23COUT1_44 ));
// synopsys translate_off
defparam \subKEY|cnt[9] .cin_used = "true";
defparam \subKEY|cnt[9] .lut_mask = "3c3f";
defparam \subKEY|cnt[9] .operation_mode = "arithmetic";
defparam \subKEY|cnt[9] .output_mode = "reg_only";
defparam \subKEY|cnt[9] .register_cascade_mode = "off";
defparam \subKEY|cnt[9] .sum_lutc_input = "cin";
defparam \subKEY|cnt[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y6_N1
maxii_lcell \subKEY|cnt[10] (
// Equation(s):
// \subKEY|cnt [10] = DFFEAS((\subKEY|cnt [10] $ ((!(!\subKEY|cnt[8]~21  & \subKEY|cnt[9]~23 ) # (\subKEY|cnt[8]~21  & \subKEY|cnt[9]~23COUT1_44 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[10]~25  = CARRY(((\subKEY|cnt [10] & !\subKEY|cnt[9]~23 )))
// \subKEY|cnt[10]~25COUT1_45  = CARRY(((\subKEY|cnt [10] & !\subKEY|cnt[9]~23COUT1_44 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\subKEY|cnt [10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[8]~21 ),
	.cin0(\subKEY|cnt[9]~23 ),
	.cin1(\subKEY|cnt[9]~23COUT1_44 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [10]),
	.cout(),
	.cout0(\subKEY|cnt[10]~25 ),
	.cout1(\subKEY|cnt[10]~25COUT1_45 ));
// synopsys translate_off
defparam \subKEY|cnt[10] .cin0_used = "true";
defparam \subKEY|cnt[10] .cin1_used = "true";
defparam \subKEY|cnt[10] .cin_used = "true";
defparam \subKEY|cnt[10] .lut_mask = "c30c";
defparam \subKEY|cnt[10] .operation_mode = "arithmetic";
defparam \subKEY|cnt[10] .output_mode = "reg_only";
defparam \subKEY|cnt[10] .register_cascade_mode = "off";
defparam \subKEY|cnt[10] .sum_lutc_input = "cin";
defparam \subKEY|cnt[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y6_N2
maxii_lcell \subKEY|cnt[11] (
// Equation(s):
// \subKEY|cnt [11] = DFFEAS((\subKEY|cnt [11] $ (((!\subKEY|cnt[8]~21  & \subKEY|cnt[10]~25 ) # (\subKEY|cnt[8]~21  & \subKEY|cnt[10]~25COUT1_45 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[11]~27  = CARRY(((!\subKEY|cnt[10]~25 ) # (!\subKEY|cnt [11])))
// \subKEY|cnt[11]~27COUT1_46  = CARRY(((!\subKEY|cnt[10]~25COUT1_45 ) # (!\subKEY|cnt [11])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\subKEY|cnt [11]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[8]~21 ),
	.cin0(\subKEY|cnt[10]~25 ),
	.cin1(\subKEY|cnt[10]~25COUT1_45 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [11]),
	.cout(),
	.cout0(\subKEY|cnt[11]~27 ),
	.cout1(\subKEY|cnt[11]~27COUT1_46 ));
// synopsys translate_off
defparam \subKEY|cnt[11] .cin0_used = "true";
defparam \subKEY|cnt[11] .cin1_used = "true";
defparam \subKEY|cnt[11] .cin_used = "true";
defparam \subKEY|cnt[11] .lut_mask = "3c3f";
defparam \subKEY|cnt[11] .operation_mode = "arithmetic";
defparam \subKEY|cnt[11] .output_mode = "reg_only";
defparam \subKEY|cnt[11] .register_cascade_mode = "off";
defparam \subKEY|cnt[11] .sum_lutc_input = "cin";
defparam \subKEY|cnt[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y6_N3
maxii_lcell \subKEY|cnt[12] (
// Equation(s):
// \subKEY|cnt [12] = DFFEAS(\subKEY|cnt [12] $ ((((!(!\subKEY|cnt[8]~21  & \subKEY|cnt[11]~27 ) # (\subKEY|cnt[8]~21  & \subKEY|cnt[11]~27COUT1_46 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[12]~29  = CARRY((\subKEY|cnt [12] & ((!\subKEY|cnt[11]~27 ))))
// \subKEY|cnt[12]~29COUT1_47  = CARRY((\subKEY|cnt [12] & ((!\subKEY|cnt[11]~27COUT1_46 ))))

	.clk(\clk~combout ),
	.dataa(\subKEY|cnt [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[8]~21 ),
	.cin0(\subKEY|cnt[11]~27 ),
	.cin1(\subKEY|cnt[11]~27COUT1_46 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [12]),
	.cout(),
	.cout0(\subKEY|cnt[12]~29 ),
	.cout1(\subKEY|cnt[12]~29COUT1_47 ));
// synopsys translate_off
defparam \subKEY|cnt[12] .cin0_used = "true";
defparam \subKEY|cnt[12] .cin1_used = "true";
defparam \subKEY|cnt[12] .cin_used = "true";
defparam \subKEY|cnt[12] .lut_mask = "a50a";
defparam \subKEY|cnt[12] .operation_mode = "arithmetic";
defparam \subKEY|cnt[12] .output_mode = "reg_only";
defparam \subKEY|cnt[12] .register_cascade_mode = "off";
defparam \subKEY|cnt[12] .sum_lutc_input = "cin";
defparam \subKEY|cnt[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y6_N4
maxii_lcell \subKEY|cnt[13] (
// Equation(s):
// \subKEY|cnt [13] = DFFEAS(\subKEY|cnt [13] $ (((((!\subKEY|cnt[8]~21  & \subKEY|cnt[12]~29 ) # (\subKEY|cnt[8]~21  & \subKEY|cnt[12]~29COUT1_47 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[13]~31  = CARRY(((!\subKEY|cnt[12]~29COUT1_47 )) # (!\subKEY|cnt [13]))

	.clk(\clk~combout ),
	.dataa(\subKEY|cnt [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[8]~21 ),
	.cin0(\subKEY|cnt[12]~29 ),
	.cin1(\subKEY|cnt[12]~29COUT1_47 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [13]),
	.cout(\subKEY|cnt[13]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|cnt[13] .cin0_used = "true";
defparam \subKEY|cnt[13] .cin1_used = "true";
defparam \subKEY|cnt[13] .cin_used = "true";
defparam \subKEY|cnt[13] .lut_mask = "5a5f";
defparam \subKEY|cnt[13] .operation_mode = "arithmetic";
defparam \subKEY|cnt[13] .output_mode = "reg_only";
defparam \subKEY|cnt[13] .register_cascade_mode = "off";
defparam \subKEY|cnt[13] .sum_lutc_input = "cin";
defparam \subKEY|cnt[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y6_N5
maxii_lcell \subKEY|cnt[14] (
// Equation(s):
// \subKEY|cnt [14] = DFFEAS(\subKEY|cnt [14] $ ((((!\subKEY|cnt[13]~31 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[14]~33  = CARRY((\subKEY|cnt [14] & ((!\subKEY|cnt[13]~31 ))))
// \subKEY|cnt[14]~33COUT1_48  = CARRY((\subKEY|cnt [14] & ((!\subKEY|cnt[13]~31 ))))

	.clk(\clk~combout ),
	.dataa(\subKEY|cnt [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[13]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [14]),
	.cout(),
	.cout0(\subKEY|cnt[14]~33 ),
	.cout1(\subKEY|cnt[14]~33COUT1_48 ));
// synopsys translate_off
defparam \subKEY|cnt[14] .cin_used = "true";
defparam \subKEY|cnt[14] .lut_mask = "a50a";
defparam \subKEY|cnt[14] .operation_mode = "arithmetic";
defparam \subKEY|cnt[14] .output_mode = "reg_only";
defparam \subKEY|cnt[14] .register_cascade_mode = "off";
defparam \subKEY|cnt[14] .sum_lutc_input = "cin";
defparam \subKEY|cnt[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y6_N6
maxii_lcell \subKEY|cnt[15] (
// Equation(s):
// \subKEY|cnt [15] = DFFEAS(\subKEY|cnt [15] $ (((((!\subKEY|cnt[13]~31  & \subKEY|cnt[14]~33 ) # (\subKEY|cnt[13]~31  & \subKEY|cnt[14]~33COUT1_48 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[15]~35  = CARRY(((!\subKEY|cnt[14]~33 )) # (!\subKEY|cnt [15]))
// \subKEY|cnt[15]~35COUT1_49  = CARRY(((!\subKEY|cnt[14]~33COUT1_48 )) # (!\subKEY|cnt [15]))

	.clk(\clk~combout ),
	.dataa(\subKEY|cnt [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[13]~31 ),
	.cin0(\subKEY|cnt[14]~33 ),
	.cin1(\subKEY|cnt[14]~33COUT1_48 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [15]),
	.cout(),
	.cout0(\subKEY|cnt[15]~35 ),
	.cout1(\subKEY|cnt[15]~35COUT1_49 ));
// synopsys translate_off
defparam \subKEY|cnt[15] .cin0_used = "true";
defparam \subKEY|cnt[15] .cin1_used = "true";
defparam \subKEY|cnt[15] .cin_used = "true";
defparam \subKEY|cnt[15] .lut_mask = "5a5f";
defparam \subKEY|cnt[15] .operation_mode = "arithmetic";
defparam \subKEY|cnt[15] .output_mode = "reg_only";
defparam \subKEY|cnt[15] .register_cascade_mode = "off";
defparam \subKEY|cnt[15] .sum_lutc_input = "cin";
defparam \subKEY|cnt[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y6_N7
maxii_lcell \subKEY|cnt[16] (
// Equation(s):
// \subKEY|cnt [16] = DFFEAS((\subKEY|cnt [16] $ ((!(!\subKEY|cnt[13]~31  & \subKEY|cnt[15]~35 ) # (\subKEY|cnt[13]~31  & \subKEY|cnt[15]~35COUT1_49 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )
// \subKEY|cnt[16]~1  = CARRY(((\subKEY|cnt [16] & !\subKEY|cnt[15]~35 )))
// \subKEY|cnt[16]~1COUT1_50  = CARRY(((\subKEY|cnt [16] & !\subKEY|cnt[15]~35COUT1_49 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\subKEY|cnt [16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[13]~31 ),
	.cin0(\subKEY|cnt[15]~35 ),
	.cin1(\subKEY|cnt[15]~35COUT1_49 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [16]),
	.cout(),
	.cout0(\subKEY|cnt[16]~1 ),
	.cout1(\subKEY|cnt[16]~1COUT1_50 ));
// synopsys translate_off
defparam \subKEY|cnt[16] .cin0_used = "true";
defparam \subKEY|cnt[16] .cin1_used = "true";
defparam \subKEY|cnt[16] .cin_used = "true";
defparam \subKEY|cnt[16] .lut_mask = "c30c";
defparam \subKEY|cnt[16] .operation_mode = "arithmetic";
defparam \subKEY|cnt[16] .output_mode = "reg_only";
defparam \subKEY|cnt[16] .register_cascade_mode = "off";
defparam \subKEY|cnt[16] .sum_lutc_input = "cin";
defparam \subKEY|cnt[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y6_N8
maxii_lcell \subKEY|cnt[17] (
// Equation(s):
// \subKEY|cnt [17] = DFFEAS((((!\subKEY|cnt[13]~31  & \subKEY|cnt[16]~1 ) # (\subKEY|cnt[13]~31  & \subKEY|cnt[16]~1COUT1_50 ) $ (\subKEY|cnt [17]))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \subKEY|key_edge , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\subKEY|cnt [17]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\subKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\subKEY|cnt[13]~31 ),
	.cin0(\subKEY|cnt[16]~1 ),
	.cin1(\subKEY|cnt[16]~1COUT1_50 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|cnt [17]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|cnt[17] .cin0_used = "true";
defparam \subKEY|cnt[17] .cin1_used = "true";
defparam \subKEY|cnt[17] .cin_used = "true";
defparam \subKEY|cnt[17] .lut_mask = "0ff0";
defparam \subKEY|cnt[17] .operation_mode = "normal";
defparam \subKEY|cnt[17] .output_mode = "reg_only";
defparam \subKEY|cnt[17] .register_cascade_mode = "off";
defparam \subKEY|cnt[17] .sum_lutc_input = "cin";
defparam \subKEY|cnt[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y6_N5
maxii_lcell \subKEY|Equal0~0 (
// Equation(s):
// \subKEY|Equal0~0_combout  = (((\subKEY|cnt [17] & \subKEY|cnt [16])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\subKEY|cnt [17]),
	.datad(\subKEY|cnt [16]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\subKEY|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|Equal0~0 .lut_mask = "f000";
defparam \subKEY|Equal0~0 .operation_mode = "normal";
defparam \subKEY|Equal0~0 .output_mode = "comb_only";
defparam \subKEY|Equal0~0 .register_cascade_mode = "off";
defparam \subKEY|Equal0~0 .sum_lutc_input = "datac";
defparam \subKEY|Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y6_N4
maxii_lcell \subKEY|Equal0~1 (
// Equation(s):
// \subKEY|Equal0~1_combout  = (\subKEY|cnt [2] & (\subKEY|cnt [3] & (\subKEY|cnt [1] & \subKEY|cnt [0])))

	.clk(gnd),
	.dataa(\subKEY|cnt [2]),
	.datab(\subKEY|cnt [3]),
	.datac(\subKEY|cnt [1]),
	.datad(\subKEY|cnt [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\subKEY|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|Equal0~1 .lut_mask = "8000";
defparam \subKEY|Equal0~1 .operation_mode = "normal";
defparam \subKEY|Equal0~1 .output_mode = "comb_only";
defparam \subKEY|Equal0~1 .register_cascade_mode = "off";
defparam \subKEY|Equal0~1 .sum_lutc_input = "datac";
defparam \subKEY|Equal0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y6_N1
maxii_lcell \subKEY|Equal0~2 (
// Equation(s):
// \subKEY|Equal0~2_combout  = (\subKEY|cnt [6] & (\subKEY|cnt [7] & (\subKEY|cnt [5] & \subKEY|cnt [4])))

	.clk(gnd),
	.dataa(\subKEY|cnt [6]),
	.datab(\subKEY|cnt [7]),
	.datac(\subKEY|cnt [5]),
	.datad(\subKEY|cnt [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\subKEY|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|Equal0~2 .lut_mask = "8000";
defparam \subKEY|Equal0~2 .operation_mode = "normal";
defparam \subKEY|Equal0~2 .output_mode = "comb_only";
defparam \subKEY|Equal0~2 .register_cascade_mode = "off";
defparam \subKEY|Equal0~2 .sum_lutc_input = "datac";
defparam \subKEY|Equal0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y6_N0
maxii_lcell \subKEY|Equal0~3 (
// Equation(s):
// \subKEY|Equal0~3_combout  = (\subKEY|cnt [9] & (\subKEY|cnt [8] & (\subKEY|cnt [11] & \subKEY|cnt [10])))

	.clk(gnd),
	.dataa(\subKEY|cnt [9]),
	.datab(\subKEY|cnt [8]),
	.datac(\subKEY|cnt [11]),
	.datad(\subKEY|cnt [10]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\subKEY|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|Equal0~3 .lut_mask = "8000";
defparam \subKEY|Equal0~3 .operation_mode = "normal";
defparam \subKEY|Equal0~3 .output_mode = "comb_only";
defparam \subKEY|Equal0~3 .register_cascade_mode = "off";
defparam \subKEY|Equal0~3 .sum_lutc_input = "datac";
defparam \subKEY|Equal0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y6_N9
maxii_lcell \subKEY|Equal0~4 (
// Equation(s):
// \subKEY|Equal0~4_combout  = (\subKEY|cnt [14] & (\subKEY|cnt [13] & (\subKEY|cnt [15] & \subKEY|cnt [12])))

	.clk(gnd),
	.dataa(\subKEY|cnt [14]),
	.datab(\subKEY|cnt [13]),
	.datac(\subKEY|cnt [15]),
	.datad(\subKEY|cnt [12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\subKEY|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|Equal0~4 .lut_mask = "8000";
defparam \subKEY|Equal0~4 .operation_mode = "normal";
defparam \subKEY|Equal0~4 .output_mode = "comb_only";
defparam \subKEY|Equal0~4 .register_cascade_mode = "off";
defparam \subKEY|Equal0~4 .sum_lutc_input = "datac";
defparam \subKEY|Equal0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y6_N2
maxii_lcell \subKEY|Equal0~5 (
// Equation(s):
// \subKEY|Equal0~5_combout  = (\subKEY|Equal0~1_combout  & (\subKEY|Equal0~2_combout  & (\subKEY|Equal0~3_combout  & \subKEY|Equal0~4_combout )))

	.clk(gnd),
	.dataa(\subKEY|Equal0~1_combout ),
	.datab(\subKEY|Equal0~2_combout ),
	.datac(\subKEY|Equal0~3_combout ),
	.datad(\subKEY|Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\subKEY|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|Equal0~5 .lut_mask = "8000";
defparam \subKEY|Equal0~5 .operation_mode = "normal";
defparam \subKEY|Equal0~5 .output_mode = "comb_only";
defparam \subKEY|Equal0~5 .register_cascade_mode = "off";
defparam \subKEY|Equal0~5 .sum_lutc_input = "datac";
defparam \subKEY|Equal0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y6_N3
maxii_lcell \subKEY|key_2nd_now (
// Equation(s):
// \subKEY|key_2nd_now~regout  = DFFEAS((\subKEY|Equal0~0_combout  & ((\subKEY|Equal0~5_combout  & ((!\subtotal~combout ))) # (!\subKEY|Equal0~5_combout  & (\subKEY|key_2nd_now~regout )))) # (!\subKEY|Equal0~0_combout  & (\subKEY|key_2nd_now~regout )), 
// GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\subKEY|key_2nd_now~regout ),
	.datab(\subtotal~combout ),
	.datac(\subKEY|Equal0~0_combout ),
	.datad(\subKEY|Equal0~5_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\subKEY|key_2nd_now~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|key_2nd_now .lut_mask = "3aaa";
defparam \subKEY|key_2nd_now .operation_mode = "normal";
defparam \subKEY|key_2nd_now .output_mode = "reg_only";
defparam \subKEY|key_2nd_now .register_cascade_mode = "off";
defparam \subKEY|key_2nd_now .sum_lutc_input = "datac";
defparam \subKEY|key_2nd_now .synch_mode = "off";
// synopsys translate_on

// Location: PIN_127,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \double~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\double~combout ),
	.padio(double));
// synopsys translate_off
defparam \double~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X12_Y6_N6
maxii_lcell \sub_cnt[1] (
// Equation(s):
// sub_cnt[1] = DFFEAS((\onride~combout  & ((sub_cnt[1]) # ((sub_cnt[0] & !\sub_cnt[0]~0 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(sub_cnt[1]),
	.datab(sub_cnt[0]),
	.datac(\onride~combout ),
	.datad(\sub_cnt[0]~0 ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sub_cnt[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sub_cnt[1] .lut_mask = "a0e0";
defparam \sub_cnt[1] .operation_mode = "normal";
defparam \sub_cnt[1] .output_mode = "reg_only";
defparam \sub_cnt[1] .register_cascade_mode = "off";
defparam \sub_cnt[1] .sum_lutc_input = "datac";
defparam \sub_cnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y6_N7
maxii_lcell \subKEY|key_2nd_pre (
// Equation(s):
// \sub_cnt[0]~0  = (((H3_key_2nd_pre) # (sub_cnt[1])) # (!\double~combout )) # (!\subKEY|key_2nd_now~regout )

	.clk(\clk~combout ),
	.dataa(\subKEY|key_2nd_now~regout ),
	.datab(\double~combout ),
	.datac(\subKEY|key_2nd_now~regout ),
	.datad(sub_cnt[1]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\sub_cnt[0]~0 ),
	.regout(\subKEY|key_2nd_pre~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \subKEY|key_2nd_pre .lut_mask = "fff7";
defparam \subKEY|key_2nd_pre .operation_mode = "normal";
defparam \subKEY|key_2nd_pre .output_mode = "comb_only";
defparam \subKEY|key_2nd_pre .register_cascade_mode = "off";
defparam \subKEY|key_2nd_pre .sum_lutc_input = "qfbk";
defparam \subKEY|key_2nd_pre .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y6_N8
maxii_lcell \sub_cnt[0] (
// Equation(s):
// sub_cnt[0] = DFFEAS(((\onride~combout  & (sub_cnt[0] $ (!\sub_cnt[0]~0 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(sub_cnt[0]),
	.datab(vcc),
	.datac(\onride~combout ),
	.datad(\sub_cnt[0]~0 ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sub_cnt[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sub_cnt[0] .lut_mask = "a050";
defparam \sub_cnt[0] .operation_mode = "normal";
defparam \sub_cnt[0] .output_mode = "reg_only";
defparam \sub_cnt[0] .register_cascade_mode = "off";
defparam \sub_cnt[0] .sum_lutc_input = "datac";
defparam \sub_cnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y9_N0
maxii_lcell \always1~0 (
// Equation(s):
// \always1~0_combout  = (\onride~combout  & (!\stop_cnt~regout  & ((sub_cnt[1]) # (!sub_cnt[0]))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\stop_cnt~regout ),
	.datac(sub_cnt[0]),
	.datad(sub_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~0 .lut_mask = "2202";
defparam \always1~0 .operation_mode = "normal";
defparam \always1~0 .output_mode = "comb_only";
defparam \always1~0 .register_cascade_mode = "off";
defparam \always1~0 .sum_lutc_input = "datac";
defparam \always1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N1
maxii_lcell \Equal13~0 (
// Equation(s):
// \Equal13~0_combout  = (((!\seg_data[3][1]~regout  & !\seg_data[3][2]~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[3][1]~regout ),
	.datad(\seg_data[3][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal13~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal13~0 .lut_mask = "000f";
defparam \Equal13~0 .operation_mode = "normal";
defparam \Equal13~0 .output_mode = "comb_only";
defparam \Equal13~0 .register_cascade_mode = "off";
defparam \Equal13~0 .sum_lutc_input = "datac";
defparam \Equal13~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_91,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \waiting~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\waiting~combout ),
	.padio(waiting));
// synopsys translate_off
defparam \waiting~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X10_Y10_N8
maxii_lcell \waitingKEY|key_1st_now (
// Equation(s):
// \waitingKEY|key_1st_now~regout  = DFFEAS((((!\waiting~combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\waiting~combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|key_1st_now~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|key_1st_now .lut_mask = "00ff";
defparam \waitingKEY|key_1st_now .operation_mode = "normal";
defparam \waitingKEY|key_1st_now .output_mode = "reg_only";
defparam \waitingKEY|key_1st_now .register_cascade_mode = "off";
defparam \waitingKEY|key_1st_now .sum_lutc_input = "datac";
defparam \waitingKEY|key_1st_now .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y10_N4
maxii_lcell \waitingKEY|key_1st_pre (
// Equation(s):
// \waitingKEY|key_edge  = (((!H1_key_1st_pre & \waitingKEY|key_1st_now~regout )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\waitingKEY|key_1st_now~regout ),
	.datad(\waitingKEY|key_1st_now~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\waitingKEY|key_edge ),
	.regout(\waitingKEY|key_1st_pre~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|key_1st_pre .lut_mask = "0f00";
defparam \waitingKEY|key_1st_pre .operation_mode = "normal";
defparam \waitingKEY|key_1st_pre .output_mode = "comb_only";
defparam \waitingKEY|key_1st_pre .register_cascade_mode = "off";
defparam \waitingKEY|key_1st_pre .sum_lutc_input = "qfbk";
defparam \waitingKEY|key_1st_pre .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y10_N1
maxii_lcell \waitingKEY|cnt[0] (
// Equation(s):
// \waitingKEY|cnt [0] = DFFEAS(((!\waitingKEY|cnt [0])), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[0]~5  = CARRY(((\waitingKEY|cnt [0])))
// \waitingKEY|cnt[0]~5COUT1_37  = CARRY(((\waitingKEY|cnt [0])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\waitingKEY|cnt [0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [0]),
	.cout(),
	.cout0(\waitingKEY|cnt[0]~5 ),
	.cout1(\waitingKEY|cnt[0]~5COUT1_37 ));
// synopsys translate_off
defparam \waitingKEY|cnt[0] .lut_mask = "33cc";
defparam \waitingKEY|cnt[0] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[0] .output_mode = "reg_only";
defparam \waitingKEY|cnt[0] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[0] .sum_lutc_input = "datac";
defparam \waitingKEY|cnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y10_N2
maxii_lcell \waitingKEY|cnt[1] (
// Equation(s):
// \waitingKEY|cnt [1] = DFFEAS((\waitingKEY|cnt [1] $ ((\waitingKEY|cnt[0]~5 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[1]~7  = CARRY(((!\waitingKEY|cnt[0]~5 ) # (!\waitingKEY|cnt [1])))
// \waitingKEY|cnt[1]~7COUT1_38  = CARRY(((!\waitingKEY|cnt[0]~5COUT1_37 ) # (!\waitingKEY|cnt [1])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\waitingKEY|cnt [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\waitingKEY|cnt[0]~5 ),
	.cin1(\waitingKEY|cnt[0]~5COUT1_37 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [1]),
	.cout(),
	.cout0(\waitingKEY|cnt[1]~7 ),
	.cout1(\waitingKEY|cnt[1]~7COUT1_38 ));
// synopsys translate_off
defparam \waitingKEY|cnt[1] .cin0_used = "true";
defparam \waitingKEY|cnt[1] .cin1_used = "true";
defparam \waitingKEY|cnt[1] .lut_mask = "3c3f";
defparam \waitingKEY|cnt[1] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[1] .output_mode = "reg_only";
defparam \waitingKEY|cnt[1] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[1] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y10_N3
maxii_lcell \waitingKEY|cnt[2] (
// Equation(s):
// \waitingKEY|cnt [2] = DFFEAS(\waitingKEY|cnt [2] $ ((((!\waitingKEY|cnt[1]~7 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[2]~9  = CARRY((\waitingKEY|cnt [2] & ((!\waitingKEY|cnt[1]~7 ))))
// \waitingKEY|cnt[2]~9COUT1_39  = CARRY((\waitingKEY|cnt [2] & ((!\waitingKEY|cnt[1]~7COUT1_38 ))))

	.clk(\clk~combout ),
	.dataa(\waitingKEY|cnt [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\waitingKEY|cnt[1]~7 ),
	.cin1(\waitingKEY|cnt[1]~7COUT1_38 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [2]),
	.cout(),
	.cout0(\waitingKEY|cnt[2]~9 ),
	.cout1(\waitingKEY|cnt[2]~9COUT1_39 ));
// synopsys translate_off
defparam \waitingKEY|cnt[2] .cin0_used = "true";
defparam \waitingKEY|cnt[2] .cin1_used = "true";
defparam \waitingKEY|cnt[2] .lut_mask = "a50a";
defparam \waitingKEY|cnt[2] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[2] .output_mode = "reg_only";
defparam \waitingKEY|cnt[2] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[2] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y10_N4
maxii_lcell \waitingKEY|cnt[3] (
// Equation(s):
// \waitingKEY|cnt [3] = DFFEAS(\waitingKEY|cnt [3] $ ((((\waitingKEY|cnt[2]~9 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[3]~11  = CARRY(((!\waitingKEY|cnt[2]~9COUT1_39 )) # (!\waitingKEY|cnt [3]))

	.clk(\clk~combout ),
	.dataa(\waitingKEY|cnt [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\waitingKEY|cnt[2]~9 ),
	.cin1(\waitingKEY|cnt[2]~9COUT1_39 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [3]),
	.cout(\waitingKEY|cnt[3]~11 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|cnt[3] .cin0_used = "true";
defparam \waitingKEY|cnt[3] .cin1_used = "true";
defparam \waitingKEY|cnt[3] .lut_mask = "5a5f";
defparam \waitingKEY|cnt[3] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[3] .output_mode = "reg_only";
defparam \waitingKEY|cnt[3] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[3] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y10_N5
maxii_lcell \waitingKEY|cnt[4] (
// Equation(s):
// \waitingKEY|cnt [4] = DFFEAS(\waitingKEY|cnt [4] $ ((((!\waitingKEY|cnt[3]~11 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[4]~13  = CARRY((\waitingKEY|cnt [4] & ((!\waitingKEY|cnt[3]~11 ))))
// \waitingKEY|cnt[4]~13COUT1_40  = CARRY((\waitingKEY|cnt [4] & ((!\waitingKEY|cnt[3]~11 ))))

	.clk(\clk~combout ),
	.dataa(\waitingKEY|cnt [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[3]~11 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [4]),
	.cout(),
	.cout0(\waitingKEY|cnt[4]~13 ),
	.cout1(\waitingKEY|cnt[4]~13COUT1_40 ));
// synopsys translate_off
defparam \waitingKEY|cnt[4] .cin_used = "true";
defparam \waitingKEY|cnt[4] .lut_mask = "a50a";
defparam \waitingKEY|cnt[4] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[4] .output_mode = "reg_only";
defparam \waitingKEY|cnt[4] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[4] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y10_N6
maxii_lcell \waitingKEY|cnt[5] (
// Equation(s):
// \waitingKEY|cnt [5] = DFFEAS(\waitingKEY|cnt [5] $ (((((!\waitingKEY|cnt[3]~11  & \waitingKEY|cnt[4]~13 ) # (\waitingKEY|cnt[3]~11  & \waitingKEY|cnt[4]~13COUT1_40 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[5]~15  = CARRY(((!\waitingKEY|cnt[4]~13 )) # (!\waitingKEY|cnt [5]))
// \waitingKEY|cnt[5]~15COUT1_41  = CARRY(((!\waitingKEY|cnt[4]~13COUT1_40 )) # (!\waitingKEY|cnt [5]))

	.clk(\clk~combout ),
	.dataa(\waitingKEY|cnt [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[3]~11 ),
	.cin0(\waitingKEY|cnt[4]~13 ),
	.cin1(\waitingKEY|cnt[4]~13COUT1_40 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [5]),
	.cout(),
	.cout0(\waitingKEY|cnt[5]~15 ),
	.cout1(\waitingKEY|cnt[5]~15COUT1_41 ));
// synopsys translate_off
defparam \waitingKEY|cnt[5] .cin0_used = "true";
defparam \waitingKEY|cnt[5] .cin1_used = "true";
defparam \waitingKEY|cnt[5] .cin_used = "true";
defparam \waitingKEY|cnt[5] .lut_mask = "5a5f";
defparam \waitingKEY|cnt[5] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[5] .output_mode = "reg_only";
defparam \waitingKEY|cnt[5] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[5] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y10_N7
maxii_lcell \waitingKEY|cnt[6] (
// Equation(s):
// \waitingKEY|cnt [6] = DFFEAS((\waitingKEY|cnt [6] $ ((!(!\waitingKEY|cnt[3]~11  & \waitingKEY|cnt[5]~15 ) # (\waitingKEY|cnt[3]~11  & \waitingKEY|cnt[5]~15COUT1_41 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[6]~17  = CARRY(((\waitingKEY|cnt [6] & !\waitingKEY|cnt[5]~15 )))
// \waitingKEY|cnt[6]~17COUT1_42  = CARRY(((\waitingKEY|cnt [6] & !\waitingKEY|cnt[5]~15COUT1_41 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\waitingKEY|cnt [6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[3]~11 ),
	.cin0(\waitingKEY|cnt[5]~15 ),
	.cin1(\waitingKEY|cnt[5]~15COUT1_41 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [6]),
	.cout(),
	.cout0(\waitingKEY|cnt[6]~17 ),
	.cout1(\waitingKEY|cnt[6]~17COUT1_42 ));
// synopsys translate_off
defparam \waitingKEY|cnt[6] .cin0_used = "true";
defparam \waitingKEY|cnt[6] .cin1_used = "true";
defparam \waitingKEY|cnt[6] .cin_used = "true";
defparam \waitingKEY|cnt[6] .lut_mask = "c30c";
defparam \waitingKEY|cnt[6] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[6] .output_mode = "reg_only";
defparam \waitingKEY|cnt[6] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[6] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y10_N8
maxii_lcell \waitingKEY|cnt[7] (
// Equation(s):
// \waitingKEY|cnt [7] = DFFEAS(\waitingKEY|cnt [7] $ (((((!\waitingKEY|cnt[3]~11  & \waitingKEY|cnt[6]~17 ) # (\waitingKEY|cnt[3]~11  & \waitingKEY|cnt[6]~17COUT1_42 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[7]~19  = CARRY(((!\waitingKEY|cnt[6]~17 )) # (!\waitingKEY|cnt [7]))
// \waitingKEY|cnt[7]~19COUT1_43  = CARRY(((!\waitingKEY|cnt[6]~17COUT1_42 )) # (!\waitingKEY|cnt [7]))

	.clk(\clk~combout ),
	.dataa(\waitingKEY|cnt [7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[3]~11 ),
	.cin0(\waitingKEY|cnt[6]~17 ),
	.cin1(\waitingKEY|cnt[6]~17COUT1_42 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [7]),
	.cout(),
	.cout0(\waitingKEY|cnt[7]~19 ),
	.cout1(\waitingKEY|cnt[7]~19COUT1_43 ));
// synopsys translate_off
defparam \waitingKEY|cnt[7] .cin0_used = "true";
defparam \waitingKEY|cnt[7] .cin1_used = "true";
defparam \waitingKEY|cnt[7] .cin_used = "true";
defparam \waitingKEY|cnt[7] .lut_mask = "5a5f";
defparam \waitingKEY|cnt[7] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[7] .output_mode = "reg_only";
defparam \waitingKEY|cnt[7] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[7] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y10_N9
maxii_lcell \waitingKEY|cnt[8] (
// Equation(s):
// \waitingKEY|cnt [8] = DFFEAS((\waitingKEY|cnt [8] $ ((!(!\waitingKEY|cnt[3]~11  & \waitingKEY|cnt[7]~19 ) # (\waitingKEY|cnt[3]~11  & \waitingKEY|cnt[7]~19COUT1_43 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[8]~21  = CARRY(((\waitingKEY|cnt [8] & !\waitingKEY|cnt[7]~19COUT1_43 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\waitingKEY|cnt [8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[3]~11 ),
	.cin0(\waitingKEY|cnt[7]~19 ),
	.cin1(\waitingKEY|cnt[7]~19COUT1_43 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [8]),
	.cout(\waitingKEY|cnt[8]~21 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|cnt[8] .cin0_used = "true";
defparam \waitingKEY|cnt[8] .cin1_used = "true";
defparam \waitingKEY|cnt[8] .cin_used = "true";
defparam \waitingKEY|cnt[8] .lut_mask = "c30c";
defparam \waitingKEY|cnt[8] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[8] .output_mode = "reg_only";
defparam \waitingKEY|cnt[8] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[8] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y10_N0
maxii_lcell \waitingKEY|cnt[9] (
// Equation(s):
// \waitingKEY|cnt [9] = DFFEAS((\waitingKEY|cnt [9] $ ((\waitingKEY|cnt[8]~21 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[9]~23  = CARRY(((!\waitingKEY|cnt[8]~21 ) # (!\waitingKEY|cnt [9])))
// \waitingKEY|cnt[9]~23COUT1_44  = CARRY(((!\waitingKEY|cnt[8]~21 ) # (!\waitingKEY|cnt [9])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\waitingKEY|cnt [9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[8]~21 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [9]),
	.cout(),
	.cout0(\waitingKEY|cnt[9]~23 ),
	.cout1(\waitingKEY|cnt[9]~23COUT1_44 ));
// synopsys translate_off
defparam \waitingKEY|cnt[9] .cin_used = "true";
defparam \waitingKEY|cnt[9] .lut_mask = "3c3f";
defparam \waitingKEY|cnt[9] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[9] .output_mode = "reg_only";
defparam \waitingKEY|cnt[9] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[9] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y10_N1
maxii_lcell \waitingKEY|cnt[10] (
// Equation(s):
// \waitingKEY|cnt [10] = DFFEAS((\waitingKEY|cnt [10] $ ((!(!\waitingKEY|cnt[8]~21  & \waitingKEY|cnt[9]~23 ) # (\waitingKEY|cnt[8]~21  & \waitingKEY|cnt[9]~23COUT1_44 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[10]~25  = CARRY(((\waitingKEY|cnt [10] & !\waitingKEY|cnt[9]~23 )))
// \waitingKEY|cnt[10]~25COUT1_45  = CARRY(((\waitingKEY|cnt [10] & !\waitingKEY|cnt[9]~23COUT1_44 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\waitingKEY|cnt [10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[8]~21 ),
	.cin0(\waitingKEY|cnt[9]~23 ),
	.cin1(\waitingKEY|cnt[9]~23COUT1_44 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [10]),
	.cout(),
	.cout0(\waitingKEY|cnt[10]~25 ),
	.cout1(\waitingKEY|cnt[10]~25COUT1_45 ));
// synopsys translate_off
defparam \waitingKEY|cnt[10] .cin0_used = "true";
defparam \waitingKEY|cnt[10] .cin1_used = "true";
defparam \waitingKEY|cnt[10] .cin_used = "true";
defparam \waitingKEY|cnt[10] .lut_mask = "c30c";
defparam \waitingKEY|cnt[10] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[10] .output_mode = "reg_only";
defparam \waitingKEY|cnt[10] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[10] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y10_N2
maxii_lcell \waitingKEY|cnt[11] (
// Equation(s):
// \waitingKEY|cnt [11] = DFFEAS((\waitingKEY|cnt [11] $ (((!\waitingKEY|cnt[8]~21  & \waitingKEY|cnt[10]~25 ) # (\waitingKEY|cnt[8]~21  & \waitingKEY|cnt[10]~25COUT1_45 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[11]~27  = CARRY(((!\waitingKEY|cnt[10]~25 ) # (!\waitingKEY|cnt [11])))
// \waitingKEY|cnt[11]~27COUT1_46  = CARRY(((!\waitingKEY|cnt[10]~25COUT1_45 ) # (!\waitingKEY|cnt [11])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\waitingKEY|cnt [11]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[8]~21 ),
	.cin0(\waitingKEY|cnt[10]~25 ),
	.cin1(\waitingKEY|cnt[10]~25COUT1_45 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [11]),
	.cout(),
	.cout0(\waitingKEY|cnt[11]~27 ),
	.cout1(\waitingKEY|cnt[11]~27COUT1_46 ));
// synopsys translate_off
defparam \waitingKEY|cnt[11] .cin0_used = "true";
defparam \waitingKEY|cnt[11] .cin1_used = "true";
defparam \waitingKEY|cnt[11] .cin_used = "true";
defparam \waitingKEY|cnt[11] .lut_mask = "3c3f";
defparam \waitingKEY|cnt[11] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[11] .output_mode = "reg_only";
defparam \waitingKEY|cnt[11] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[11] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y10_N3
maxii_lcell \waitingKEY|cnt[12] (
// Equation(s):
// \waitingKEY|cnt [12] = DFFEAS(\waitingKEY|cnt [12] $ ((((!(!\waitingKEY|cnt[8]~21  & \waitingKEY|cnt[11]~27 ) # (\waitingKEY|cnt[8]~21  & \waitingKEY|cnt[11]~27COUT1_46 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[12]~29  = CARRY((\waitingKEY|cnt [12] & ((!\waitingKEY|cnt[11]~27 ))))
// \waitingKEY|cnt[12]~29COUT1_47  = CARRY((\waitingKEY|cnt [12] & ((!\waitingKEY|cnt[11]~27COUT1_46 ))))

	.clk(\clk~combout ),
	.dataa(\waitingKEY|cnt [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[8]~21 ),
	.cin0(\waitingKEY|cnt[11]~27 ),
	.cin1(\waitingKEY|cnt[11]~27COUT1_46 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [12]),
	.cout(),
	.cout0(\waitingKEY|cnt[12]~29 ),
	.cout1(\waitingKEY|cnt[12]~29COUT1_47 ));
// synopsys translate_off
defparam \waitingKEY|cnt[12] .cin0_used = "true";
defparam \waitingKEY|cnt[12] .cin1_used = "true";
defparam \waitingKEY|cnt[12] .cin_used = "true";
defparam \waitingKEY|cnt[12] .lut_mask = "a50a";
defparam \waitingKEY|cnt[12] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[12] .output_mode = "reg_only";
defparam \waitingKEY|cnt[12] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[12] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y10_N4
maxii_lcell \waitingKEY|cnt[13] (
// Equation(s):
// \waitingKEY|cnt [13] = DFFEAS(\waitingKEY|cnt [13] $ (((((!\waitingKEY|cnt[8]~21  & \waitingKEY|cnt[12]~29 ) # (\waitingKEY|cnt[8]~21  & \waitingKEY|cnt[12]~29COUT1_47 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[13]~31  = CARRY(((!\waitingKEY|cnt[12]~29COUT1_47 )) # (!\waitingKEY|cnt [13]))

	.clk(\clk~combout ),
	.dataa(\waitingKEY|cnt [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[8]~21 ),
	.cin0(\waitingKEY|cnt[12]~29 ),
	.cin1(\waitingKEY|cnt[12]~29COUT1_47 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [13]),
	.cout(\waitingKEY|cnt[13]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|cnt[13] .cin0_used = "true";
defparam \waitingKEY|cnt[13] .cin1_used = "true";
defparam \waitingKEY|cnt[13] .cin_used = "true";
defparam \waitingKEY|cnt[13] .lut_mask = "5a5f";
defparam \waitingKEY|cnt[13] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[13] .output_mode = "reg_only";
defparam \waitingKEY|cnt[13] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[13] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y10_N5
maxii_lcell \waitingKEY|cnt[14] (
// Equation(s):
// \waitingKEY|cnt [14] = DFFEAS(\waitingKEY|cnt [14] $ ((((!\waitingKEY|cnt[13]~31 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[14]~33  = CARRY((\waitingKEY|cnt [14] & ((!\waitingKEY|cnt[13]~31 ))))
// \waitingKEY|cnt[14]~33COUT1_48  = CARRY((\waitingKEY|cnt [14] & ((!\waitingKEY|cnt[13]~31 ))))

	.clk(\clk~combout ),
	.dataa(\waitingKEY|cnt [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[13]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [14]),
	.cout(),
	.cout0(\waitingKEY|cnt[14]~33 ),
	.cout1(\waitingKEY|cnt[14]~33COUT1_48 ));
// synopsys translate_off
defparam \waitingKEY|cnt[14] .cin_used = "true";
defparam \waitingKEY|cnt[14] .lut_mask = "a50a";
defparam \waitingKEY|cnt[14] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[14] .output_mode = "reg_only";
defparam \waitingKEY|cnt[14] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[14] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y10_N6
maxii_lcell \waitingKEY|cnt[15] (
// Equation(s):
// \waitingKEY|cnt [15] = DFFEAS(\waitingKEY|cnt [15] $ (((((!\waitingKEY|cnt[13]~31  & \waitingKEY|cnt[14]~33 ) # (\waitingKEY|cnt[13]~31  & \waitingKEY|cnt[14]~33COUT1_48 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , 
// )
// \waitingKEY|cnt[15]~35  = CARRY(((!\waitingKEY|cnt[14]~33 )) # (!\waitingKEY|cnt [15]))
// \waitingKEY|cnt[15]~35COUT1_49  = CARRY(((!\waitingKEY|cnt[14]~33COUT1_48 )) # (!\waitingKEY|cnt [15]))

	.clk(\clk~combout ),
	.dataa(\waitingKEY|cnt [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[13]~31 ),
	.cin0(\waitingKEY|cnt[14]~33 ),
	.cin1(\waitingKEY|cnt[14]~33COUT1_48 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [15]),
	.cout(),
	.cout0(\waitingKEY|cnt[15]~35 ),
	.cout1(\waitingKEY|cnt[15]~35COUT1_49 ));
// synopsys translate_off
defparam \waitingKEY|cnt[15] .cin0_used = "true";
defparam \waitingKEY|cnt[15] .cin1_used = "true";
defparam \waitingKEY|cnt[15] .cin_used = "true";
defparam \waitingKEY|cnt[15] .lut_mask = "5a5f";
defparam \waitingKEY|cnt[15] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[15] .output_mode = "reg_only";
defparam \waitingKEY|cnt[15] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[15] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y10_N7
maxii_lcell \waitingKEY|cnt[16] (
// Equation(s):
// \waitingKEY|cnt [16] = DFFEAS((\waitingKEY|cnt [16] $ ((!(!\waitingKEY|cnt[13]~31  & \waitingKEY|cnt[15]~35 ) # (\waitingKEY|cnt[13]~31  & \waitingKEY|cnt[15]~35COUT1_49 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )
// \waitingKEY|cnt[16]~1  = CARRY(((\waitingKEY|cnt [16] & !\waitingKEY|cnt[15]~35 )))
// \waitingKEY|cnt[16]~1COUT1_50  = CARRY(((\waitingKEY|cnt [16] & !\waitingKEY|cnt[15]~35COUT1_49 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\waitingKEY|cnt [16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[13]~31 ),
	.cin0(\waitingKEY|cnt[15]~35 ),
	.cin1(\waitingKEY|cnt[15]~35COUT1_49 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [16]),
	.cout(),
	.cout0(\waitingKEY|cnt[16]~1 ),
	.cout1(\waitingKEY|cnt[16]~1COUT1_50 ));
// synopsys translate_off
defparam \waitingKEY|cnt[16] .cin0_used = "true";
defparam \waitingKEY|cnt[16] .cin1_used = "true";
defparam \waitingKEY|cnt[16] .cin_used = "true";
defparam \waitingKEY|cnt[16] .lut_mask = "c30c";
defparam \waitingKEY|cnt[16] .operation_mode = "arithmetic";
defparam \waitingKEY|cnt[16] .output_mode = "reg_only";
defparam \waitingKEY|cnt[16] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[16] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y10_N8
maxii_lcell \waitingKEY|cnt[17] (
// Equation(s):
// \waitingKEY|cnt [17] = DFFEAS((((!\waitingKEY|cnt[13]~31  & \waitingKEY|cnt[16]~1 ) # (\waitingKEY|cnt[13]~31  & \waitingKEY|cnt[16]~1COUT1_50 ) $ (\waitingKEY|cnt [17]))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \waitingKEY|key_edge , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\waitingKEY|cnt [17]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\waitingKEY|key_edge ),
	.sload(gnd),
	.ena(vcc),
	.cin(\waitingKEY|cnt[13]~31 ),
	.cin0(\waitingKEY|cnt[16]~1 ),
	.cin1(\waitingKEY|cnt[16]~1COUT1_50 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|cnt [17]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|cnt[17] .cin0_used = "true";
defparam \waitingKEY|cnt[17] .cin1_used = "true";
defparam \waitingKEY|cnt[17] .cin_used = "true";
defparam \waitingKEY|cnt[17] .lut_mask = "0ff0";
defparam \waitingKEY|cnt[17] .operation_mode = "normal";
defparam \waitingKEY|cnt[17] .output_mode = "reg_only";
defparam \waitingKEY|cnt[17] .register_cascade_mode = "off";
defparam \waitingKEY|cnt[17] .sum_lutc_input = "cin";
defparam \waitingKEY|cnt[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y10_N5
maxii_lcell \waitingKEY|Equal0~0 (
// Equation(s):
// \waitingKEY|Equal0~0_combout  = (((\waitingKEY|cnt [17] & \waitingKEY|cnt [16])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\waitingKEY|cnt [17]),
	.datad(\waitingKEY|cnt [16]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\waitingKEY|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|Equal0~0 .lut_mask = "f000";
defparam \waitingKEY|Equal0~0 .operation_mode = "normal";
defparam \waitingKEY|Equal0~0 .output_mode = "comb_only";
defparam \waitingKEY|Equal0~0 .register_cascade_mode = "off";
defparam \waitingKEY|Equal0~0 .sum_lutc_input = "datac";
defparam \waitingKEY|Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y10_N0
maxii_lcell \waitingKEY|Equal0~3 (
// Equation(s):
// \waitingKEY|Equal0~3_combout  = (\waitingKEY|cnt [10] & (\waitingKEY|cnt [11] & (\waitingKEY|cnt [9] & \waitingKEY|cnt [8])))

	.clk(gnd),
	.dataa(\waitingKEY|cnt [10]),
	.datab(\waitingKEY|cnt [11]),
	.datac(\waitingKEY|cnt [9]),
	.datad(\waitingKEY|cnt [8]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\waitingKEY|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|Equal0~3 .lut_mask = "8000";
defparam \waitingKEY|Equal0~3 .operation_mode = "normal";
defparam \waitingKEY|Equal0~3 .output_mode = "comb_only";
defparam \waitingKEY|Equal0~3 .register_cascade_mode = "off";
defparam \waitingKEY|Equal0~3 .sum_lutc_input = "datac";
defparam \waitingKEY|Equal0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y10_N9
maxii_lcell \waitingKEY|Equal0~1 (
// Equation(s):
// \waitingKEY|Equal0~1_combout  = (\waitingKEY|cnt [2] & (\waitingKEY|cnt [3] & (\waitingKEY|cnt [1] & \waitingKEY|cnt [0])))

	.clk(gnd),
	.dataa(\waitingKEY|cnt [2]),
	.datab(\waitingKEY|cnt [3]),
	.datac(\waitingKEY|cnt [1]),
	.datad(\waitingKEY|cnt [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\waitingKEY|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|Equal0~1 .lut_mask = "8000";
defparam \waitingKEY|Equal0~1 .operation_mode = "normal";
defparam \waitingKEY|Equal0~1 .output_mode = "comb_only";
defparam \waitingKEY|Equal0~1 .register_cascade_mode = "off";
defparam \waitingKEY|Equal0~1 .sum_lutc_input = "datac";
defparam \waitingKEY|Equal0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y10_N0
maxii_lcell \waitingKEY|Equal0~2 (
// Equation(s):
// \waitingKEY|Equal0~2_combout  = (\waitingKEY|cnt [6] & (\waitingKEY|cnt [7] & (\waitingKEY|cnt [5] & \waitingKEY|cnt [4])))

	.clk(gnd),
	.dataa(\waitingKEY|cnt [6]),
	.datab(\waitingKEY|cnt [7]),
	.datac(\waitingKEY|cnt [5]),
	.datad(\waitingKEY|cnt [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\waitingKEY|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|Equal0~2 .lut_mask = "8000";
defparam \waitingKEY|Equal0~2 .operation_mode = "normal";
defparam \waitingKEY|Equal0~2 .output_mode = "comb_only";
defparam \waitingKEY|Equal0~2 .register_cascade_mode = "off";
defparam \waitingKEY|Equal0~2 .sum_lutc_input = "datac";
defparam \waitingKEY|Equal0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y10_N9
maxii_lcell \waitingKEY|Equal0~4 (
// Equation(s):
// \waitingKEY|Equal0~4_combout  = (\waitingKEY|cnt [13] & (\waitingKEY|cnt [15] & (\waitingKEY|cnt [14] & \waitingKEY|cnt [12])))

	.clk(gnd),
	.dataa(\waitingKEY|cnt [13]),
	.datab(\waitingKEY|cnt [15]),
	.datac(\waitingKEY|cnt [14]),
	.datad(\waitingKEY|cnt [12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\waitingKEY|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|Equal0~4 .lut_mask = "8000";
defparam \waitingKEY|Equal0~4 .operation_mode = "normal";
defparam \waitingKEY|Equal0~4 .output_mode = "comb_only";
defparam \waitingKEY|Equal0~4 .register_cascade_mode = "off";
defparam \waitingKEY|Equal0~4 .sum_lutc_input = "datac";
defparam \waitingKEY|Equal0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y10_N1
maxii_lcell \waitingKEY|Equal0~5 (
// Equation(s):
// \waitingKEY|Equal0~5_combout  = (\waitingKEY|Equal0~3_combout  & (\waitingKEY|Equal0~1_combout  & (\waitingKEY|Equal0~2_combout  & \waitingKEY|Equal0~4_combout )))

	.clk(gnd),
	.dataa(\waitingKEY|Equal0~3_combout ),
	.datab(\waitingKEY|Equal0~1_combout ),
	.datac(\waitingKEY|Equal0~2_combout ),
	.datad(\waitingKEY|Equal0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\waitingKEY|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|Equal0~5 .lut_mask = "8000";
defparam \waitingKEY|Equal0~5 .operation_mode = "normal";
defparam \waitingKEY|Equal0~5 .output_mode = "comb_only";
defparam \waitingKEY|Equal0~5 .register_cascade_mode = "off";
defparam \waitingKEY|Equal0~5 .sum_lutc_input = "datac";
defparam \waitingKEY|Equal0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y10_N2
maxii_lcell \waitingKEY|key_2nd_now (
// Equation(s):
// \waitingKEY|key_2nd_now~regout  = DFFEAS((\waitingKEY|Equal0~0_combout  & ((\waitingKEY|Equal0~5_combout  & ((!\waiting~combout ))) # (!\waitingKEY|Equal0~5_combout  & (\waitingKEY|key_2nd_now~regout )))) # (!\waitingKEY|Equal0~0_combout  & 
// (\waitingKEY|key_2nd_now~regout )), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\waitingKEY|key_2nd_now~regout ),
	.datab(\waiting~combout ),
	.datac(\waitingKEY|Equal0~0_combout ),
	.datad(\waitingKEY|Equal0~5_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\waitingKEY|key_2nd_now~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|key_2nd_now .lut_mask = "3aaa";
defparam \waitingKEY|key_2nd_now .operation_mode = "normal";
defparam \waitingKEY|key_2nd_now .output_mode = "reg_only";
defparam \waitingKEY|key_2nd_now .register_cascade_mode = "off";
defparam \waitingKEY|key_2nd_now .sum_lutc_input = "datac";
defparam \waitingKEY|key_2nd_now .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y10_N6
maxii_lcell \waitingKEY|key_2nd_pre (
// Equation(s):
// \waitingKEY|key_pulse  = (((!H1_key_2nd_pre & \waitingKEY|key_2nd_now~regout )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\waitingKEY|key_2nd_now~regout ),
	.datad(\waitingKEY|key_2nd_now~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\waitingKEY|key_pulse ),
	.regout(\waitingKEY|key_2nd_pre~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \waitingKEY|key_2nd_pre .lut_mask = "0f00";
defparam \waitingKEY|key_2nd_pre .operation_mode = "normal";
defparam \waitingKEY|key_2nd_pre .output_mode = "comb_only";
defparam \waitingKEY|key_2nd_pre .register_cascade_mode = "off";
defparam \waitingKEY|key_2nd_pre .sum_lutc_input = "qfbk";
defparam \waitingKEY|key_2nd_pre .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y10_N7
maxii_lcell wait_status(
// Equation(s):
// \wait_status~regout  = DFFEAS((\onride~combout  & (!\stop_cnt~regout  & (\waitingKEY|key_pulse  $ (\wait_status~regout )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\waitingKEY|key_pulse ),
	.datab(\onride~combout ),
	.datac(\wait_status~regout ),
	.datad(\stop_cnt~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\wait_status~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam wait_status.lut_mask = "0048";
defparam wait_status.operation_mode = "normal";
defparam wait_status.output_mode = "reg_only";
defparam wait_status.register_cascade_mode = "off";
defparam wait_status.sum_lutc_input = "datac";
defparam wait_status.synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y5_N8
maxii_lcell \wait_mcnt[7]~20 (
// Equation(s):
// \wait_mcnt[7]~20_combout  = (((!\always1~0_combout ) # (!\Equal9~2_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Equal9~2_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\wait_mcnt[7]~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_mcnt[7]~20 .lut_mask = "0fff";
defparam \wait_mcnt[7]~20 .operation_mode = "normal";
defparam \wait_mcnt[7]~20 .output_mode = "comb_only";
defparam \wait_mcnt[7]~20 .register_cascade_mode = "off";
defparam \wait_mcnt[7]~20 .sum_lutc_input = "datac";
defparam \wait_mcnt[7]~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y5_N1
maxii_lcell \wait_mcnt[9]~21 (
// Equation(s):
// \wait_mcnt[9]~21_combout  = (!\rst~combout  & (((\wait_status~regout  & \always1~0_combout )) # (!\onride~combout )))

	.clk(gnd),
	.dataa(\rst~combout ),
	.datab(\wait_status~regout ),
	.datac(\onride~combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\wait_mcnt[9]~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_mcnt[9]~21 .lut_mask = "4505";
defparam \wait_mcnt[9]~21 .operation_mode = "normal";
defparam \wait_mcnt[9]~21 .output_mode = "comb_only";
defparam \wait_mcnt[9]~21 .register_cascade_mode = "off";
defparam \wait_mcnt[9]~21 .sum_lutc_input = "datac";
defparam \wait_mcnt[9]~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y4_N0
maxii_lcell \wait_mcnt[0] (
// Equation(s):
// wait_mcnt[0] = DFFEAS(((!wait_mcnt[0])), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )
// \wait_mcnt[0]~3  = CARRY(((wait_mcnt[0])))
// \wait_mcnt[0]~3COUT1_23  = CARRY(((wait_mcnt[0])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(wait_mcnt[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[0]),
	.cout(),
	.cout0(\wait_mcnt[0]~3 ),
	.cout1(\wait_mcnt[0]~3COUT1_23 ));
// synopsys translate_off
defparam \wait_mcnt[0] .lut_mask = "33cc";
defparam \wait_mcnt[0] .operation_mode = "arithmetic";
defparam \wait_mcnt[0] .output_mode = "reg_only";
defparam \wait_mcnt[0] .register_cascade_mode = "off";
defparam \wait_mcnt[0] .sum_lutc_input = "datac";
defparam \wait_mcnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N1
maxii_lcell \wait_mcnt[1] (
// Equation(s):
// wait_mcnt[1] = DFFEAS((wait_mcnt[1] $ ((\wait_mcnt[0]~3 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )
// \wait_mcnt[1]~5  = CARRY(((!\wait_mcnt[0]~3 ) # (!wait_mcnt[1])))
// \wait_mcnt[1]~5COUT1_24  = CARRY(((!\wait_mcnt[0]~3COUT1_23 ) # (!wait_mcnt[1])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(wait_mcnt[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(gnd),
	.cin0(\wait_mcnt[0]~3 ),
	.cin1(\wait_mcnt[0]~3COUT1_23 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[1]),
	.cout(),
	.cout0(\wait_mcnt[1]~5 ),
	.cout1(\wait_mcnt[1]~5COUT1_24 ));
// synopsys translate_off
defparam \wait_mcnt[1] .cin0_used = "true";
defparam \wait_mcnt[1] .cin1_used = "true";
defparam \wait_mcnt[1] .lut_mask = "3c3f";
defparam \wait_mcnt[1] .operation_mode = "arithmetic";
defparam \wait_mcnt[1] .output_mode = "reg_only";
defparam \wait_mcnt[1] .register_cascade_mode = "off";
defparam \wait_mcnt[1] .sum_lutc_input = "cin";
defparam \wait_mcnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N2
maxii_lcell \wait_mcnt[2] (
// Equation(s):
// wait_mcnt[2] = DFFEAS((wait_mcnt[2] $ ((!\wait_mcnt[1]~5 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )
// \wait_mcnt[2]~7  = CARRY(((wait_mcnt[2] & !\wait_mcnt[1]~5 )))
// \wait_mcnt[2]~7COUT1_25  = CARRY(((wait_mcnt[2] & !\wait_mcnt[1]~5COUT1_24 )))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(wait_mcnt[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(gnd),
	.cin0(\wait_mcnt[1]~5 ),
	.cin1(\wait_mcnt[1]~5COUT1_24 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[2]),
	.cout(),
	.cout0(\wait_mcnt[2]~7 ),
	.cout1(\wait_mcnt[2]~7COUT1_25 ));
// synopsys translate_off
defparam \wait_mcnt[2] .cin0_used = "true";
defparam \wait_mcnt[2] .cin1_used = "true";
defparam \wait_mcnt[2] .lut_mask = "c30c";
defparam \wait_mcnt[2] .operation_mode = "arithmetic";
defparam \wait_mcnt[2] .output_mode = "reg_only";
defparam \wait_mcnt[2] .register_cascade_mode = "off";
defparam \wait_mcnt[2] .sum_lutc_input = "cin";
defparam \wait_mcnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N3
maxii_lcell \wait_mcnt[3] (
// Equation(s):
// wait_mcnt[3] = DFFEAS(wait_mcnt[3] $ ((((\wait_mcnt[2]~7 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )
// \wait_mcnt[3]~1  = CARRY(((!\wait_mcnt[2]~7 )) # (!wait_mcnt[3]))
// \wait_mcnt[3]~1COUT1_26  = CARRY(((!\wait_mcnt[2]~7COUT1_25 )) # (!wait_mcnt[3]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(wait_mcnt[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(gnd),
	.cin0(\wait_mcnt[2]~7 ),
	.cin1(\wait_mcnt[2]~7COUT1_25 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[3]),
	.cout(),
	.cout0(\wait_mcnt[3]~1 ),
	.cout1(\wait_mcnt[3]~1COUT1_26 ));
// synopsys translate_off
defparam \wait_mcnt[3] .cin0_used = "true";
defparam \wait_mcnt[3] .cin1_used = "true";
defparam \wait_mcnt[3] .lut_mask = "5a5f";
defparam \wait_mcnt[3] .operation_mode = "arithmetic";
defparam \wait_mcnt[3] .output_mode = "reg_only";
defparam \wait_mcnt[3] .register_cascade_mode = "off";
defparam \wait_mcnt[3] .sum_lutc_input = "cin";
defparam \wait_mcnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N4
maxii_lcell \wait_mcnt[4] (
// Equation(s):
// wait_mcnt[4] = DFFEAS(wait_mcnt[4] $ ((((!\wait_mcnt[3]~1 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )
// \wait_mcnt[4]~9  = CARRY((wait_mcnt[4] & ((!\wait_mcnt[3]~1COUT1_26 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(wait_mcnt[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(gnd),
	.cin0(\wait_mcnt[3]~1 ),
	.cin1(\wait_mcnt[3]~1COUT1_26 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[4]),
	.cout(\wait_mcnt[4]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_mcnt[4] .cin0_used = "true";
defparam \wait_mcnt[4] .cin1_used = "true";
defparam \wait_mcnt[4] .lut_mask = "a50a";
defparam \wait_mcnt[4] .operation_mode = "arithmetic";
defparam \wait_mcnt[4] .output_mode = "reg_only";
defparam \wait_mcnt[4] .register_cascade_mode = "off";
defparam \wait_mcnt[4] .sum_lutc_input = "cin";
defparam \wait_mcnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N5
maxii_lcell \wait_mcnt[5] (
// Equation(s):
// wait_mcnt[5] = DFFEAS(wait_mcnt[5] $ ((((\wait_mcnt[4]~9 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )
// \wait_mcnt[5]~11  = CARRY(((!\wait_mcnt[4]~9 )) # (!wait_mcnt[5]))
// \wait_mcnt[5]~11COUT1_27  = CARRY(((!\wait_mcnt[4]~9 )) # (!wait_mcnt[5]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(wait_mcnt[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(\wait_mcnt[4]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[5]),
	.cout(),
	.cout0(\wait_mcnt[5]~11 ),
	.cout1(\wait_mcnt[5]~11COUT1_27 ));
// synopsys translate_off
defparam \wait_mcnt[5] .cin_used = "true";
defparam \wait_mcnt[5] .lut_mask = "5a5f";
defparam \wait_mcnt[5] .operation_mode = "arithmetic";
defparam \wait_mcnt[5] .output_mode = "reg_only";
defparam \wait_mcnt[5] .register_cascade_mode = "off";
defparam \wait_mcnt[5] .sum_lutc_input = "cin";
defparam \wait_mcnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N6
maxii_lcell \wait_mcnt[6] (
// Equation(s):
// wait_mcnt[6] = DFFEAS(wait_mcnt[6] $ ((((!(!\wait_mcnt[4]~9  & \wait_mcnt[5]~11 ) # (\wait_mcnt[4]~9  & \wait_mcnt[5]~11COUT1_27 ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )
// \wait_mcnt[6]~13  = CARRY((wait_mcnt[6] & ((!\wait_mcnt[5]~11 ))))
// \wait_mcnt[6]~13COUT1_28  = CARRY((wait_mcnt[6] & ((!\wait_mcnt[5]~11COUT1_27 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(wait_mcnt[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(\wait_mcnt[4]~9 ),
	.cin0(\wait_mcnt[5]~11 ),
	.cin1(\wait_mcnt[5]~11COUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[6]),
	.cout(),
	.cout0(\wait_mcnt[6]~13 ),
	.cout1(\wait_mcnt[6]~13COUT1_28 ));
// synopsys translate_off
defparam \wait_mcnt[6] .cin0_used = "true";
defparam \wait_mcnt[6] .cin1_used = "true";
defparam \wait_mcnt[6] .cin_used = "true";
defparam \wait_mcnt[6] .lut_mask = "a50a";
defparam \wait_mcnt[6] .operation_mode = "arithmetic";
defparam \wait_mcnt[6] .output_mode = "reg_only";
defparam \wait_mcnt[6] .register_cascade_mode = "off";
defparam \wait_mcnt[6] .sum_lutc_input = "cin";
defparam \wait_mcnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N7
maxii_lcell \wait_mcnt[7] (
// Equation(s):
// wait_mcnt[7] = DFFEAS((wait_mcnt[7] $ (((!\wait_mcnt[4]~9  & \wait_mcnt[6]~13 ) # (\wait_mcnt[4]~9  & \wait_mcnt[6]~13COUT1_28 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )
// \wait_mcnt[7]~15  = CARRY(((!\wait_mcnt[6]~13 ) # (!wait_mcnt[7])))
// \wait_mcnt[7]~15COUT1_29  = CARRY(((!\wait_mcnt[6]~13COUT1_28 ) # (!wait_mcnt[7])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(wait_mcnt[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(\wait_mcnt[4]~9 ),
	.cin0(\wait_mcnt[6]~13 ),
	.cin1(\wait_mcnt[6]~13COUT1_28 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[7]),
	.cout(),
	.cout0(\wait_mcnt[7]~15 ),
	.cout1(\wait_mcnt[7]~15COUT1_29 ));
// synopsys translate_off
defparam \wait_mcnt[7] .cin0_used = "true";
defparam \wait_mcnt[7] .cin1_used = "true";
defparam \wait_mcnt[7] .cin_used = "true";
defparam \wait_mcnt[7] .lut_mask = "3c3f";
defparam \wait_mcnt[7] .operation_mode = "arithmetic";
defparam \wait_mcnt[7] .output_mode = "reg_only";
defparam \wait_mcnt[7] .register_cascade_mode = "off";
defparam \wait_mcnt[7] .sum_lutc_input = "cin";
defparam \wait_mcnt[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N8
maxii_lcell \wait_mcnt[8] (
// Equation(s):
// wait_mcnt[8] = DFFEAS(wait_mcnt[8] $ ((((!(!\wait_mcnt[4]~9  & \wait_mcnt[7]~15 ) # (\wait_mcnt[4]~9  & \wait_mcnt[7]~15COUT1_29 ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )
// \wait_mcnt[8]~17  = CARRY((wait_mcnt[8] & ((!\wait_mcnt[7]~15 ))))
// \wait_mcnt[8]~17COUT1_30  = CARRY((wait_mcnt[8] & ((!\wait_mcnt[7]~15COUT1_29 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(wait_mcnt[8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(\wait_mcnt[4]~9 ),
	.cin0(\wait_mcnt[7]~15 ),
	.cin1(\wait_mcnt[7]~15COUT1_29 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[8]),
	.cout(),
	.cout0(\wait_mcnt[8]~17 ),
	.cout1(\wait_mcnt[8]~17COUT1_30 ));
// synopsys translate_off
defparam \wait_mcnt[8] .cin0_used = "true";
defparam \wait_mcnt[8] .cin1_used = "true";
defparam \wait_mcnt[8] .cin_used = "true";
defparam \wait_mcnt[8] .lut_mask = "a50a";
defparam \wait_mcnt[8] .operation_mode = "arithmetic";
defparam \wait_mcnt[8] .output_mode = "reg_only";
defparam \wait_mcnt[8] .register_cascade_mode = "off";
defparam \wait_mcnt[8] .sum_lutc_input = "cin";
defparam \wait_mcnt[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y4_N9
maxii_lcell \wait_mcnt[9] (
// Equation(s):
// wait_mcnt[9] = DFFEAS((((!\wait_mcnt[4]~9  & \wait_mcnt[8]~17 ) # (\wait_mcnt[4]~9  & \wait_mcnt[8]~17COUT1_30 ) $ (wait_mcnt[9]))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_mcnt[9]~21_combout , , , \wait_mcnt[7]~20_combout , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(wait_mcnt[9]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\wait_mcnt[7]~20_combout ),
	.sload(gnd),
	.ena(\wait_mcnt[9]~21_combout ),
	.cin(\wait_mcnt[4]~9 ),
	.cin0(\wait_mcnt[8]~17 ),
	.cin1(\wait_mcnt[8]~17COUT1_30 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_mcnt[9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_mcnt[9] .cin0_used = "true";
defparam \wait_mcnt[9] .cin1_used = "true";
defparam \wait_mcnt[9] .cin_used = "true";
defparam \wait_mcnt[9] .lut_mask = "0ff0";
defparam \wait_mcnt[9] .operation_mode = "normal";
defparam \wait_mcnt[9] .output_mode = "reg_only";
defparam \wait_mcnt[9] .register_cascade_mode = "off";
defparam \wait_mcnt[9] .sum_lutc_input = "cin";
defparam \wait_mcnt[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y5_N7
maxii_lcell \Equal9~0 (
// Equation(s):
// \Equal9~0_combout  = (wait_mcnt[3]) # (((!wait_mcnt[2]) # (!wait_mcnt[1])) # (!wait_mcnt[0]))

	.clk(gnd),
	.dataa(wait_mcnt[3]),
	.datab(wait_mcnt[0]),
	.datac(wait_mcnt[1]),
	.datad(wait_mcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal9~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal9~0 .lut_mask = "bfff";
defparam \Equal9~0 .operation_mode = "normal";
defparam \Equal9~0 .output_mode = "comb_only";
defparam \Equal9~0 .register_cascade_mode = "off";
defparam \Equal9~0 .sum_lutc_input = "datac";
defparam \Equal9~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y5_N4
maxii_lcell \Equal9~1 (
// Equation(s):
// \Equal9~1_combout  = (((wait_mcnt[4]) # (!wait_mcnt[6])) # (!wait_mcnt[5])) # (!wait_mcnt[7])

	.clk(gnd),
	.dataa(wait_mcnt[7]),
	.datab(wait_mcnt[5]),
	.datac(wait_mcnt[6]),
	.datad(wait_mcnt[4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal9~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal9~1 .lut_mask = "ff7f";
defparam \Equal9~1 .operation_mode = "normal";
defparam \Equal9~1 .output_mode = "comb_only";
defparam \Equal9~1 .register_cascade_mode = "off";
defparam \Equal9~1 .sum_lutc_input = "datac";
defparam \Equal9~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y5_N5
maxii_lcell \Equal9~2 (
// Equation(s):
// \Equal9~2_combout  = (((\Equal9~0_combout ) # (\Equal9~1_combout )) # (!wait_mcnt[8])) # (!wait_mcnt[9])

	.clk(gnd),
	.dataa(wait_mcnt[9]),
	.datab(wait_mcnt[8]),
	.datac(\Equal9~0_combout ),
	.datad(\Equal9~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal9~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal9~2 .lut_mask = "fff7";
defparam \Equal9~2 .operation_mode = "normal";
defparam \Equal9~2 .output_mode = "comb_only";
defparam \Equal9~2 .register_cascade_mode = "off";
defparam \Equal9~2 .sum_lutc_input = "datac";
defparam \Equal9~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N2
maxii_lcell \seg_data[5][0]~14 (
// Equation(s):
// \seg_data[5][0]~14_combout  = ((\wait_status~regout  & (!\Equal9~2_combout  & \always1~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\wait_status~regout ),
	.datac(\Equal9~2_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[5][0]~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[5][0]~14 .lut_mask = "0c00";
defparam \seg_data[5][0]~14 .operation_mode = "normal";
defparam \seg_data[5][0]~14 .output_mode = "comb_only";
defparam \seg_data[5][0]~14 .register_cascade_mode = "off";
defparam \seg_data[5][0]~14 .sum_lutc_input = "datac";
defparam \seg_data[5][0]~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N3
maxii_lcell \seg_data[5][0]~15 (
// Equation(s):
// \seg_data[5][0]~15_combout  = (\seg_data[3][3]~regout  & (\Equal13~0_combout  & (\seg_data[3][0]~regout  & \seg_data[5][0]~14_combout )))

	.clk(gnd),
	.dataa(\seg_data[3][3]~regout ),
	.datab(\Equal13~0_combout ),
	.datac(\seg_data[3][0]~regout ),
	.datad(\seg_data[5][0]~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[5][0]~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[5][0]~15 .lut_mask = "8000";
defparam \seg_data[5][0]~15 .operation_mode = "normal";
defparam \seg_data[5][0]~15 .output_mode = "comb_only";
defparam \seg_data[5][0]~15 .register_cascade_mode = "off";
defparam \seg_data[5][0]~15 .sum_lutc_input = "datac";
defparam \seg_data[5][0]~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N5
maxii_lcell \seg_data[4][0]~19 (
// Equation(s):
// \seg_data[4][0]~19_combout  = ((!\rst~combout  & ((\seg_data[5][0]~15_combout ) # (!\onride~combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\onride~combout ),
	.datac(\rst~combout ),
	.datad(\seg_data[5][0]~15_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[4][0]~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[4][0]~19 .lut_mask = "0f03";
defparam \seg_data[4][0]~19 .operation_mode = "normal";
defparam \seg_data[4][0]~19 .output_mode = "comb_only";
defparam \seg_data[4][0]~19 .register_cascade_mode = "off";
defparam \seg_data[4][0]~19 .sum_lutc_input = "datac";
defparam \seg_data[4][0]~19 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y8_N7
maxii_lcell \seg_data[4][0] (
// Equation(s):
// \seg_data[4][0]~regout  = DFFEAS((!\seg_data[4][0]~regout  & (((\always1~0_combout  & !\seg_data[5][0]~16_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[4][0]~19_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[4][0]~regout ),
	.datab(vcc),
	.datac(\always1~0_combout ),
	.datad(\seg_data[5][0]~16_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[4][0]~19_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[4][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[4][0] .lut_mask = "0050";
defparam \seg_data[4][0] .operation_mode = "normal";
defparam \seg_data[4][0] .output_mode = "reg_only";
defparam \seg_data[4][0] .register_cascade_mode = "off";
defparam \seg_data[4][0] .sum_lutc_input = "datac";
defparam \seg_data[4][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y8_N2
maxii_lcell \seg_data[4][1] (
// Equation(s):
// \seg_data[4][1]~regout  = DFFEAS((\always1~0_combout  & (!\seg_data[5][0]~16_combout  & (\seg_data[4][0]~regout  $ (\seg_data[4][1]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[4][0]~19_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[4][0]~regout ),
	.datab(\seg_data[4][1]~regout ),
	.datac(\always1~0_combout ),
	.datad(\seg_data[5][0]~16_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[4][0]~19_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[4][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[4][1] .lut_mask = "0060";
defparam \seg_data[4][1] .operation_mode = "normal";
defparam \seg_data[4][1] .output_mode = "reg_only";
defparam \seg_data[4][1] .register_cascade_mode = "off";
defparam \seg_data[4][1] .sum_lutc_input = "datac";
defparam \seg_data[4][1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y8_N0
maxii_lcell \Add6~0 (
// Equation(s):
// \Add6~0_combout  = (((\seg_data[4][0]~regout  & \seg_data[4][1]~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[4][0]~regout ),
	.datad(\seg_data[4][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~0 .lut_mask = "f000";
defparam \Add6~0 .operation_mode = "normal";
defparam \Add6~0 .output_mode = "comb_only";
defparam \Add6~0 .register_cascade_mode = "off";
defparam \Add6~0 .sum_lutc_input = "datac";
defparam \Add6~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y8_N1
maxii_lcell \seg_data[4][2] (
// Equation(s):
// \seg_data[4][2]~regout  = DFFEAS((\always1~0_combout  & (!\seg_data[5][0]~16_combout  & (\seg_data[4][2]~regout  $ (\Add6~0_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[4][0]~19_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\always1~0_combout ),
	.datab(\seg_data[4][2]~regout ),
	.datac(\Add6~0_combout ),
	.datad(\seg_data[5][0]~16_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[4][0]~19_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[4][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[4][2] .lut_mask = "0028";
defparam \seg_data[4][2] .operation_mode = "normal";
defparam \seg_data[4][2] .output_mode = "reg_only";
defparam \seg_data[4][2] .register_cascade_mode = "off";
defparam \seg_data[4][2] .sum_lutc_input = "datac";
defparam \seg_data[4][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N8
maxii_lcell \Add6~1 (
// Equation(s):
// \Add6~1_combout  = \seg_data[4][3]~regout  $ (((\seg_data[4][1]~regout  & (\seg_data[4][2]~regout  & \seg_data[4][0]~regout ))))

	.clk(gnd),
	.dataa(\seg_data[4][3]~regout ),
	.datab(\seg_data[4][1]~regout ),
	.datac(\seg_data[4][2]~regout ),
	.datad(\seg_data[4][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add6~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add6~1 .lut_mask = "6aaa";
defparam \Add6~1 .operation_mode = "normal";
defparam \Add6~1 .output_mode = "comb_only";
defparam \Add6~1 .register_cascade_mode = "off";
defparam \Add6~1 .sum_lutc_input = "datac";
defparam \Add6~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N5
maxii_lcell \seg_data[4][3] (
// Equation(s):
// \seg_data[4][3]~regout  = DFFEAS((!\seg_data[5][0]~16_combout  & (((\always1~0_combout  & \Add6~1_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[4][0]~19_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[5][0]~16_combout ),
	.datab(vcc),
	.datac(\always1~0_combout ),
	.datad(\Add6~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[4][0]~19_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[4][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[4][3] .lut_mask = "5000";
defparam \seg_data[4][3] .operation_mode = "normal";
defparam \seg_data[4][3] .output_mode = "reg_only";
defparam \seg_data[4][3] .register_cascade_mode = "off";
defparam \seg_data[4][3] .sum_lutc_input = "datac";
defparam \seg_data[4][3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y8_N3
maxii_lcell \seg_data[5][0]~16 (
// Equation(s):
// \seg_data[5][0]~16_combout  = (\seg_data[4][3]~regout  & (!\seg_data[4][2]~regout  & (\seg_data[4][0]~regout  & !\seg_data[4][1]~regout )))

	.clk(gnd),
	.dataa(\seg_data[4][3]~regout ),
	.datab(\seg_data[4][2]~regout ),
	.datac(\seg_data[4][0]~regout ),
	.datad(\seg_data[4][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[5][0]~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[5][0]~16 .lut_mask = "0020";
defparam \seg_data[5][0]~16 .operation_mode = "normal";
defparam \seg_data[5][0]~16 .output_mode = "comb_only";
defparam \seg_data[5][0]~16 .register_cascade_mode = "off";
defparam \seg_data[5][0]~16 .sum_lutc_input = "datac";
defparam \seg_data[5][0]~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N4
maxii_lcell \seg_data[5][0]~17 (
// Equation(s):
// \seg_data[5][0]~17_combout  = (!\rst~combout  & (((\seg_data[5][0]~16_combout  & \seg_data[5][0]~15_combout )) # (!\onride~combout )))

	.clk(gnd),
	.dataa(\rst~combout ),
	.datab(\onride~combout ),
	.datac(\seg_data[5][0]~16_combout ),
	.datad(\seg_data[5][0]~15_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[5][0]~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[5][0]~17 .lut_mask = "5111";
defparam \seg_data[5][0]~17 .operation_mode = "normal";
defparam \seg_data[5][0]~17 .output_mode = "comb_only";
defparam \seg_data[5][0]~17 .register_cascade_mode = "off";
defparam \seg_data[5][0]~17 .sum_lutc_input = "datac";
defparam \seg_data[5][0]~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N9
maxii_lcell \seg_data[5][0] (
// Equation(s):
// \seg_data[5][0]~regout  = DFFEAS((((!\always1~0_combout )) # (!\seg_data[5][0]~regout )), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[5][0]~17_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(\seg_data[5][0]~regout ),
	.datac(vcc),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[5][0]~17_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[5][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[5][0] .lut_mask = "33ff";
defparam \seg_data[5][0] .operation_mode = "normal";
defparam \seg_data[5][0] .output_mode = "reg_only";
defparam \seg_data[5][0] .register_cascade_mode = "off";
defparam \seg_data[5][0] .sum_lutc_input = "datac";
defparam \seg_data[5][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N7
maxii_lcell \seg_data[5][1] (
// Equation(s):
// \seg_data[5][1]~regout  = DFFEAS(((\always1~0_combout  & (\seg_data[5][1]~regout  $ (!\seg_data[5][0]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[5][0]~17_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(\seg_data[5][1]~regout ),
	.datac(\always1~0_combout ),
	.datad(\seg_data[5][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[5][0]~17_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[5][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[5][1] .lut_mask = "c030";
defparam \seg_data[5][1] .operation_mode = "normal";
defparam \seg_data[5][1] .output_mode = "reg_only";
defparam \seg_data[5][1] .register_cascade_mode = "off";
defparam \seg_data[5][1] .sum_lutc_input = "datac";
defparam \seg_data[5][1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N1
maxii_lcell \seg_data[5][2] (
// Equation(s):
// \seg_data[5][2]~regout  = DFFEAS((\always1~0_combout  & (\seg_data[5][2]~regout  $ (((!\seg_data[5][0]~regout  & \seg_data[5][1]~regout ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[5][0]~17_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[5][2]~regout ),
	.datab(\seg_data[5][0]~regout ),
	.datac(\always1~0_combout ),
	.datad(\seg_data[5][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[5][0]~17_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[5][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[5][2] .lut_mask = "90a0";
defparam \seg_data[5][2] .operation_mode = "normal";
defparam \seg_data[5][2] .output_mode = "reg_only";
defparam \seg_data[5][2] .register_cascade_mode = "off";
defparam \seg_data[5][2] .sum_lutc_input = "datac";
defparam \seg_data[5][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y8_N4
maxii_lcell \Add5~0 (
// Equation(s):
// \Add5~0_combout  = (((\seg_data[5][1]~regout  & !\seg_data[5][0]~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[5][1]~regout ),
	.datad(\seg_data[5][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add5~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add5~0 .lut_mask = "00f0";
defparam \Add5~0 .operation_mode = "normal";
defparam \Add5~0 .output_mode = "comb_only";
defparam \Add5~0 .register_cascade_mode = "off";
defparam \Add5~0 .sum_lutc_input = "datac";
defparam \Add5~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N5
maxii_lcell \seg_data[5][3] (
// Equation(s):
// \seg_data[5][3]~regout  = DFFEAS((\seg_data[5][3]~regout  $ (((\seg_data[5][2]~regout  & \Add5~0_combout )))) # (!\always1~0_combout ), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[5][0]~17_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[5][2]~regout ),
	.datab(\seg_data[5][3]~regout ),
	.datac(\always1~0_combout ),
	.datad(\Add5~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[5][0]~17_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[5][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[5][3] .lut_mask = "6fcf";
defparam \seg_data[5][3] .operation_mode = "normal";
defparam \seg_data[5][3] .output_mode = "reg_only";
defparam \seg_data[5][3] .register_cascade_mode = "off";
defparam \seg_data[5][3] .sum_lutc_input = "datac";
defparam \seg_data[5][3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N7
maxii_lcell \always1~5 (
// Equation(s):
// \always1~5_combout  = ((\seg_data[5][0]~regout ) # ((\seg_data[3][3]~regout ) # (\seg_data[5][3]~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seg_data[5][0]~regout ),
	.datac(\seg_data[3][3]~regout ),
	.datad(\seg_data[5][3]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~5 .lut_mask = "fffc";
defparam \always1~5 .operation_mode = "normal";
defparam \always1~5 .output_mode = "comb_only";
defparam \always1~5 .register_cascade_mode = "off";
defparam \always1~5 .sum_lutc_input = "datac";
defparam \always1~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N9
maxii_lcell \always1~3 (
// Equation(s):
// \always1~3_combout  = (!\seg_data[3][1]~regout  & (!\seg_data[3][2]~regout  & (!\seg_data[4][1]~regout  & !\seg_data[4][2]~regout )))

	.clk(gnd),
	.dataa(\seg_data[3][1]~regout ),
	.datab(\seg_data[3][2]~regout ),
	.datac(\seg_data[4][1]~regout ),
	.datad(\seg_data[4][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~3 .lut_mask = "0001";
defparam \always1~3 .operation_mode = "normal";
defparam \always1~3 .output_mode = "comb_only";
defparam \always1~3 .register_cascade_mode = "off";
defparam \always1~3 .sum_lutc_input = "datac";
defparam \always1~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N0
maxii_lcell \always1~4 (
// Equation(s):
// \always1~4_combout  = (!\seg_data[4][3]~regout  & (!\seg_data[5][1]~regout  & (!\seg_data[5][2]~regout  & !\seg_data[4][0]~regout )))

	.clk(gnd),
	.dataa(\seg_data[4][3]~regout ),
	.datab(\seg_data[5][1]~regout ),
	.datac(\seg_data[5][2]~regout ),
	.datad(\seg_data[4][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~4 .lut_mask = "0001";
defparam \always1~4 .operation_mode = "normal";
defparam \always1~4 .output_mode = "comb_only";
defparam \always1~4 .register_cascade_mode = "off";
defparam \always1~4 .sum_lutc_input = "datac";
defparam \always1~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N8
maxii_lcell \always1~6 (
// Equation(s):
// \always1~6_combout  = (!\seg_data[3][0]~regout  & (!\always1~5_combout  & (\always1~3_combout  & \always1~4_combout )))

	.clk(gnd),
	.dataa(\seg_data[3][0]~regout ),
	.datab(\always1~5_combout ),
	.datac(\always1~3_combout ),
	.datad(\always1~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~6 .lut_mask = "1000";
defparam \always1~6 .operation_mode = "normal";
defparam \always1~6 .output_mode = "comb_only";
defparam \always1~6 .register_cascade_mode = "off";
defparam \always1~6 .sum_lutc_input = "datac";
defparam \always1~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N6
maxii_lcell \seg_data[3][0]~38 (
// Equation(s):
// \seg_data[3][0]~38_combout  = (!\rst~combout  & (((!\always1~6_combout  & \seg_data[5][0]~14_combout )) # (!\onride~combout )))

	.clk(gnd),
	.dataa(\always1~6_combout ),
	.datab(\onride~combout ),
	.datac(\rst~combout ),
	.datad(\seg_data[5][0]~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[3][0]~38_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[3][0]~38 .lut_mask = "0703";
defparam \seg_data[3][0]~38 .operation_mode = "normal";
defparam \seg_data[3][0]~38 .output_mode = "comb_only";
defparam \seg_data[3][0]~38 .register_cascade_mode = "off";
defparam \seg_data[3][0]~38 .sum_lutc_input = "datac";
defparam \seg_data[3][0]~38 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N0
maxii_lcell \seg_data[3][0] (
// Equation(s):
// \seg_data[3][0]~regout  = DFFEAS(((\always1~0_combout  & (!\seg_data[3][0]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[3][0]~38_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(\always1~0_combout ),
	.datac(\seg_data[3][0]~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[3][0]~38_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[3][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[3][0] .lut_mask = "0c0c";
defparam \seg_data[3][0] .operation_mode = "normal";
defparam \seg_data[3][0] .output_mode = "reg_only";
defparam \seg_data[3][0] .register_cascade_mode = "off";
defparam \seg_data[3][0] .sum_lutc_input = "datac";
defparam \seg_data[3][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N7
maxii_lcell \seg_data[3][2] (
// Equation(s):
// \seg_data[3][2]~regout  = DFFEAS((\seg_data~51_combout  & (\seg_data[3][2]~regout  $ (((\seg_data[3][1]~regout  & \seg_data[3][0]~regout ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[3][0]~38_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[3][1]~regout ),
	.datab(\seg_data[3][2]~regout ),
	.datac(\seg_data[3][0]~regout ),
	.datad(\seg_data~51_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[3][0]~38_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[3][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[3][2] .lut_mask = "6c00";
defparam \seg_data[3][2] .operation_mode = "normal";
defparam \seg_data[3][2] .output_mode = "reg_only";
defparam \seg_data[3][2] .register_cascade_mode = "off";
defparam \seg_data[3][2] .sum_lutc_input = "datac";
defparam \seg_data[3][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N3
maxii_lcell \Add7~0 (
// Equation(s):
// \Add7~0_combout  = (((\seg_data[3][0]~regout  & \seg_data[3][1]~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[3][0]~regout ),
	.datad(\seg_data[3][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add7~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add7~0 .lut_mask = "f000";
defparam \Add7~0 .operation_mode = "normal";
defparam \Add7~0 .output_mode = "comb_only";
defparam \Add7~0 .register_cascade_mode = "off";
defparam \Add7~0 .sum_lutc_input = "datac";
defparam \Add7~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N4
maxii_lcell \seg_data[3][3] (
// Equation(s):
// \seg_data[3][3]~regout  = DFFEAS((\seg_data~51_combout  & (\seg_data[3][3]~regout  $ (((\seg_data[3][2]~regout  & \Add7~0_combout ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[3][0]~38_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[3][3]~regout ),
	.datab(\seg_data[3][2]~regout ),
	.datac(\seg_data~51_combout ),
	.datad(\Add7~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[3][0]~38_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[3][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[3][3] .lut_mask = "60a0";
defparam \seg_data[3][3] .operation_mode = "normal";
defparam \seg_data[3][3] .output_mode = "reg_only";
defparam \seg_data[3][3] .register_cascade_mode = "off";
defparam \seg_data[3][3] .sum_lutc_input = "datac";
defparam \seg_data[3][3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N6
maxii_lcell \seg_data~51 (
// Equation(s):
// \seg_data~51_combout  = (\always1~0_combout  & (((!\Equal13~0_combout ) # (!\seg_data[3][0]~regout )) # (!\seg_data[3][3]~regout )))

	.clk(gnd),
	.dataa(\seg_data[3][3]~regout ),
	.datab(\seg_data[3][0]~regout ),
	.datac(\always1~0_combout ),
	.datad(\Equal13~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~51_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~51 .lut_mask = "70f0";
defparam \seg_data~51 .operation_mode = "normal";
defparam \seg_data~51 .output_mode = "comb_only";
defparam \seg_data~51 .register_cascade_mode = "off";
defparam \seg_data~51 .sum_lutc_input = "datac";
defparam \seg_data~51 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N8
maxii_lcell \seg_data[3][1] (
// Equation(s):
// \seg_data[3][1]~regout  = DFFEAS((\seg_data~51_combout  & ((\seg_data[3][0]~regout  $ (\seg_data[3][1]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[3][0]~38_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data~51_combout ),
	.datab(vcc),
	.datac(\seg_data[3][0]~regout ),
	.datad(\seg_data[3][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[3][0]~38_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[3][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[3][1] .lut_mask = "0aa0";
defparam \seg_data[3][1] .operation_mode = "normal";
defparam \seg_data[3][1] .output_mode = "reg_only";
defparam \seg_data[3][1] .register_cascade_mode = "off";
defparam \seg_data[3][1] .sum_lutc_input = "datac";
defparam \seg_data[3][1] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_125,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \night~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\night~combout ),
	.padio(night));
// synopsys translate_off
defparam \night~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X12_Y7_N7
maxii_lcell \seg_data[7][1] (
// Equation(s):
// \seg_data[7][1]~regout  = DFFEAS((\seg_data[7][0]~20_combout  & (\always1~0_combout  & (\seg_data[7][1]~regout  $ (!\seg_data[7][0]~regout )))) # (!\seg_data[7][0]~20_combout  & (((\seg_data[7][1]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , , , 
// , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\always1~0_combout ),
	.datab(\seg_data[7][1]~regout ),
	.datac(\seg_data[7][0]~regout ),
	.datad(\seg_data[7][0]~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[7][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[7][1] .lut_mask = "82cc";
defparam \seg_data[7][1] .operation_mode = "normal";
defparam \seg_data[7][1] .output_mode = "reg_only";
defparam \seg_data[7][1] .register_cascade_mode = "off";
defparam \seg_data[7][1] .sum_lutc_input = "datac";
defparam \seg_data[7][1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y7_N2
maxii_lcell \Add16~0 (
// Equation(s):
// \Add16~0_combout  = (!\seg_data[7][0]~regout  & (((\seg_data[7][1]~regout ))))

	.clk(gnd),
	.dataa(\seg_data[7][0]~regout ),
	.datab(vcc),
	.datac(\seg_data[7][1]~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add16~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add16~0 .lut_mask = "5050";
defparam \Add16~0 .operation_mode = "normal";
defparam \Add16~0 .output_mode = "comb_only";
defparam \Add16~0 .register_cascade_mode = "off";
defparam \Add16~0 .sum_lutc_input = "datac";
defparam \Add16~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y7_N9
maxii_lcell \seg_data[7][2] (
// Equation(s):
// \seg_data[7][2]~regout  = DFFEAS((\seg_data[7][0]~20_combout  & (\always1~0_combout  & (\Add16~0_combout  $ (\seg_data[7][2]~regout )))) # (!\seg_data[7][0]~20_combout  & (((\seg_data[7][2]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\Add16~0_combout ),
	.datab(\seg_data[7][2]~regout ),
	.datac(\always1~0_combout ),
	.datad(\seg_data[7][0]~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[7][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[7][2] .lut_mask = "60cc";
defparam \seg_data[7][2] .operation_mode = "normal";
defparam \seg_data[7][2] .output_mode = "reg_only";
defparam \seg_data[7][2] .register_cascade_mode = "off";
defparam \seg_data[7][2] .sum_lutc_input = "datac";
defparam \seg_data[7][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y7_N5
maxii_lcell \Add16~1 (
// Equation(s):
// \Add16~1_combout  = (!\seg_data[7][0]~regout  & (\seg_data[7][1]~regout  & (\seg_data[7][2]~regout )))

	.clk(gnd),
	.dataa(\seg_data[7][0]~regout ),
	.datab(\seg_data[7][1]~regout ),
	.datac(\seg_data[7][2]~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add16~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add16~1 .lut_mask = "4040";
defparam \Add16~1 .operation_mode = "normal";
defparam \Add16~1 .output_mode = "comb_only";
defparam \Add16~1 .register_cascade_mode = "off";
defparam \Add16~1 .sum_lutc_input = "datac";
defparam \Add16~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y7_N1
maxii_lcell \seg_data[7][3] (
// Equation(s):
// \seg_data[7][3]~regout  = DFFEAS((\seg_data[7][0]~20_combout  & ((\seg_data[7][3]~regout  $ (\Add16~1_combout )) # (!\always1~0_combout ))) # (!\seg_data[7][0]~20_combout  & (((\seg_data[7][3]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , , , , , 
// )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\always1~0_combout ),
	.datab(\seg_data[7][3]~regout ),
	.datac(\Add16~1_combout ),
	.datad(\seg_data[7][0]~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[7][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[7][3] .lut_mask = "7dcc";
defparam \seg_data[7][3] .operation_mode = "normal";
defparam \seg_data[7][3] .output_mode = "reg_only";
defparam \seg_data[7][3] .register_cascade_mode = "off";
defparam \seg_data[7][3] .sum_lutc_input = "datac";
defparam \seg_data[7][3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y7_N6
maxii_lcell \always1~1 (
// Equation(s):
// \always1~1_combout  = (!\seg_data[7][0]~regout  & (!\seg_data[7][1]~regout  & (!\seg_data[7][3]~regout  & !\seg_data[7][2]~regout )))

	.clk(gnd),
	.dataa(\seg_data[7][0]~regout ),
	.datab(\seg_data[7][1]~regout ),
	.datac(\seg_data[7][3]~regout ),
	.datad(\seg_data[7][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~1 .lut_mask = "0001";
defparam \always1~1 .operation_mode = "normal";
defparam \always1~1 .output_mode = "comb_only";
defparam \always1~1 .register_cascade_mode = "off";
defparam \always1~1 .sum_lutc_input = "datac";
defparam \always1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N6
maxii_lcell \always1~2 (
// Equation(s):
// \always1~2_combout  = (((!\Equal19~0_combout  & \always1~1_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Equal19~0_combout ),
	.datad(\always1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~2 .lut_mask = "0f00";
defparam \always1~2 .operation_mode = "normal";
defparam \always1~2 .output_mode = "comb_only";
defparam \always1~2 .register_cascade_mode = "off";
defparam \always1~2 .sum_lutc_input = "datac";
defparam \always1~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y10_N4
maxii_lcell \mile_mcnt[9]~22 (
// Equation(s):
// \mile_mcnt[9]~22_combout  = (!\rst~combout  & ((\always1~0_combout  & (!\wait_status~regout )) # (!\always1~0_combout  & ((!\onride~combout )))))

	.clk(gnd),
	.dataa(\wait_status~regout ),
	.datab(\rst~combout ),
	.datac(\onride~combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mile_mcnt[9]~22_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_mcnt[9]~22 .lut_mask = "1103";
defparam \mile_mcnt[9]~22 .operation_mode = "normal";
defparam \mile_mcnt[9]~22 .output_mode = "comb_only";
defparam \mile_mcnt[9]~22 .register_cascade_mode = "off";
defparam \mile_mcnt[9]~22 .sum_lutc_input = "datac";
defparam \mile_mcnt[9]~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y10_N0
maxii_lcell \mile_mcnt[0] (
// Equation(s):
// mile_mcnt[0] = DFFEAS(((!mile_mcnt[0])), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )
// \mile_mcnt[0]~3  = CARRY(((mile_mcnt[0])))
// \mile_mcnt[0]~3COUT1_25  = CARRY(((mile_mcnt[0])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(mile_mcnt[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[0]),
	.cout(),
	.cout0(\mile_mcnt[0]~3 ),
	.cout1(\mile_mcnt[0]~3COUT1_25 ));
// synopsys translate_off
defparam \mile_mcnt[0] .lut_mask = "33cc";
defparam \mile_mcnt[0] .operation_mode = "arithmetic";
defparam \mile_mcnt[0] .output_mode = "reg_only";
defparam \mile_mcnt[0] .register_cascade_mode = "off";
defparam \mile_mcnt[0] .sum_lutc_input = "datac";
defparam \mile_mcnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y10_N1
maxii_lcell \mile_mcnt[1] (
// Equation(s):
// mile_mcnt[1] = DFFEAS((mile_mcnt[1] $ ((\mile_mcnt[0]~3 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )
// \mile_mcnt[1]~5  = CARRY(((!\mile_mcnt[0]~3 ) # (!mile_mcnt[1])))
// \mile_mcnt[1]~5COUT1_26  = CARRY(((!\mile_mcnt[0]~3COUT1_25 ) # (!mile_mcnt[1])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(mile_mcnt[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(gnd),
	.cin0(\mile_mcnt[0]~3 ),
	.cin1(\mile_mcnt[0]~3COUT1_25 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[1]),
	.cout(),
	.cout0(\mile_mcnt[1]~5 ),
	.cout1(\mile_mcnt[1]~5COUT1_26 ));
// synopsys translate_off
defparam \mile_mcnt[1] .cin0_used = "true";
defparam \mile_mcnt[1] .cin1_used = "true";
defparam \mile_mcnt[1] .lut_mask = "3c3f";
defparam \mile_mcnt[1] .operation_mode = "arithmetic";
defparam \mile_mcnt[1] .output_mode = "reg_only";
defparam \mile_mcnt[1] .register_cascade_mode = "off";
defparam \mile_mcnt[1] .sum_lutc_input = "cin";
defparam \mile_mcnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y10_N2
maxii_lcell \mile_mcnt[2] (
// Equation(s):
// mile_mcnt[2] = DFFEAS((mile_mcnt[2] $ ((!\mile_mcnt[1]~5 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )
// \mile_mcnt[2]~7  = CARRY(((mile_mcnt[2] & !\mile_mcnt[1]~5 )))
// \mile_mcnt[2]~7COUT1_27  = CARRY(((mile_mcnt[2] & !\mile_mcnt[1]~5COUT1_26 )))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(mile_mcnt[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(gnd),
	.cin0(\mile_mcnt[1]~5 ),
	.cin1(\mile_mcnt[1]~5COUT1_26 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[2]),
	.cout(),
	.cout0(\mile_mcnt[2]~7 ),
	.cout1(\mile_mcnt[2]~7COUT1_27 ));
// synopsys translate_off
defparam \mile_mcnt[2] .cin0_used = "true";
defparam \mile_mcnt[2] .cin1_used = "true";
defparam \mile_mcnt[2] .lut_mask = "c30c";
defparam \mile_mcnt[2] .operation_mode = "arithmetic";
defparam \mile_mcnt[2] .output_mode = "reg_only";
defparam \mile_mcnt[2] .register_cascade_mode = "off";
defparam \mile_mcnt[2] .sum_lutc_input = "cin";
defparam \mile_mcnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y10_N3
maxii_lcell \mile_mcnt[3] (
// Equation(s):
// mile_mcnt[3] = DFFEAS(mile_mcnt[3] $ ((((\mile_mcnt[2]~7 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )
// \mile_mcnt[3]~1  = CARRY(((!\mile_mcnt[2]~7 )) # (!mile_mcnt[3]))
// \mile_mcnt[3]~1COUT1_28  = CARRY(((!\mile_mcnt[2]~7COUT1_27 )) # (!mile_mcnt[3]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_mcnt[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(gnd),
	.cin0(\mile_mcnt[2]~7 ),
	.cin1(\mile_mcnt[2]~7COUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[3]),
	.cout(),
	.cout0(\mile_mcnt[3]~1 ),
	.cout1(\mile_mcnt[3]~1COUT1_28 ));
// synopsys translate_off
defparam \mile_mcnt[3] .cin0_used = "true";
defparam \mile_mcnt[3] .cin1_used = "true";
defparam \mile_mcnt[3] .lut_mask = "5a5f";
defparam \mile_mcnt[3] .operation_mode = "arithmetic";
defparam \mile_mcnt[3] .output_mode = "reg_only";
defparam \mile_mcnt[3] .register_cascade_mode = "off";
defparam \mile_mcnt[3] .sum_lutc_input = "cin";
defparam \mile_mcnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y10_N8
maxii_lcell \Equal17~0 (
// Equation(s):
// \Equal17~0_combout  = (mile_mcnt[3]) # (((!mile_mcnt[1]) # (!mile_mcnt[0])) # (!mile_mcnt[2]))

	.clk(gnd),
	.dataa(mile_mcnt[3]),
	.datab(mile_mcnt[2]),
	.datac(mile_mcnt[0]),
	.datad(mile_mcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal17~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal17~0 .lut_mask = "bfff";
defparam \Equal17~0 .operation_mode = "normal";
defparam \Equal17~0 .output_mode = "comb_only";
defparam \Equal17~0 .register_cascade_mode = "off";
defparam \Equal17~0 .sum_lutc_input = "datac";
defparam \Equal17~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y10_N4
maxii_lcell \mile_mcnt[4] (
// Equation(s):
// mile_mcnt[4] = DFFEAS(mile_mcnt[4] $ ((((!\mile_mcnt[3]~1 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )
// \mile_mcnt[4]~9  = CARRY((mile_mcnt[4] & ((!\mile_mcnt[3]~1COUT1_28 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_mcnt[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(gnd),
	.cin0(\mile_mcnt[3]~1 ),
	.cin1(\mile_mcnt[3]~1COUT1_28 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[4]),
	.cout(\mile_mcnt[4]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_mcnt[4] .cin0_used = "true";
defparam \mile_mcnt[4] .cin1_used = "true";
defparam \mile_mcnt[4] .lut_mask = "a50a";
defparam \mile_mcnt[4] .operation_mode = "arithmetic";
defparam \mile_mcnt[4] .output_mode = "reg_only";
defparam \mile_mcnt[4] .register_cascade_mode = "off";
defparam \mile_mcnt[4] .sum_lutc_input = "cin";
defparam \mile_mcnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y10_N5
maxii_lcell \mile_mcnt[5] (
// Equation(s):
// mile_mcnt[5] = DFFEAS(mile_mcnt[5] $ ((((\mile_mcnt[4]~9 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )
// \mile_mcnt[5]~11  = CARRY(((!\mile_mcnt[4]~9 )) # (!mile_mcnt[5]))
// \mile_mcnt[5]~11COUT1_29  = CARRY(((!\mile_mcnt[4]~9 )) # (!mile_mcnt[5]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_mcnt[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(\mile_mcnt[4]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[5]),
	.cout(),
	.cout0(\mile_mcnt[5]~11 ),
	.cout1(\mile_mcnt[5]~11COUT1_29 ));
// synopsys translate_off
defparam \mile_mcnt[5] .cin_used = "true";
defparam \mile_mcnt[5] .lut_mask = "5a5f";
defparam \mile_mcnt[5] .operation_mode = "arithmetic";
defparam \mile_mcnt[5] .output_mode = "reg_only";
defparam \mile_mcnt[5] .register_cascade_mode = "off";
defparam \mile_mcnt[5] .sum_lutc_input = "cin";
defparam \mile_mcnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y10_N6
maxii_lcell \mile_mcnt[6] (
// Equation(s):
// mile_mcnt[6] = DFFEAS(mile_mcnt[6] $ ((((!(!\mile_mcnt[4]~9  & \mile_mcnt[5]~11 ) # (\mile_mcnt[4]~9  & \mile_mcnt[5]~11COUT1_29 ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )
// \mile_mcnt[6]~13  = CARRY((mile_mcnt[6] & ((!\mile_mcnt[5]~11 ))))
// \mile_mcnt[6]~13COUT1_30  = CARRY((mile_mcnt[6] & ((!\mile_mcnt[5]~11COUT1_29 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_mcnt[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(\mile_mcnt[4]~9 ),
	.cin0(\mile_mcnt[5]~11 ),
	.cin1(\mile_mcnt[5]~11COUT1_29 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[6]),
	.cout(),
	.cout0(\mile_mcnt[6]~13 ),
	.cout1(\mile_mcnt[6]~13COUT1_30 ));
// synopsys translate_off
defparam \mile_mcnt[6] .cin0_used = "true";
defparam \mile_mcnt[6] .cin1_used = "true";
defparam \mile_mcnt[6] .cin_used = "true";
defparam \mile_mcnt[6] .lut_mask = "a50a";
defparam \mile_mcnt[6] .operation_mode = "arithmetic";
defparam \mile_mcnt[6] .output_mode = "reg_only";
defparam \mile_mcnt[6] .register_cascade_mode = "off";
defparam \mile_mcnt[6] .sum_lutc_input = "cin";
defparam \mile_mcnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y10_N7
maxii_lcell \mile_mcnt[7] (
// Equation(s):
// mile_mcnt[7] = DFFEAS((mile_mcnt[7] $ (((!\mile_mcnt[4]~9  & \mile_mcnt[6]~13 ) # (\mile_mcnt[4]~9  & \mile_mcnt[6]~13COUT1_30 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )
// \mile_mcnt[7]~15  = CARRY(((!\mile_mcnt[6]~13 ) # (!mile_mcnt[7])))
// \mile_mcnt[7]~15COUT1_31  = CARRY(((!\mile_mcnt[6]~13COUT1_30 ) # (!mile_mcnt[7])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(mile_mcnt[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(\mile_mcnt[4]~9 ),
	.cin0(\mile_mcnt[6]~13 ),
	.cin1(\mile_mcnt[6]~13COUT1_30 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[7]),
	.cout(),
	.cout0(\mile_mcnt[7]~15 ),
	.cout1(\mile_mcnt[7]~15COUT1_31 ));
// synopsys translate_off
defparam \mile_mcnt[7] .cin0_used = "true";
defparam \mile_mcnt[7] .cin1_used = "true";
defparam \mile_mcnt[7] .cin_used = "true";
defparam \mile_mcnt[7] .lut_mask = "3c3f";
defparam \mile_mcnt[7] .operation_mode = "arithmetic";
defparam \mile_mcnt[7] .output_mode = "reg_only";
defparam \mile_mcnt[7] .register_cascade_mode = "off";
defparam \mile_mcnt[7] .sum_lutc_input = "cin";
defparam \mile_mcnt[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y10_N6
maxii_lcell \Equal17~1 (
// Equation(s):
// \Equal17~1_combout  = ((mile_mcnt[4]) # ((!mile_mcnt[5]) # (!mile_mcnt[6]))) # (!mile_mcnt[7])

	.clk(gnd),
	.dataa(mile_mcnt[7]),
	.datab(mile_mcnt[4]),
	.datac(mile_mcnt[6]),
	.datad(mile_mcnt[5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal17~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal17~1 .lut_mask = "dfff";
defparam \Equal17~1 .operation_mode = "normal";
defparam \Equal17~1 .output_mode = "comb_only";
defparam \Equal17~1 .register_cascade_mode = "off";
defparam \Equal17~1 .sum_lutc_input = "datac";
defparam \Equal17~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y10_N5
maxii_lcell \mile_mcnt[3]~21 (
// Equation(s):
// \mile_mcnt[3]~21_combout  = ((!\Equal17~0_combout  & (!\Equal17~2_combout  & !\Equal17~1_combout ))) # (!\always1~0_combout )

	.clk(gnd),
	.dataa(\Equal17~0_combout ),
	.datab(\Equal17~2_combout ),
	.datac(\Equal17~1_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mile_mcnt[3]~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_mcnt[3]~21 .lut_mask = "01ff";
defparam \mile_mcnt[3]~21 .operation_mode = "normal";
defparam \mile_mcnt[3]~21 .output_mode = "comb_only";
defparam \mile_mcnt[3]~21 .register_cascade_mode = "off";
defparam \mile_mcnt[3]~21 .sum_lutc_input = "datac";
defparam \mile_mcnt[3]~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y10_N8
maxii_lcell \mile_mcnt[8] (
// Equation(s):
// mile_mcnt[8] = DFFEAS(mile_mcnt[8] $ ((((!(!\mile_mcnt[4]~9  & \mile_mcnt[7]~15 ) # (\mile_mcnt[4]~9  & \mile_mcnt[7]~15COUT1_31 ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )
// \mile_mcnt[8]~17  = CARRY((mile_mcnt[8] & ((!\mile_mcnt[7]~15 ))))
// \mile_mcnt[8]~17COUT1_32  = CARRY((mile_mcnt[8] & ((!\mile_mcnt[7]~15COUT1_31 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_mcnt[8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(\mile_mcnt[4]~9 ),
	.cin0(\mile_mcnt[7]~15 ),
	.cin1(\mile_mcnt[7]~15COUT1_31 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[8]),
	.cout(),
	.cout0(\mile_mcnt[8]~17 ),
	.cout1(\mile_mcnt[8]~17COUT1_32 ));
// synopsys translate_off
defparam \mile_mcnt[8] .cin0_used = "true";
defparam \mile_mcnt[8] .cin1_used = "true";
defparam \mile_mcnt[8] .cin_used = "true";
defparam \mile_mcnt[8] .lut_mask = "a50a";
defparam \mile_mcnt[8] .operation_mode = "arithmetic";
defparam \mile_mcnt[8] .output_mode = "reg_only";
defparam \mile_mcnt[8] .register_cascade_mode = "off";
defparam \mile_mcnt[8] .sum_lutc_input = "cin";
defparam \mile_mcnt[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y10_N9
maxii_lcell \mile_mcnt[9] (
// Equation(s):
// mile_mcnt[9] = DFFEAS((((!\mile_mcnt[4]~9  & \mile_mcnt[8]~17 ) # (\mile_mcnt[4]~9  & \mile_mcnt[8]~17COUT1_32 ) $ (mile_mcnt[9]))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_mcnt[9]~22_combout , , , \mile_mcnt[3]~21_combout , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(mile_mcnt[9]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\mile_mcnt[3]~21_combout ),
	.sload(gnd),
	.ena(\mile_mcnt[9]~22_combout ),
	.cin(\mile_mcnt[4]~9 ),
	.cin0(\mile_mcnt[8]~17 ),
	.cin1(\mile_mcnt[8]~17COUT1_32 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_mcnt[9]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_mcnt[9] .cin0_used = "true";
defparam \mile_mcnt[9] .cin1_used = "true";
defparam \mile_mcnt[9] .cin_used = "true";
defparam \mile_mcnt[9] .lut_mask = "0ff0";
defparam \mile_mcnt[9] .operation_mode = "normal";
defparam \mile_mcnt[9] .output_mode = "reg_only";
defparam \mile_mcnt[9] .register_cascade_mode = "off";
defparam \mile_mcnt[9] .sum_lutc_input = "cin";
defparam \mile_mcnt[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y10_N7
maxii_lcell \Equal17~2 (
// Equation(s):
// \Equal17~2_combout  = (((!mile_mcnt[8]) # (!mile_mcnt[9])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(mile_mcnt[9]),
	.datad(mile_mcnt[8]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal17~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal17~2 .lut_mask = "0fff";
defparam \Equal17~2 .operation_mode = "normal";
defparam \Equal17~2 .output_mode = "comb_only";
defparam \Equal17~2 .register_cascade_mode = "off";
defparam \Equal17~2 .sum_lutc_input = "datac";
defparam \Equal17~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y10_N9
maxii_lcell \mile_speed[2]~0 (
// Equation(s):
// \mile_speed[2]~0_combout  = (!\wait_status~regout  & (!\Equal17~2_combout  & (!\Equal17~1_combout  & !\Equal17~0_combout )))

	.clk(gnd),
	.dataa(\wait_status~regout ),
	.datab(\Equal17~2_combout ),
	.datac(\Equal17~1_combout ),
	.datad(\Equal17~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mile_speed[2]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_speed[2]~0 .lut_mask = "0001";
defparam \mile_speed[2]~0 .operation_mode = "normal";
defparam \mile_speed[2]~0 .output_mode = "comb_only";
defparam \mile_speed[2]~0 .register_cascade_mode = "off";
defparam \mile_speed[2]~0 .sum_lutc_input = "datac";
defparam \mile_speed[2]~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_132,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \mile_v[2]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\mile_v~combout [2]),
	.padio(mile_v[2]));
// synopsys translate_off
defparam \mile_v[2]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y5_N9
maxii_lcell \mile_speed[2]~2 (
// Equation(s):
// \mile_speed[2]~2_combout  = (!\rst~combout  & ((\always1~0_combout  & ((\mile_speed[2]~0_combout ))) # (!\always1~0_combout  & (!\onride~combout ))))

	.clk(gnd),
	.dataa(\rst~combout ),
	.datab(\onride~combout ),
	.datac(\always1~0_combout ),
	.datad(\mile_speed[2]~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mile_speed[2]~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_speed[2]~2 .lut_mask = "5101";
defparam \mile_speed[2]~2 .operation_mode = "normal";
defparam \mile_speed[2]~2 .output_mode = "comb_only";
defparam \mile_speed[2]~2 .register_cascade_mode = "off";
defparam \mile_speed[2]~2 .sum_lutc_input = "datac";
defparam \mile_speed[2]~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N8
maxii_lcell \mile_speed[0] (
// Equation(s):
// mile_speed[0] = DFFEAS((!mile_speed[0] & (((\LessThan6~1_combout  & \always1~0_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_speed[2]~2_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_speed[0]),
	.datab(vcc),
	.datac(\LessThan6~1_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\mile_speed[2]~2_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_speed[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_speed[0] .lut_mask = "5000";
defparam \mile_speed[0] .operation_mode = "normal";
defparam \mile_speed[0] .output_mode = "reg_only";
defparam \mile_speed[0] .register_cascade_mode = "off";
defparam \mile_speed[0] .sum_lutc_input = "datac";
defparam \mile_speed[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N7
maxii_lcell \mile_speed[1] (
// Equation(s):
// mile_speed[1] = DFFEAS((\LessThan6~1_combout  & (\always1~0_combout  & (mile_speed[0] $ (mile_speed[1])))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_speed[2]~2_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_speed[0]),
	.datab(mile_speed[1]),
	.datac(\LessThan6~1_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\mile_speed[2]~2_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_speed[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_speed[1] .lut_mask = "6000";
defparam \mile_speed[1] .operation_mode = "normal";
defparam \mile_speed[1] .output_mode = "reg_only";
defparam \mile_speed[1] .register_cascade_mode = "off";
defparam \mile_speed[1] .sum_lutc_input = "datac";
defparam \mile_speed[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N5
maxii_lcell \speedLED|WideOr1~0 (
// Equation(s):
// \speedLED|WideOr1~0_combout  = (((mile_speed[1] & mile_speed[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(mile_speed[1]),
	.datad(mile_speed[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\speedLED|WideOr1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \speedLED|WideOr1~0 .lut_mask = "f000";
defparam \speedLED|WideOr1~0 .operation_mode = "normal";
defparam \speedLED|WideOr1~0 .output_mode = "comb_only";
defparam \speedLED|WideOr1~0 .register_cascade_mode = "off";
defparam \speedLED|WideOr1~0 .sum_lutc_input = "datac";
defparam \speedLED|WideOr1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N6
maxii_lcell \mile_speed[2] (
// Equation(s):
// mile_speed[2] = DFFEAS((\LessThan6~1_combout  & (\always1~0_combout  & (mile_speed[2] $ (\speedLED|WideOr1~0_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_speed[2]~2_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\LessThan6~1_combout ),
	.datab(\always1~0_combout ),
	.datac(mile_speed[2]),
	.datad(\speedLED|WideOr1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\mile_speed[2]~2_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_speed[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_speed[2] .lut_mask = "0880";
defparam \mile_speed[2] .operation_mode = "normal";
defparam \mile_speed[2] .output_mode = "reg_only";
defparam \mile_speed[2] .register_cascade_mode = "off";
defparam \mile_speed[2] .sum_lutc_input = "datac";
defparam \mile_speed[2] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_134,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \mile_v[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\mile_v~combout [0]),
	.padio(mile_v[0]));
// synopsys translate_off
defparam \mile_v[0]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_133,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \mile_v[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\mile_v~combout [1]),
	.padio(mile_v[1]));
// synopsys translate_off
defparam \mile_v[1]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y5_N3
maxii_lcell \LessThan6~0 (
// Equation(s):
// \LessThan6~0_combout  = (\mile_v~combout [1] & (((\mile_v~combout [0] & !mile_speed[0])) # (!mile_speed[1]))) # (!\mile_v~combout [1] & (\mile_v~combout [0] & (!mile_speed[1] & !mile_speed[0])))

	.clk(gnd),
	.dataa(\mile_v~combout [0]),
	.datab(\mile_v~combout [1]),
	.datac(mile_speed[1]),
	.datad(mile_speed[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan6~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan6~0 .lut_mask = "0c8e";
defparam \LessThan6~0 .operation_mode = "normal";
defparam \LessThan6~0 .output_mode = "comb_only";
defparam \LessThan6~0 .register_cascade_mode = "off";
defparam \LessThan6~0 .sum_lutc_input = "datac";
defparam \LessThan6~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N4
maxii_lcell \LessThan6~1 (
// Equation(s):
// \LessThan6~1_combout  = ((\mile_v~combout [2] & ((\LessThan6~0_combout ) # (!mile_speed[2]))) # (!\mile_v~combout [2] & (!mile_speed[2] & \LessThan6~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\mile_v~combout [2]),
	.datac(mile_speed[2]),
	.datad(\LessThan6~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan6~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan6~1 .lut_mask = "cf0c";
defparam \LessThan6~1 .operation_mode = "normal";
defparam \LessThan6~1 .output_mode = "comb_only";
defparam \LessThan6~1 .register_cascade_mode = "off";
defparam \LessThan6~1 .sum_lutc_input = "datac";
defparam \LessThan6~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N2
maxii_lcell \seg_data[6][0]~11 (
// Equation(s):
// \seg_data[6][0]~11_combout  = (\always1~0_combout  & (!\always1~2_combout  & (\mile_speed[2]~0_combout  & !\LessThan6~1_combout )))

	.clk(gnd),
	.dataa(\always1~0_combout ),
	.datab(\always1~2_combout ),
	.datac(\mile_speed[2]~0_combout ),
	.datad(\LessThan6~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[6][0]~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[6][0]~11 .lut_mask = "0020";
defparam \seg_data[6][0]~11 .operation_mode = "normal";
defparam \seg_data[6][0]~11 .output_mode = "comb_only";
defparam \seg_data[6][0]~11 .register_cascade_mode = "off";
defparam \seg_data[6][0]~11 .sum_lutc_input = "datac";
defparam \seg_data[6][0]~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N4
maxii_lcell \seg_data[6][0]~12 (
// Equation(s):
// \seg_data[6][0]~12_combout  = ((!\rst~combout  & ((\seg_data[6][0]~11_combout ) # (!\onride~combout ))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(vcc),
	.datac(\rst~combout ),
	.datad(\seg_data[6][0]~11_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[6][0]~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[6][0]~12 .lut_mask = "0f05";
defparam \seg_data[6][0]~12 .operation_mode = "normal";
defparam \seg_data[6][0]~12 .output_mode = "comb_only";
defparam \seg_data[6][0]~12 .register_cascade_mode = "off";
defparam \seg_data[6][0]~12 .sum_lutc_input = "datac";
defparam \seg_data[6][0]~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N9
maxii_lcell \seg_data[6][0] (
// Equation(s):
// \seg_data[6][0]~regout  = DFFEAS((((!\seg_data[6][0]~regout )) # (!\always1~0_combout )), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[6][0]~12_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(\always1~0_combout ),
	.datac(vcc),
	.datad(\seg_data[6][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[6][0]~12_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[6][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[6][0] .lut_mask = "33ff";
defparam \seg_data[6][0] .operation_mode = "normal";
defparam \seg_data[6][0] .output_mode = "reg_only";
defparam \seg_data[6][0] .register_cascade_mode = "off";
defparam \seg_data[6][0] .sum_lutc_input = "datac";
defparam \seg_data[6][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N1
maxii_lcell \seg_data[6][1] (
// Equation(s):
// \seg_data[6][1]~regout  = DFFEAS((\always1~0_combout  & (\Equal19~0_combout  & (\seg_data[6][0]~regout  $ (!\seg_data[6][1]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[6][0]~12_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[6][0]~regout ),
	.datab(\seg_data[6][1]~regout ),
	.datac(\always1~0_combout ),
	.datad(\Equal19~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[6][0]~12_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[6][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[6][1] .lut_mask = "9000";
defparam \seg_data[6][1] .operation_mode = "normal";
defparam \seg_data[6][1] .output_mode = "reg_only";
defparam \seg_data[6][1] .register_cascade_mode = "off";
defparam \seg_data[6][1] .sum_lutc_input = "datac";
defparam \seg_data[6][1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N2
maxii_lcell \Add17~0 (
// Equation(s):
// \Add17~0_combout  = (!\seg_data[6][0]~regout  & (((\seg_data[6][1]~regout ))))

	.clk(gnd),
	.dataa(\seg_data[6][0]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\seg_data[6][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add17~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add17~0 .lut_mask = "5500";
defparam \Add17~0 .operation_mode = "normal";
defparam \Add17~0 .output_mode = "comb_only";
defparam \Add17~0 .register_cascade_mode = "off";
defparam \Add17~0 .sum_lutc_input = "datac";
defparam \Add17~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N1
maxii_lcell \seg_data~61 (
// Equation(s):
// \seg_data~61_combout  = (((\Equal19~0_combout  & \always1~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\Equal19~0_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~61_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~61 .lut_mask = "f000";
defparam \seg_data~61 .operation_mode = "normal";
defparam \seg_data~61 .output_mode = "comb_only";
defparam \seg_data~61 .register_cascade_mode = "off";
defparam \seg_data~61 .sum_lutc_input = "datac";
defparam \seg_data~61 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N3
maxii_lcell \seg_data[6][2] (
// Equation(s):
// \seg_data[6][2]~regout  = DFFEAS((\Equal19~0_combout  & (\always1~0_combout  & (\Add17~0_combout  $ (\seg_data[6][2]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[6][0]~12_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\Equal19~0_combout ),
	.datab(\always1~0_combout ),
	.datac(\Add17~0_combout ),
	.datad(\seg_data[6][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[6][0]~12_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[6][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[6][2] .lut_mask = "0880";
defparam \seg_data[6][2] .operation_mode = "normal";
defparam \seg_data[6][2] .output_mode = "reg_only";
defparam \seg_data[6][2] .register_cascade_mode = "off";
defparam \seg_data[6][2] .sum_lutc_input = "datac";
defparam \seg_data[6][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N5
maxii_lcell \seg_data[6][3] (
// Equation(s):
// \seg_data[6][3]~regout  = DFFEAS((\seg_data[6][3]~regout  $ (((\Add17~0_combout  & \seg_data[6][2]~regout )))) # (!\seg_data~61_combout ), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[6][0]~12_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[6][3]~regout ),
	.datab(\Add17~0_combout ),
	.datac(\seg_data~61_combout ),
	.datad(\seg_data[6][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[6][0]~12_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[6][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[6][3] .lut_mask = "6faf";
defparam \seg_data[6][3] .operation_mode = "normal";
defparam \seg_data[6][3] .output_mode = "reg_only";
defparam \seg_data[6][3] .register_cascade_mode = "off";
defparam \seg_data[6][3] .sum_lutc_input = "datac";
defparam \seg_data[6][3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N3
maxii_lcell \Equal19~0 (
// Equation(s):
// \Equal19~0_combout  = (\seg_data[6][3]~regout ) # ((\seg_data[6][1]~regout ) # ((\seg_data[6][0]~regout ) # (\seg_data[6][2]~regout )))

	.clk(gnd),
	.dataa(\seg_data[6][3]~regout ),
	.datab(\seg_data[6][1]~regout ),
	.datac(\seg_data[6][0]~regout ),
	.datad(\seg_data[6][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal19~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal19~0 .lut_mask = "fffe";
defparam \Equal19~0 .operation_mode = "normal";
defparam \Equal19~0 .output_mode = "comb_only";
defparam \Equal19~0 .register_cascade_mode = "off";
defparam \Equal19~0 .sum_lutc_input = "datac";
defparam \Equal19~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N3
maxii_lcell \seg_data[7][0]~20 (
// Equation(s):
// \seg_data[7][0]~20_combout  = (!\rst~combout  & (((!\Equal19~0_combout  & \seg_data[6][0]~11_combout )) # (!\onride~combout )))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\rst~combout ),
	.datac(\Equal19~0_combout ),
	.datad(\seg_data[6][0]~11_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[7][0]~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[7][0]~20 .lut_mask = "1311";
defparam \seg_data[7][0]~20 .operation_mode = "normal";
defparam \seg_data[7][0]~20 .output_mode = "comb_only";
defparam \seg_data[7][0]~20 .register_cascade_mode = "off";
defparam \seg_data[7][0]~20 .sum_lutc_input = "datac";
defparam \seg_data[7][0]~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y7_N4
maxii_lcell \seg_data[7][0] (
// Equation(s):
// \seg_data[7][0]~regout  = DFFEAS((\seg_data[7][0]~regout  & (((!\seg_data[7][0]~20_combout ) # (!\always1~0_combout )))) # (!\seg_data[7][0]~regout  & (((\seg_data[7][0]~20_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[7][0]~regout ),
	.datab(vcc),
	.datac(\always1~0_combout ),
	.datad(\seg_data[7][0]~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[7][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[7][0] .lut_mask = "5faa";
defparam \seg_data[7][0] .operation_mode = "normal";
defparam \seg_data[7][0] .output_mode = "reg_only";
defparam \seg_data[7][0] .register_cascade_mode = "off";
defparam \seg_data[7][0] .sum_lutc_input = "datac";
defparam \seg_data[7][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y7_N3
maxii_lcell \Equal8~0 (
// Equation(s):
// \Equal8~0_combout  = (\seg_data[7][0]~regout  & (\seg_data[7][3]~regout  & (!\seg_data[7][1]~regout  & !\seg_data[7][2]~regout )))

	.clk(gnd),
	.dataa(\seg_data[7][0]~regout ),
	.datab(\seg_data[7][3]~regout ),
	.datac(\seg_data[7][1]~regout ),
	.datad(\seg_data[7][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal8~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal8~0 .lut_mask = "0008";
defparam \Equal8~0 .operation_mode = "normal";
defparam \Equal8~0 .output_mode = "comb_only";
defparam \Equal8~0 .register_cascade_mode = "off";
defparam \Equal8~0 .sum_lutc_input = "datac";
defparam \Equal8~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N8
maxii_lcell \Add24~0 (
// Equation(s):
// \Add24~0_combout  = ((!\seg_data[1][0]~regout  & ((\seg_data[1][1]~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seg_data[1][0]~regout ),
	.datac(vcc),
	.datad(\seg_data[1][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add24~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add24~0 .lut_mask = "3300";
defparam \Add24~0 .operation_mode = "normal";
defparam \Add24~0 .output_mode = "comb_only";
defparam \Add24~0 .register_cascade_mode = "off";
defparam \Add24~0 .sum_lutc_input = "datac";
defparam \Add24~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N0
maxii_lcell \mile_mcnt[9]~20 (
// Equation(s):
// \mile_mcnt[9]~20_combout  = ((!\rst~combout  & ((\always1~0_combout ) # (!\onride~combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\onride~combout ),
	.datac(\rst~combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mile_mcnt[9]~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_mcnt[9]~20 .lut_mask = "0f03";
defparam \mile_mcnt[9]~20 .operation_mode = "normal";
defparam \mile_mcnt[9]~20 .output_mode = "comb_only";
defparam \mile_mcnt[9]~20 .register_cascade_mode = "off";
defparam \mile_mcnt[9]~20 .sum_lutc_input = "datac";
defparam \mile_mcnt[9]~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y5_N3
maxii_lcell \mile_mcnt~23 (
// Equation(s):
// \mile_mcnt~23_combout  = ((\wait_status~regout  & ((\always1~0_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\wait_status~regout ),
	.datac(vcc),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mile_mcnt~23_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_mcnt~23 .lut_mask = "cc00";
defparam \mile_mcnt~23 .operation_mode = "normal";
defparam \mile_mcnt~23 .output_mode = "comb_only";
defparam \mile_mcnt~23 .register_cascade_mode = "off";
defparam \mile_mcnt~23 .sum_lutc_input = "datac";
defparam \mile_mcnt~23 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y5_N9
maxii_lcell \wait_cnt[3]~2 (
// Equation(s):
// \wait_cnt[3]~2_combout  = (!\rst~combout  & (((!\Equal9~2_combout  & \mile_mcnt~23_combout )) # (!\onride~combout )))

	.clk(gnd),
	.dataa(\rst~combout ),
	.datab(\onride~combout ),
	.datac(\Equal9~2_combout ),
	.datad(\mile_mcnt~23_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\wait_cnt[3]~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_cnt[3]~2 .lut_mask = "1511";
defparam \wait_cnt[3]~2 .operation_mode = "normal";
defparam \wait_cnt[3]~2 .output_mode = "comb_only";
defparam \wait_cnt[3]~2 .register_cascade_mode = "off";
defparam \wait_cnt[3]~2 .sum_lutc_input = "datac";
defparam \wait_cnt[3]~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y8_N2
maxii_lcell \wait_cnt[0] (
// Equation(s):
// wait_cnt[0] = DFFEAS(((\always1~0_combout  & ((!\wait_cnt[1]~0_combout ) # (!wait_cnt[0])))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_cnt[3]~2_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(wait_cnt[0]),
	.datac(\wait_cnt[1]~0_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\wait_cnt[3]~2_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_cnt[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_cnt[0] .lut_mask = "3f00";
defparam \wait_cnt[0] .operation_mode = "normal";
defparam \wait_cnt[0] .output_mode = "reg_only";
defparam \wait_cnt[0] .register_cascade_mode = "off";
defparam \wait_cnt[0] .sum_lutc_input = "datac";
defparam \wait_cnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y8_N6
maxii_lcell \wait_cnt[1] (
// Equation(s):
// wait_cnt[1] = DFFEAS((\wait_cnt[1]~0_combout  & (\always1~0_combout  & (wait_cnt[1] $ (wait_cnt[0])))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_cnt[3]~2_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(wait_cnt[1]),
	.datab(wait_cnt[0]),
	.datac(\wait_cnt[1]~0_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\wait_cnt[3]~2_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_cnt[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_cnt[1] .lut_mask = "6000";
defparam \wait_cnt[1] .operation_mode = "normal";
defparam \wait_cnt[1] .output_mode = "reg_only";
defparam \wait_cnt[1] .register_cascade_mode = "off";
defparam \wait_cnt[1] .sum_lutc_input = "datac";
defparam \wait_cnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y8_N5
maxii_lcell \Add14~0 (
// Equation(s):
// \Add14~0_combout  = (((wait_cnt[1] & wait_cnt[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(wait_cnt[1]),
	.datad(wait_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add14~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add14~0 .lut_mask = "f000";
defparam \Add14~0 .operation_mode = "normal";
defparam \Add14~0 .output_mode = "comb_only";
defparam \Add14~0 .register_cascade_mode = "off";
defparam \Add14~0 .sum_lutc_input = "datac";
defparam \Add14~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y8_N9
maxii_lcell \wait_cnt[2] (
// Equation(s):
// wait_cnt[2] = DFFEAS((\always1~0_combout  & ((\Add14~0_combout  $ (wait_cnt[2])) # (!\wait_cnt[1]~0_combout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_cnt[3]~2_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\Add14~0_combout ),
	.datab(wait_cnt[2]),
	.datac(\wait_cnt[1]~0_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\wait_cnt[3]~2_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_cnt[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_cnt[2] .lut_mask = "6f00";
defparam \wait_cnt[2] .operation_mode = "normal";
defparam \wait_cnt[2] .output_mode = "reg_only";
defparam \wait_cnt[2] .register_cascade_mode = "off";
defparam \wait_cnt[2] .sum_lutc_input = "datac";
defparam \wait_cnt[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y8_N7
maxii_lcell \wait_cnt[1]~0 (
// Equation(s):
// \wait_cnt[1]~0_combout  = (wait_cnt[3]) # (((!wait_cnt[2]) # (!wait_cnt[1])) # (!wait_cnt[0]))

	.clk(gnd),
	.dataa(wait_cnt[3]),
	.datab(wait_cnt[0]),
	.datac(wait_cnt[1]),
	.datad(wait_cnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\wait_cnt[1]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_cnt[1]~0 .lut_mask = "bfff";
defparam \wait_cnt[1]~0 .operation_mode = "normal";
defparam \wait_cnt[1]~0 .output_mode = "comb_only";
defparam \wait_cnt[1]~0 .register_cascade_mode = "off";
defparam \wait_cnt[1]~0 .sum_lutc_input = "datac";
defparam \wait_cnt[1]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y8_N4
maxii_lcell \Add14~1 (
// Equation(s):
// \Add14~1_combout  = wait_cnt[3] $ (((wait_cnt[0] & (wait_cnt[1] & wait_cnt[2]))))

	.clk(gnd),
	.dataa(wait_cnt[3]),
	.datab(wait_cnt[0]),
	.datac(wait_cnt[1]),
	.datad(wait_cnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add14~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add14~1 .lut_mask = "6aaa";
defparam \Add14~1 .operation_mode = "normal";
defparam \Add14~1 .output_mode = "comb_only";
defparam \Add14~1 .register_cascade_mode = "off";
defparam \Add14~1 .sum_lutc_input = "datac";
defparam \Add14~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y8_N8
maxii_lcell \wait_cnt[3] (
// Equation(s):
// wait_cnt[3] = DFFEAS(((\wait_cnt[1]~0_combout  & (\Add14~1_combout  & \always1~0_combout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \wait_cnt[3]~2_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(\wait_cnt[1]~0_combout ),
	.datac(\Add14~1_combout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\wait_cnt[3]~2_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(wait_cnt[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \wait_cnt[3] .lut_mask = "c000";
defparam \wait_cnt[3] .operation_mode = "normal";
defparam \wait_cnt[3] .output_mode = "reg_only";
defparam \wait_cnt[3] .register_cascade_mode = "off";
defparam \wait_cnt[3] .sum_lutc_input = "datac";
defparam \wait_cnt[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y8_N0
maxii_lcell \Equal15~0 (
// Equation(s):
// \Equal15~0_combout  = (!wait_cnt[3] & (wait_cnt[2] & (!wait_cnt[1] & wait_cnt[0])))

	.clk(gnd),
	.dataa(wait_cnt[3]),
	.datab(wait_cnt[2]),
	.datac(wait_cnt[1]),
	.datad(wait_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal15~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal15~0 .lut_mask = "0400";
defparam \Equal15~0 .operation_mode = "normal";
defparam \Equal15~0 .output_mode = "comb_only";
defparam \Equal15~0 .register_cascade_mode = "off";
defparam \Equal15~0 .sum_lutc_input = "datac";
defparam \Equal15~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y9_N0
maxii_lcell \seg_data~25 (
// Equation(s):
// \seg_data~25_combout  = (\Equal15~0_combout  & (\wait_status~regout  & (!\Equal9~2_combout  & !\always1~6_combout )))

	.clk(gnd),
	.dataa(\Equal15~0_combout ),
	.datab(\wait_status~regout ),
	.datac(\Equal9~2_combout ),
	.datad(\always1~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~25_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~25 .lut_mask = "0008";
defparam \seg_data~25 .operation_mode = "normal";
defparam \seg_data~25 .output_mode = "comb_only";
defparam \seg_data~25 .register_cascade_mode = "off";
defparam \seg_data~25 .sum_lutc_input = "datac";
defparam \seg_data~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N9
maxii_lcell \Myuan[0]~0 (
// Equation(s):
// \Myuan[0]~0_combout  = ((\double~combout  & (!sub_cnt[1] & !sub_cnt[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\double~combout ),
	.datac(sub_cnt[1]),
	.datad(sub_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Myuan[0]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Myuan[0]~0 .lut_mask = "000c";
defparam \Myuan[0]~0 .operation_mode = "normal";
defparam \Myuan[0]~0 .output_mode = "comb_only";
defparam \Myuan[0]~0 .register_cascade_mode = "off";
defparam \Myuan[0]~0 .sum_lutc_input = "datac";
defparam \Myuan[0]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N3
maxii_lcell \seg_data~49 (
// Equation(s):
// \seg_data~49_combout  = (!\double~combout  & (\Equal8~0_combout  & (\night~combout  & \always1~13_combout )))

	.clk(gnd),
	.dataa(\double~combout ),
	.datab(\Equal8~0_combout ),
	.datac(\night~combout ),
	.datad(\always1~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~49_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~49 .lut_mask = "4000";
defparam \seg_data~49 .operation_mode = "normal";
defparam \seg_data~49 .output_mode = "comb_only";
defparam \seg_data~49 .register_cascade_mode = "off";
defparam \seg_data~49 .sum_lutc_input = "datac";
defparam \seg_data~49 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N1
maxii_lcell \mile_cnt[6]~14 (
// Equation(s):
// \mile_cnt[6]~14_combout  = (\mile_speed[2]~0_combout  & ((mile_speed[2] & ((!\LessThan6~0_combout ) # (!\mile_v~combout [2]))) # (!mile_speed[2] & (!\mile_v~combout [2] & !\LessThan6~0_combout ))))

	.clk(gnd),
	.dataa(mile_speed[2]),
	.datab(\mile_v~combout [2]),
	.datac(\mile_speed[2]~0_combout ),
	.datad(\LessThan6~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mile_cnt[6]~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_cnt[6]~14 .lut_mask = "20b0";
defparam \mile_cnt[6]~14 .operation_mode = "normal";
defparam \mile_cnt[6]~14 .output_mode = "comb_only";
defparam \mile_cnt[6]~14 .register_cascade_mode = "off";
defparam \mile_cnt[6]~14 .sum_lutc_input = "datac";
defparam \mile_cnt[6]~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y5_N2
maxii_lcell \mile_cnt[6]~15 (
// Equation(s):
// \mile_cnt[6]~15_combout  = (!\rst~combout  & (((\always1~0_combout  & \mile_cnt[6]~14_combout )) # (!\onride~combout )))

	.clk(gnd),
	.dataa(\always1~0_combout ),
	.datab(\onride~combout ),
	.datac(\rst~combout ),
	.datad(\mile_cnt[6]~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mile_cnt[6]~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_cnt[6]~15 .lut_mask = "0b03";
defparam \mile_cnt[6]~15 .operation_mode = "normal";
defparam \mile_cnt[6]~15 .output_mode = "comb_only";
defparam \mile_cnt[6]~15 .register_cascade_mode = "off";
defparam \mile_cnt[6]~15 .sum_lutc_input = "datac";
defparam \mile_cnt[6]~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y9_N1
maxii_lcell \mile_cnt[0] (
// Equation(s):
// mile_cnt[0] = DFFEAS(((!mile_cnt[0])), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_cnt[6]~15_combout , , , !\always1~0_combout , )
// \mile_cnt[0]~5  = CARRY(((mile_cnt[0])))
// \mile_cnt[0]~5COUT1_17  = CARRY(((mile_cnt[0])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(mile_cnt[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\always1~0_combout ),
	.sload(gnd),
	.ena(\mile_cnt[6]~15_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_cnt[0]),
	.cout(),
	.cout0(\mile_cnt[0]~5 ),
	.cout1(\mile_cnt[0]~5COUT1_17 ));
// synopsys translate_off
defparam \mile_cnt[0] .lut_mask = "33cc";
defparam \mile_cnt[0] .operation_mode = "arithmetic";
defparam \mile_cnt[0] .output_mode = "reg_only";
defparam \mile_cnt[0] .register_cascade_mode = "off";
defparam \mile_cnt[0] .sum_lutc_input = "datac";
defparam \mile_cnt[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y9_N2
maxii_lcell \mile_cnt[1] (
// Equation(s):
// mile_cnt[1] = DFFEAS((mile_cnt[1] $ ((\mile_cnt[0]~5 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_cnt[6]~15_combout , , , !\always1~0_combout , )
// \mile_cnt[1]~7  = CARRY(((!\mile_cnt[0]~5 ) # (!mile_cnt[1])))
// \mile_cnt[1]~7COUT1_18  = CARRY(((!\mile_cnt[0]~5COUT1_17 ) # (!mile_cnt[1])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(mile_cnt[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\always1~0_combout ),
	.sload(gnd),
	.ena(\mile_cnt[6]~15_combout ),
	.cin(gnd),
	.cin0(\mile_cnt[0]~5 ),
	.cin1(\mile_cnt[0]~5COUT1_17 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_cnt[1]),
	.cout(),
	.cout0(\mile_cnt[1]~7 ),
	.cout1(\mile_cnt[1]~7COUT1_18 ));
// synopsys translate_off
defparam \mile_cnt[1] .cin0_used = "true";
defparam \mile_cnt[1] .cin1_used = "true";
defparam \mile_cnt[1] .lut_mask = "3c3f";
defparam \mile_cnt[1] .operation_mode = "arithmetic";
defparam \mile_cnt[1] .output_mode = "reg_only";
defparam \mile_cnt[1] .register_cascade_mode = "off";
defparam \mile_cnt[1] .sum_lutc_input = "cin";
defparam \mile_cnt[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y9_N3
maxii_lcell \mile_cnt[2] (
// Equation(s):
// mile_cnt[2] = DFFEAS(mile_cnt[2] $ ((((!\mile_cnt[1]~7 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_cnt[6]~15_combout , , , !\always1~0_combout , )
// \mile_cnt[2]~1  = CARRY((mile_cnt[2] & ((!\mile_cnt[1]~7 ))))
// \mile_cnt[2]~1COUT1_19  = CARRY((mile_cnt[2] & ((!\mile_cnt[1]~7COUT1_18 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_cnt[2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\always1~0_combout ),
	.sload(gnd),
	.ena(\mile_cnt[6]~15_combout ),
	.cin(gnd),
	.cin0(\mile_cnt[1]~7 ),
	.cin1(\mile_cnt[1]~7COUT1_18 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_cnt[2]),
	.cout(),
	.cout0(\mile_cnt[2]~1 ),
	.cout1(\mile_cnt[2]~1COUT1_19 ));
// synopsys translate_off
defparam \mile_cnt[2] .cin0_used = "true";
defparam \mile_cnt[2] .cin1_used = "true";
defparam \mile_cnt[2] .lut_mask = "a50a";
defparam \mile_cnt[2] .operation_mode = "arithmetic";
defparam \mile_cnt[2] .output_mode = "reg_only";
defparam \mile_cnt[2] .register_cascade_mode = "off";
defparam \mile_cnt[2] .sum_lutc_input = "cin";
defparam \mile_cnt[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y9_N4
maxii_lcell \mile_cnt[3] (
// Equation(s):
// mile_cnt[3] = DFFEAS(mile_cnt[3] $ ((((\mile_cnt[2]~1 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_cnt[6]~15_combout , , , !\always1~0_combout , )
// \mile_cnt[3]~3  = CARRY(((!\mile_cnt[2]~1COUT1_19 )) # (!mile_cnt[3]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_cnt[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\always1~0_combout ),
	.sload(gnd),
	.ena(\mile_cnt[6]~15_combout ),
	.cin(gnd),
	.cin0(\mile_cnt[2]~1 ),
	.cin1(\mile_cnt[2]~1COUT1_19 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_cnt[3]),
	.cout(\mile_cnt[3]~3 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_cnt[3] .cin0_used = "true";
defparam \mile_cnt[3] .cin1_used = "true";
defparam \mile_cnt[3] .lut_mask = "5a5f";
defparam \mile_cnt[3] .operation_mode = "arithmetic";
defparam \mile_cnt[3] .output_mode = "reg_only";
defparam \mile_cnt[3] .register_cascade_mode = "off";
defparam \mile_cnt[3] .sum_lutc_input = "cin";
defparam \mile_cnt[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y9_N5
maxii_lcell \mile_cnt[4] (
// Equation(s):
// mile_cnt[4] = DFFEAS(mile_cnt[4] $ ((((!\mile_cnt[3]~3 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_cnt[6]~15_combout , , , !\always1~0_combout , )
// \mile_cnt[4]~9  = CARRY((mile_cnt[4] & ((!\mile_cnt[3]~3 ))))
// \mile_cnt[4]~9COUT1_20  = CARRY((mile_cnt[4] & ((!\mile_cnt[3]~3 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_cnt[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\always1~0_combout ),
	.sload(gnd),
	.ena(\mile_cnt[6]~15_combout ),
	.cin(\mile_cnt[3]~3 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_cnt[4]),
	.cout(),
	.cout0(\mile_cnt[4]~9 ),
	.cout1(\mile_cnt[4]~9COUT1_20 ));
// synopsys translate_off
defparam \mile_cnt[4] .cin_used = "true";
defparam \mile_cnt[4] .lut_mask = "a50a";
defparam \mile_cnt[4] .operation_mode = "arithmetic";
defparam \mile_cnt[4] .output_mode = "reg_only";
defparam \mile_cnt[4] .register_cascade_mode = "off";
defparam \mile_cnt[4] .sum_lutc_input = "cin";
defparam \mile_cnt[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y9_N6
maxii_lcell \mile_cnt[5] (
// Equation(s):
// mile_cnt[5] = DFFEAS(mile_cnt[5] $ (((((!\mile_cnt[3]~3  & \mile_cnt[4]~9 ) # (\mile_cnt[3]~3  & \mile_cnt[4]~9COUT1_20 ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_cnt[6]~15_combout , , , !\always1~0_combout , )
// \mile_cnt[5]~11  = CARRY(((!\mile_cnt[4]~9 )) # (!mile_cnt[5]))
// \mile_cnt[5]~11COUT1_21  = CARRY(((!\mile_cnt[4]~9COUT1_20 )) # (!mile_cnt[5]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(mile_cnt[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\always1~0_combout ),
	.sload(gnd),
	.ena(\mile_cnt[6]~15_combout ),
	.cin(\mile_cnt[3]~3 ),
	.cin0(\mile_cnt[4]~9 ),
	.cin1(\mile_cnt[4]~9COUT1_20 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_cnt[5]),
	.cout(),
	.cout0(\mile_cnt[5]~11 ),
	.cout1(\mile_cnt[5]~11COUT1_21 ));
// synopsys translate_off
defparam \mile_cnt[5] .cin0_used = "true";
defparam \mile_cnt[5] .cin1_used = "true";
defparam \mile_cnt[5] .cin_used = "true";
defparam \mile_cnt[5] .lut_mask = "5a5f";
defparam \mile_cnt[5] .operation_mode = "arithmetic";
defparam \mile_cnt[5] .output_mode = "reg_only";
defparam \mile_cnt[5] .register_cascade_mode = "off";
defparam \mile_cnt[5] .sum_lutc_input = "cin";
defparam \mile_cnt[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y9_N7
maxii_lcell \mile_cnt[6] (
// Equation(s):
// mile_cnt[6] = DFFEAS((mile_cnt[6] $ ((!(!\mile_cnt[3]~3  & \mile_cnt[5]~11 ) # (\mile_cnt[3]~3  & \mile_cnt[5]~11COUT1_21 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \mile_cnt[6]~15_combout , , , !\always1~0_combout , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(mile_cnt[6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\always1~0_combout ),
	.sload(gnd),
	.ena(\mile_cnt[6]~15_combout ),
	.cin(\mile_cnt[3]~3 ),
	.cin0(\mile_cnt[5]~11 ),
	.cin1(\mile_cnt[5]~11COUT1_21 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(mile_cnt[6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mile_cnt[6] .cin0_used = "true";
defparam \mile_cnt[6] .cin1_used = "true";
defparam \mile_cnt[6] .cin_used = "true";
defparam \mile_cnt[6] .lut_mask = "c3c3";
defparam \mile_cnt[6] .operation_mode = "normal";
defparam \mile_cnt[6] .output_mode = "reg_only";
defparam \mile_cnt[6] .register_cascade_mode = "off";
defparam \mile_cnt[6] .sum_lutc_input = "cin";
defparam \mile_cnt[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y9_N8
maxii_lcell \LessThan7~0 (
// Equation(s):
// \LessThan7~0_combout  = (mile_cnt[2]) # ((mile_cnt[3]) # ((mile_cnt[1] & mile_cnt[0])))

	.clk(gnd),
	.dataa(mile_cnt[2]),
	.datab(mile_cnt[1]),
	.datac(mile_cnt[3]),
	.datad(mile_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan7~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan7~0 .lut_mask = "fefa";
defparam \LessThan7~0 .operation_mode = "normal";
defparam \LessThan7~0 .output_mode = "comb_only";
defparam \LessThan7~0 .register_cascade_mode = "off";
defparam \LessThan7~0 .sum_lutc_input = "datac";
defparam \LessThan7~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y9_N9
maxii_lcell \LessThan7~1 (
// Equation(s):
// \LessThan7~1_combout  = (mile_cnt[5]) # ((mile_cnt[6]) # ((mile_cnt[4]) # (\LessThan7~0_combout )))

	.clk(gnd),
	.dataa(mile_cnt[5]),
	.datab(mile_cnt[6]),
	.datac(mile_cnt[4]),
	.datad(\LessThan7~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan7~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan7~1 .lut_mask = "fffe";
defparam \LessThan7~1 .operation_mode = "normal";
defparam \LessThan7~1 .output_mode = "comb_only";
defparam \LessThan7~1 .register_cascade_mode = "off";
defparam \LessThan7~1 .sum_lutc_input = "datac";
defparam \LessThan7~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N7
maxii_lcell \seg_data~24 (
// Equation(s):
// \seg_data~24_combout  = (\LessThan7~1_combout  & (!\LessThan6~1_combout  & (\mile_speed[2]~0_combout  & !\always1~2_combout )))

	.clk(gnd),
	.dataa(\LessThan7~1_combout ),
	.datab(\LessThan6~1_combout ),
	.datac(\mile_speed[2]~0_combout ),
	.datad(\always1~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~24_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~24 .lut_mask = "0020";
defparam \seg_data~24 .operation_mode = "normal";
defparam \seg_data~24 .output_mode = "comb_only";
defparam \seg_data~24 .register_cascade_mode = "off";
defparam \seg_data~24 .sum_lutc_input = "datac";
defparam \seg_data~24 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N5
maxii_lcell \seg_data~34 (
// Equation(s):
// \seg_data~34_combout  = (((\seg_data~24_combout ) # (\seg_data~25_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data~24_combout ),
	.datad(\seg_data~25_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~34_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~34 .lut_mask = "fff0";
defparam \seg_data~34 .operation_mode = "normal";
defparam \seg_data~34 .output_mode = "comb_only";
defparam \seg_data~34 .register_cascade_mode = "off";
defparam \seg_data~34 .sum_lutc_input = "datac";
defparam \seg_data~34 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N8
maxii_lcell \seg_data[0][1]~58 (
// Equation(s):
// \seg_data[0][1]~58_combout  = ((\always1~0_combout  & ((\seg_data~25_combout ) # (\seg_data~24_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seg_data~25_combout ),
	.datac(\always1~0_combout ),
	.datad(\seg_data~24_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[0][1]~58_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[0][1]~58 .lut_mask = "f0c0";
defparam \seg_data[0][1]~58 .operation_mode = "normal";
defparam \seg_data[0][1]~58 .output_mode = "comb_only";
defparam \seg_data[0][1]~58 .register_cascade_mode = "off";
defparam \seg_data[0][1]~58 .sum_lutc_input = "datac";
defparam \seg_data[0][1]~58 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N8
maxii_lcell \seg_data~59 (
// Equation(s):
// \seg_data~59_combout  = (\night~combout  & (\Equal8~0_combout  & (\always1~0_combout  & \always1~13_combout )))

	.clk(gnd),
	.dataa(\night~combout ),
	.datab(\Equal8~0_combout ),
	.datac(\always1~0_combout ),
	.datad(\always1~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~59_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~59 .lut_mask = "8000";
defparam \seg_data~59 .operation_mode = "normal";
defparam \seg_data~59 .output_mode = "comb_only";
defparam \seg_data~59 .register_cascade_mode = "off";
defparam \seg_data~59 .sum_lutc_input = "datac";
defparam \seg_data~59 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N9
maxii_lcell \Add19~1 (
// Equation(s):
// \Add19~1_combout  = (night_cnt[1] $ (((!\night~combout  & \Myuan[0]~0_combout ))))

	.clk(gnd),
	.dataa(\night~combout ),
	.datab(vcc),
	.datac(\Myuan[0]~0_combout ),
	.datad(night_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add19~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add19~1 .lut_mask = "af50";
defparam \Add19~1 .operation_mode = "normal";
defparam \Add19~1 .output_mode = "comb_only";
defparam \Add19~1 .register_cascade_mode = "off";
defparam \Add19~1 .sum_lutc_input = "datac";
defparam \Add19~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N5
maxii_lcell \Add19~0 (
// Equation(s):
// \Add19~0_combout  = night_cnt[2] $ (((\night~combout ) # ((\Myuan[0]~0_combout  & night_cnt[1]))))

	.clk(gnd),
	.dataa(\night~combout ),
	.datab(\Myuan[0]~0_combout ),
	.datac(night_cnt[1]),
	.datad(night_cnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add19~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add19~0 .lut_mask = "15ea";
defparam \Add19~0 .operation_mode = "normal";
defparam \Add19~0 .output_mode = "comb_only";
defparam \Add19~0 .register_cascade_mode = "off";
defparam \Add19~0 .sum_lutc_input = "datac";
defparam \Add19~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N7
maxii_lcell \seg_data~35 (
// Equation(s):
// \seg_data~35_combout  = (\always1~0_combout  & (((!\always1~13_combout ) # (!\night~combout )) # (!\Equal8~0_combout )))

	.clk(gnd),
	.dataa(\Equal8~0_combout ),
	.datab(\night~combout ),
	.datac(\always1~0_combout ),
	.datad(\always1~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~35_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~35 .lut_mask = "70f0";
defparam \seg_data~35 .operation_mode = "normal";
defparam \seg_data~35 .output_mode = "comb_only";
defparam \seg_data~35 .register_cascade_mode = "off";
defparam \seg_data~35 .sum_lutc_input = "datac";
defparam \seg_data~35 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N1
maxii_lcell \Wjiao[1]~1 (
// Equation(s):
// \Wjiao[1]~1_combout  = (\night~combout ) # ((\double~combout  & (!sub_cnt[0] & !sub_cnt[1])))

	.clk(gnd),
	.dataa(\double~combout ),
	.datab(\night~combout ),
	.datac(sub_cnt[0]),
	.datad(sub_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Wjiao[1]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Wjiao[1]~1 .lut_mask = "ccce";
defparam \Wjiao[1]~1 .operation_mode = "normal";
defparam \Wjiao[1]~1 .output_mode = "comb_only";
defparam \Wjiao[1]~1 .register_cascade_mode = "off";
defparam \Wjiao[1]~1 .sum_lutc_input = "datac";
defparam \Wjiao[1]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N2
maxii_lcell \Wjiao[0]~0 (
// Equation(s):
// \Wjiao[0]~0_combout  = (\double~combout  & (\night~combout  & (!sub_cnt[0] & !sub_cnt[1])))

	.clk(gnd),
	.dataa(\double~combout ),
	.datab(\night~combout ),
	.datac(sub_cnt[0]),
	.datad(sub_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Wjiao[0]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Wjiao[0]~0 .lut_mask = "0008";
defparam \Wjiao[0]~0 .operation_mode = "normal";
defparam \Wjiao[0]~0 .output_mode = "comb_only";
defparam \Wjiao[0]~0 .register_cascade_mode = "off";
defparam \Wjiao[0]~0 .sum_lutc_input = "datac";
defparam \Wjiao[0]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N6
maxii_lcell \Add9~5 (
// Equation(s):
// \Add9~5_combout  = night_cnt[0] $ ((\Wjiao[0]~0_combout ))
// \Add9~7  = CARRY((night_cnt[0] & (\Wjiao[0]~0_combout )))
// \Add9~7COUT1_21  = CARRY((night_cnt[0] & (\Wjiao[0]~0_combout )))

	.clk(gnd),
	.dataa(night_cnt[0]),
	.datab(\Wjiao[0]~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add9~5_combout ),
	.regout(),
	.cout(),
	.cout0(\Add9~7 ),
	.cout1(\Add9~7COUT1_21 ));
// synopsys translate_off
defparam \Add9~5 .lut_mask = "6688";
defparam \Add9~5 .operation_mode = "arithmetic";
defparam \Add9~5 .output_mode = "comb_only";
defparam \Add9~5 .register_cascade_mode = "off";
defparam \Add9~5 .sum_lutc_input = "datac";
defparam \Add9~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N9
maxii_lcell \night_cnt[0]~7 (
// Equation(s):
// \night_cnt[0]~7_combout  = ((\mile_mcnt~23_combout  & ((\seg_data~24_combout ) # (\seg_data~25_combout )))) # (!\onride~combout )

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\seg_data~24_combout ),
	.datac(\mile_mcnt~23_combout ),
	.datad(\seg_data~25_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt[0]~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt[0]~7 .lut_mask = "f5d5";
defparam \night_cnt[0]~7 .operation_mode = "normal";
defparam \night_cnt[0]~7 .output_mode = "comb_only";
defparam \night_cnt[0]~7 .register_cascade_mode = "off";
defparam \night_cnt[0]~7 .sum_lutc_input = "datac";
defparam \night_cnt[0]~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N6
maxii_lcell \night_cnt[0]~8 (
// Equation(s):
// \night_cnt[0]~8_combout  = (\Equal8~0_combout  & (((\always1~0_combout ))))

	.clk(gnd),
	.dataa(\Equal8~0_combout ),
	.datab(vcc),
	.datac(\always1~0_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt[0]~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt[0]~8 .lut_mask = "a0a0";
defparam \night_cnt[0]~8 .operation_mode = "normal";
defparam \night_cnt[0]~8 .output_mode = "comb_only";
defparam \night_cnt[0]~8 .register_cascade_mode = "off";
defparam \night_cnt[0]~8 .sum_lutc_input = "datac";
defparam \night_cnt[0]~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N4
maxii_lcell \night_cnt[0]~9 (
// Equation(s):
// \night_cnt[0]~9_combout  = (\night_cnt[0]~8_combout  & (\always1~13_combout  & ((\night~combout ) # (\double~combout ))))

	.clk(gnd),
	.dataa(\night~combout ),
	.datab(\double~combout ),
	.datac(\night_cnt[0]~8_combout ),
	.datad(\always1~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt[0]~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt[0]~9 .lut_mask = "e000";
defparam \night_cnt[0]~9 .operation_mode = "normal";
defparam \night_cnt[0]~9 .output_mode = "comb_only";
defparam \night_cnt[0]~9 .register_cascade_mode = "off";
defparam \night_cnt[0]~9 .sum_lutc_input = "datac";
defparam \night_cnt[0]~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N5
maxii_lcell \night_cnt[0]~10 (
// Equation(s):
// \night_cnt[0]~10_combout  = (!\rst~combout  & ((\night_cnt[0]~7_combout ) # ((!\seg_data~34_combout  & \night_cnt[0]~9_combout ))))

	.clk(gnd),
	.dataa(\seg_data~34_combout ),
	.datab(\rst~combout ),
	.datac(\night_cnt[0]~7_combout ),
	.datad(\night_cnt[0]~9_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt[0]~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt[0]~10 .lut_mask = "3130";
defparam \night_cnt[0]~10 .operation_mode = "normal";
defparam \night_cnt[0]~10 .output_mode = "comb_only";
defparam \night_cnt[0]~10 .register_cascade_mode = "off";
defparam \night_cnt[0]~10 .sum_lutc_input = "datac";
defparam \night_cnt[0]~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N1
maxii_lcell \night_cnt[0] (
// Equation(s):
// night_cnt[0] = DFFEAS((\night_cnt[0]~10_combout  & (((\seg_data[0][1]~58_combout  & \Add9~5_combout )))) # (!\night_cnt[0]~10_combout  & (night_cnt[0])), GLOBAL(\divide1000|clk_p~regout ), VCC, , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(night_cnt[0]),
	.datab(\seg_data[0][1]~58_combout ),
	.datac(\Add9~5_combout ),
	.datad(\night_cnt[0]~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(night_cnt[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt[0] .lut_mask = "c0aa";
defparam \night_cnt[0] .operation_mode = "normal";
defparam \night_cnt[0] .output_mode = "reg_only";
defparam \night_cnt[0] .register_cascade_mode = "off";
defparam \night_cnt[0] .sum_lutc_input = "datac";
defparam \night_cnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N7
maxii_lcell \Add9~10 (
// Equation(s):
// \Add9~10_combout  = night_cnt[1] $ (\Wjiao[1]~1_combout  $ ((\Add9~7 )))
// \Add9~12  = CARRY((night_cnt[1] & (!\Wjiao[1]~1_combout  & !\Add9~7 )) # (!night_cnt[1] & ((!\Add9~7 ) # (!\Wjiao[1]~1_combout ))))
// \Add9~12COUT1_22  = CARRY((night_cnt[1] & (!\Wjiao[1]~1_combout  & !\Add9~7COUT1_21 )) # (!night_cnt[1] & ((!\Add9~7COUT1_21 ) # (!\Wjiao[1]~1_combout ))))

	.clk(gnd),
	.dataa(night_cnt[1]),
	.datab(\Wjiao[1]~1_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add9~7 ),
	.cin1(\Add9~7COUT1_21 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add9~10_combout ),
	.regout(),
	.cout(),
	.cout0(\Add9~12 ),
	.cout1(\Add9~12COUT1_22 ));
// synopsys translate_off
defparam \Add9~10 .cin0_used = "true";
defparam \Add9~10 .cin1_used = "true";
defparam \Add9~10 .lut_mask = "9617";
defparam \Add9~10 .operation_mode = "arithmetic";
defparam \Add9~10 .output_mode = "comb_only";
defparam \Add9~10 .register_cascade_mode = "off";
defparam \Add9~10 .sum_lutc_input = "cin";
defparam \Add9~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N8
maxii_lcell \Add9~15 (
// Equation(s):
// \Add9~15_combout  = night_cnt[2] $ (\Myuan[0]~0_combout  $ ((!\Add9~12 )))
// \Add9~17  = CARRY((night_cnt[2] & ((\Myuan[0]~0_combout ) # (!\Add9~12 ))) # (!night_cnt[2] & (\Myuan[0]~0_combout  & !\Add9~12 )))
// \Add9~17COUT1_23  = CARRY((night_cnt[2] & ((\Myuan[0]~0_combout ) # (!\Add9~12COUT1_22 ))) # (!night_cnt[2] & (\Myuan[0]~0_combout  & !\Add9~12COUT1_22 )))

	.clk(gnd),
	.dataa(night_cnt[2]),
	.datab(\Myuan[0]~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add9~12 ),
	.cin1(\Add9~12COUT1_22 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add9~15_combout ),
	.regout(),
	.cout(),
	.cout0(\Add9~17 ),
	.cout1(\Add9~17COUT1_23 ));
// synopsys translate_off
defparam \Add9~15 .cin0_used = "true";
defparam \Add9~15 .cin1_used = "true";
defparam \Add9~15 .lut_mask = "698e";
defparam \Add9~15 .operation_mode = "arithmetic";
defparam \Add9~15 .output_mode = "comb_only";
defparam \Add9~15 .register_cascade_mode = "off";
defparam \Add9~15 .sum_lutc_input = "cin";
defparam \Add9~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N9
maxii_lcell \Add9~0 (
// Equation(s):
// \Add9~0_combout  = night_cnt[3] $ ((((\Add9~17 ))))

	.clk(gnd),
	.dataa(night_cnt[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add9~17 ),
	.cin1(\Add9~17COUT1_23 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add9~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add9~0 .cin0_used = "true";
defparam \Add9~0 .cin1_used = "true";
defparam \Add9~0 .lut_mask = "5a5a";
defparam \Add9~0 .operation_mode = "normal";
defparam \Add9~0 .output_mode = "comb_only";
defparam \Add9~0 .register_cascade_mode = "off";
defparam \Add9~0 .sum_lutc_input = "cin";
defparam \Add9~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N3
maxii_lcell \LessThan2~0 (
// Equation(s):
// \LessThan2~0_combout  = (night_cnt[1] & (((night_cnt[0] & !\Add9~5_combout )) # (!\Add9~10_combout ))) # (!night_cnt[1] & (night_cnt[0] & (!\Add9~10_combout  & !\Add9~5_combout )))

	.clk(gnd),
	.dataa(night_cnt[1]),
	.datab(night_cnt[0]),
	.datac(\Add9~10_combout ),
	.datad(\Add9~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~0 .lut_mask = "0a8e";
defparam \LessThan2~0 .operation_mode = "normal";
defparam \LessThan2~0 .output_mode = "comb_only";
defparam \LessThan2~0 .register_cascade_mode = "off";
defparam \LessThan2~0 .sum_lutc_input = "datac";
defparam \LessThan2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N4
maxii_lcell \LessThan2~1 (
// Equation(s):
// \LessThan2~1_combout  = (\Add9~15_combout  & (((night_cnt[2] & \LessThan2~0_combout )))) # (!\Add9~15_combout  & (((night_cnt[2]) # (\LessThan2~0_combout ))))

	.clk(gnd),
	.dataa(\Add9~15_combout ),
	.datab(vcc),
	.datac(night_cnt[2]),
	.datad(\LessThan2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~1 .lut_mask = "f550";
defparam \LessThan2~1 .operation_mode = "normal";
defparam \LessThan2~1 .output_mode = "comb_only";
defparam \LessThan2~1 .register_cascade_mode = "off";
defparam \LessThan2~1 .sum_lutc_input = "datac";
defparam \LessThan2~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N6
maxii_lcell \LessThan2~2 (
// Equation(s):
// \LessThan2~2_combout  = ((night_cnt[3] & ((\LessThan2~1_combout ) # (!\Add9~0_combout ))) # (!night_cnt[3] & (!\Add9~0_combout  & \LessThan2~1_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(night_cnt[3]),
	.datac(\Add9~0_combout ),
	.datad(\LessThan2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan2~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan2~2 .lut_mask = "cf0c";
defparam \LessThan2~2 .operation_mode = "normal";
defparam \LessThan2~2 .output_mode = "comb_only";
defparam \LessThan2~2 .register_cascade_mode = "off";
defparam \LessThan2~2 .sum_lutc_input = "datac";
defparam \LessThan2~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N8
maxii_lcell \Add13~0 (
// Equation(s):
// \Add13~0_combout  = (\Add9~0_combout  & (!\Add9~15_combout  & ((!\Add9~10_combout )))) # (!\Add9~0_combout  & (\LessThan2~2_combout  & ((\Add9~15_combout ) # (\Add9~10_combout ))))

	.clk(gnd),
	.dataa(\Add9~15_combout ),
	.datab(\LessThan2~2_combout ),
	.datac(\Add9~0_combout ),
	.datad(\Add9~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add13~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add13~0 .lut_mask = "0c58";
defparam \Add13~0 .operation_mode = "normal";
defparam \Add13~0 .output_mode = "comb_only";
defparam \Add13~0 .register_cascade_mode = "off";
defparam \Add13~0 .sum_lutc_input = "datac";
defparam \Add13~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N9
maxii_lcell \Add25~1 (
// Equation(s):
// \Add25~1_combout  = (\Add19~3_combout  & (!\Add19~1_combout  & (!\Add19~0_combout ))) # (!\Add19~3_combout  & (night_cnt[3] & ((\Add19~1_combout ) # (\Add19~0_combout ))))

	.clk(gnd),
	.dataa(\Add19~1_combout ),
	.datab(\Add19~0_combout ),
	.datac(\Add19~3_combout ),
	.datad(night_cnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add25~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add25~1 .lut_mask = "1e10";
defparam \Add25~1 .operation_mode = "normal";
defparam \Add25~1 .output_mode = "comb_only";
defparam \Add25~1 .register_cascade_mode = "off";
defparam \Add25~1 .sum_lutc_input = "datac";
defparam \Add25~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N8
maxii_lcell \night_cnt~12 (
// Equation(s):
// \night_cnt~12_combout  = (\seg_data[0][1]~58_combout  & ((\wait_status~regout  & (\Add13~0_combout )) # (!\wait_status~regout  & ((\Add25~1_combout )))))

	.clk(gnd),
	.dataa(\wait_status~regout ),
	.datab(\Add13~0_combout ),
	.datac(\Add25~1_combout ),
	.datad(\seg_data[0][1]~58_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt~12 .lut_mask = "d800";
defparam \night_cnt~12 .operation_mode = "normal";
defparam \night_cnt~12 .output_mode = "comb_only";
defparam \night_cnt~12 .register_cascade_mode = "off";
defparam \night_cnt~12 .sum_lutc_input = "datac";
defparam \night_cnt~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N9
maxii_lcell \always1~14 (
// Equation(s):
// \always1~14_combout  = ((\Equal8~0_combout  & (\double~combout  & \always1~13_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\Equal8~0_combout ),
	.datac(\double~combout ),
	.datad(\always1~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~14 .lut_mask = "c000";
defparam \always1~14 .operation_mode = "normal";
defparam \always1~14 .output_mode = "comb_only";
defparam \always1~14 .register_cascade_mode = "off";
defparam \always1~14 .sum_lutc_input = "datac";
defparam \always1~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N2
maxii_lcell \seg_data[0][0]~36 (
// Equation(s):
// \seg_data[0][0]~36_combout  = (\mile_mcnt[9]~20_combout  & (((\seg_data~34_combout ) # (\always1~14_combout )) # (!\seg_data~35_combout )))

	.clk(gnd),
	.dataa(\seg_data~35_combout ),
	.datab(\mile_mcnt[9]~20_combout ),
	.datac(\seg_data~34_combout ),
	.datad(\always1~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[0][0]~36_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[0][0]~36 .lut_mask = "ccc4";
defparam \seg_data[0][0]~36 .operation_mode = "normal";
defparam \seg_data[0][0]~36 .output_mode = "comb_only";
defparam \seg_data[0][0]~36 .register_cascade_mode = "off";
defparam \seg_data[0][0]~36 .sum_lutc_input = "datac";
defparam \seg_data[0][0]~36 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N0
maxii_lcell \night_cnt[3] (
// Equation(s):
// night_cnt[3] = DFFEAS(((\night_cnt~12_combout ) # ((!\seg_data[0][1]~58_combout  & \seg_data~35_combout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[0][0]~36_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(\seg_data[0][1]~58_combout ),
	.datac(\seg_data~35_combout ),
	.datad(\night_cnt~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[0][0]~36_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(night_cnt[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt[3] .lut_mask = "ff30";
defparam \night_cnt[3] .operation_mode = "normal";
defparam \night_cnt[3] .output_mode = "reg_only";
defparam \night_cnt[3] .register_cascade_mode = "off";
defparam \night_cnt[3] .sum_lutc_input = "datac";
defparam \night_cnt[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N1
maxii_lcell \Add19~2 (
// Equation(s):
// \Add19~2_combout  = (!\night~combout  & (((\Myuan[0]~0_combout  & night_cnt[1]))))

	.clk(gnd),
	.dataa(\night~combout ),
	.datab(vcc),
	.datac(\Myuan[0]~0_combout ),
	.datad(night_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add19~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add19~2 .lut_mask = "5000";
defparam \Add19~2 .operation_mode = "normal";
defparam \Add19~2 .output_mode = "comb_only";
defparam \Add19~2 .register_cascade_mode = "off";
defparam \Add19~2 .sum_lutc_input = "datac";
defparam \Add19~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N2
maxii_lcell \Add19~3 (
// Equation(s):
// \Add19~3_combout  = night_cnt[3] $ (((night_cnt[2] & ((\night~combout ) # (\Add19~2_combout )))))

	.clk(gnd),
	.dataa(\night~combout ),
	.datab(night_cnt[3]),
	.datac(night_cnt[2]),
	.datad(\Add19~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add19~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add19~3 .lut_mask = "3c6c";
defparam \Add19~3 .operation_mode = "normal";
defparam \Add19~3 .output_mode = "comb_only";
defparam \Add19~3 .register_cascade_mode = "off";
defparam \Add19~3 .sum_lutc_input = "datac";
defparam \Add19~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N1
maxii_lcell \Add25~0 (
// Equation(s):
// \Add25~0_combout  = (\Add19~3_combout  & (!\Add19~1_combout  & (\Add19~0_combout ))) # (!\Add19~3_combout  & (\Add19~1_combout  $ (((night_cnt[3])))))

	.clk(gnd),
	.dataa(\Add19~1_combout ),
	.datab(\Add19~0_combout ),
	.datac(\Add19~3_combout ),
	.datad(night_cnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add25~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add25~0 .lut_mask = "454a";
defparam \Add25~0 .operation_mode = "normal";
defparam \Add25~0 .output_mode = "comb_only";
defparam \Add25~0 .register_cascade_mode = "off";
defparam \Add25~0 .sum_lutc_input = "datac";
defparam \Add25~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N0
maxii_lcell \night_cnt~0 (
// Equation(s):
// \night_cnt~0_combout  = (\LessThan2~2_combout ) # ((\Add9~0_combout  & ((\Add9~15_combout ) # (\Add9~10_combout ))))

	.clk(gnd),
	.dataa(\Add9~15_combout ),
	.datab(\Add9~0_combout ),
	.datac(\LessThan2~2_combout ),
	.datad(\Add9~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt~0 .lut_mask = "fcf8";
defparam \night_cnt~0 .operation_mode = "normal";
defparam \night_cnt~0 .output_mode = "comb_only";
defparam \night_cnt~0 .register_cascade_mode = "off";
defparam \night_cnt~0 .sum_lutc_input = "datac";
defparam \night_cnt~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N4
maxii_lcell \night_cnt~5 (
// Equation(s):
// \night_cnt~5_combout  = (\wait_status~regout  & (\Add9~10_combout  $ (((\night_cnt~0_combout ))))) # (!\wait_status~regout  & (((\Add25~0_combout ))))

	.clk(gnd),
	.dataa(\wait_status~regout ),
	.datab(\Add9~10_combout ),
	.datac(\Add25~0_combout ),
	.datad(\night_cnt~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt~5 .lut_mask = "72d8";
defparam \night_cnt~5 .operation_mode = "normal";
defparam \night_cnt~5 .output_mode = "comb_only";
defparam \night_cnt~5 .register_cascade_mode = "off";
defparam \night_cnt~5 .sum_lutc_input = "datac";
defparam \night_cnt~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N5
maxii_lcell \night_cnt[1] (
// Equation(s):
// night_cnt[1] = DFFEAS((\seg_data[0][1]~58_combout  & (((\night_cnt~5_combout )))) # (!\seg_data[0][1]~58_combout  & (((\seg_data~59_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[0][0]~36_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[0][1]~58_combout ),
	.datab(vcc),
	.datac(\seg_data~59_combout ),
	.datad(\night_cnt~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[0][0]~36_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(night_cnt[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt[1] .lut_mask = "fa50";
defparam \night_cnt[1] .operation_mode = "normal";
defparam \night_cnt[1] .output_mode = "reg_only";
defparam \night_cnt[1] .register_cascade_mode = "off";
defparam \night_cnt[1] .sum_lutc_input = "datac";
defparam \night_cnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N5
maxii_lcell \night_cnt~1 (
// Equation(s):
// \night_cnt~1_combout  = (\wait_status~regout  & (\Add9~15_combout  $ (((!\Add9~10_combout  & \night_cnt~0_combout )))))

	.clk(gnd),
	.dataa(\wait_status~regout ),
	.datab(\Add9~10_combout ),
	.datac(\Add9~15_combout ),
	.datad(\night_cnt~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt~1 .lut_mask = "82a0";
defparam \night_cnt~1 .operation_mode = "normal";
defparam \night_cnt~1 .output_mode = "comb_only";
defparam \night_cnt~1 .register_cascade_mode = "off";
defparam \night_cnt~1 .sum_lutc_input = "datac";
defparam \night_cnt~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N2
maxii_lcell \night_cnt~2 (
// Equation(s):
// \night_cnt~2_combout  = (\Add19~3_combout  & ((\Add19~1_combout ) # ((\Add19~0_combout )))) # (!\Add19~3_combout  & (((night_cnt[3]))))

	.clk(gnd),
	.dataa(\Add19~1_combout ),
	.datab(\Add19~0_combout ),
	.datac(\Add19~3_combout ),
	.datad(night_cnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt~2 .lut_mask = "efe0";
defparam \night_cnt~2 .operation_mode = "normal";
defparam \night_cnt~2 .output_mode = "comb_only";
defparam \night_cnt~2 .register_cascade_mode = "off";
defparam \night_cnt~2 .sum_lutc_input = "datac";
defparam \night_cnt~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N3
maxii_lcell \night_cnt~3 (
// Equation(s):
// \night_cnt~3_combout  = (!\wait_status~regout  & (\Add19~0_combout  $ (((\night_cnt~2_combout  & !\Add19~1_combout )))))

	.clk(gnd),
	.dataa(\Add19~0_combout ),
	.datab(\night_cnt~2_combout ),
	.datac(\Add19~1_combout ),
	.datad(\wait_status~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\night_cnt~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt~3 .lut_mask = "00a6";
defparam \night_cnt~3 .operation_mode = "normal";
defparam \night_cnt~3 .output_mode = "comb_only";
defparam \night_cnt~3 .register_cascade_mode = "off";
defparam \night_cnt~3 .sum_lutc_input = "datac";
defparam \night_cnt~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N3
maxii_lcell \night_cnt[2] (
// Equation(s):
// night_cnt[2] = DFFEAS((\seg_data[0][1]~58_combout  & ((\night_cnt~1_combout ) # ((\night_cnt~3_combout )))) # (!\seg_data[0][1]~58_combout  & (((\seg_data~59_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[0][0]~36_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\night_cnt~1_combout ),
	.datab(\seg_data~59_combout ),
	.datac(\night_cnt~3_combout ),
	.datad(\seg_data[0][1]~58_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[0][0]~36_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(night_cnt[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \night_cnt[2] .lut_mask = "facc";
defparam \night_cnt[2] .operation_mode = "normal";
defparam \night_cnt[2] .output_mode = "reg_only";
defparam \night_cnt[2] .register_cascade_mode = "off";
defparam \night_cnt[2] .sum_lutc_input = "datac";
defparam \night_cnt[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N4
maxii_lcell \LessThan9~0 (
// Equation(s):
// \LessThan9~0_combout  = (!night_cnt[3] & (((!night_cnt[0] & !night_cnt[1])) # (!night_cnt[2])))

	.clk(gnd),
	.dataa(night_cnt[2]),
	.datab(night_cnt[0]),
	.datac(night_cnt[3]),
	.datad(night_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan9~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan9~0 .lut_mask = "0507";
defparam \LessThan9~0 .operation_mode = "normal";
defparam \LessThan9~0 .output_mode = "comb_only";
defparam \LessThan9~0 .register_cascade_mode = "off";
defparam \LessThan9~0 .sum_lutc_input = "datac";
defparam \LessThan9~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y6_N0
maxii_lcell \always1~20 (
// Equation(s):
// \always1~20_combout  = (\LessThan9~0_combout  & (\Add9~15_combout  & ((\Add9~5_combout ) # (\Add9~10_combout )))) # (!\LessThan9~0_combout  & ((\Add9~10_combout  & ((!\Add9~15_combout ) # (!\Add9~5_combout ))) # (!\Add9~10_combout  & ((\Add9~15_combout 
// )))))

	.clk(gnd),
	.dataa(\Add9~5_combout ),
	.datab(\LessThan9~0_combout ),
	.datac(\Add9~10_combout ),
	.datad(\Add9~15_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~20 .lut_mask = "db30";
defparam \always1~20 .operation_mode = "normal";
defparam \always1~20 .output_mode = "comb_only";
defparam \always1~20 .register_cascade_mode = "off";
defparam \always1~20 .sum_lutc_input = "datac";
defparam \always1~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N7
maxii_lcell \always1~21 (
// Equation(s):
// \always1~21_combout  = (\LessThan9~0_combout  & ((\Add9~0_combout ) # ((\always1~20_combout ) # (\LessThan2~2_combout )))) # (!\LessThan9~0_combout  & (\LessThan2~2_combout  & ((!\always1~20_combout ) # (!\Add9~0_combout ))))

	.clk(gnd),
	.dataa(\LessThan9~0_combout ),
	.datab(\Add9~0_combout ),
	.datac(\always1~20_combout ),
	.datad(\LessThan2~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~21 .lut_mask = "bfa8";
defparam \always1~21 .operation_mode = "normal";
defparam \always1~21 .output_mode = "comb_only";
defparam \always1~21 .register_cascade_mode = "off";
defparam \always1~21 .sum_lutc_input = "datac";
defparam \always1~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N5
maxii_lcell \Add18~3 (
// Equation(s):
// \Add18~3_combout  = \seg_data[0][0]~regout  $ ((((sub_cnt[1]) # (sub_cnt[0])) # (!\double~combout )))

	.clk(gnd),
	.dataa(\seg_data[0][0]~regout ),
	.datab(\double~combout ),
	.datac(sub_cnt[1]),
	.datad(sub_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add18~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add18~3 .lut_mask = "5559";
defparam \Add18~3 .operation_mode = "normal";
defparam \Add18~3 .output_mode = "comb_only";
defparam \Add18~3 .register_cascade_mode = "off";
defparam \Add18~3 .sum_lutc_input = "datac";
defparam \Add18~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N0
maxii_lcell \Add12~0 (
// Equation(s):
// \Add12~0_combout  = \always1~21_combout  $ ((!\Add18~3_combout ))
// \Add12~2  = CARRY((\always1~21_combout  & (!\Add18~3_combout )))
// \Add12~2COUT1_21  = CARRY((\always1~21_combout  & (!\Add18~3_combout )))

	.clk(gnd),
	.dataa(\always1~21_combout ),
	.datab(\Add18~3_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add12~0_combout ),
	.regout(),
	.cout(),
	.cout0(\Add12~2 ),
	.cout1(\Add12~2COUT1_21 ));
// synopsys translate_off
defparam \Add12~0 .lut_mask = "9922";
defparam \Add12~0 .operation_mode = "arithmetic";
defparam \Add12~0 .output_mode = "comb_only";
defparam \Add12~0 .register_cascade_mode = "off";
defparam \Add12~0 .sum_lutc_input = "datac";
defparam \Add12~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N7
maxii_lcell \always1~17 (
// Equation(s):
// \always1~17_combout  = (night_cnt[3] & ((\night~combout ) # ((\Myuan[0]~0_combout  & night_cnt[1]))))

	.clk(gnd),
	.dataa(\night~combout ),
	.datab(\Myuan[0]~0_combout ),
	.datac(night_cnt[1]),
	.datad(night_cnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~17 .lut_mask = "ea00";
defparam \always1~17 .operation_mode = "normal";
defparam \always1~17 .output_mode = "comb_only";
defparam \always1~17 .register_cascade_mode = "off";
defparam \always1~17 .sum_lutc_input = "datac";
defparam \always1~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N3
maxii_lcell \always1~18 (
// Equation(s):
// \always1~18_combout  = (\Add19~3_combout ) # ((\Add19~0_combout  & ((night_cnt[0]) # (\Add19~1_combout ))))

	.clk(gnd),
	.dataa(night_cnt[0]),
	.datab(\Add19~1_combout ),
	.datac(\Add19~0_combout ),
	.datad(\Add19~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~18 .lut_mask = "ffe0";
defparam \always1~18 .operation_mode = "normal";
defparam \always1~18 .output_mode = "comb_only";
defparam \always1~18 .register_cascade_mode = "off";
defparam \always1~18 .sum_lutc_input = "datac";
defparam \always1~18 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N0
maxii_lcell \always1~19 (
// Equation(s):
// \always1~19_combout  = (night_cnt[2] & ((\always1~17_combout ) # ((\LessThan9~0_combout  & \always1~18_combout )))) # (!night_cnt[2] & (\LessThan9~0_combout  & ((\always1~18_combout ))))

	.clk(gnd),
	.dataa(night_cnt[2]),
	.datab(\LessThan9~0_combout ),
	.datac(\always1~17_combout ),
	.datad(\always1~18_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~19 .lut_mask = "eca0";
defparam \always1~19 .operation_mode = "normal";
defparam \always1~19 .output_mode = "comb_only";
defparam \always1~19 .register_cascade_mode = "off";
defparam \always1~19 .sum_lutc_input = "datac";
defparam \always1~19 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N0
maxii_lcell \Add22~0 (
// Equation(s):
// \Add22~0_combout  = \Add18~3_combout  $ ((\always1~19_combout ))
// \Add22~2  = CARRY((\Add18~3_combout  & (\always1~19_combout )))
// \Add22~2COUT1_21  = CARRY((\Add18~3_combout  & (\always1~19_combout )))

	.clk(gnd),
	.dataa(\Add18~3_combout ),
	.datab(\always1~19_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add22~0_combout ),
	.regout(),
	.cout(),
	.cout0(\Add22~2 ),
	.cout1(\Add22~2COUT1_21 ));
// synopsys translate_off
defparam \Add22~0 .lut_mask = "6688";
defparam \Add22~0 .operation_mode = "arithmetic";
defparam \Add22~0 .output_mode = "comb_only";
defparam \Add22~0 .register_cascade_mode = "off";
defparam \Add22~0 .sum_lutc_input = "datac";
defparam \Add22~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N4
maxii_lcell \Add8~1 (
// Equation(s):
// \Add8~1_combout  = (!\seg_data[0][0]~regout  & (((sub_cnt[0]) # (sub_cnt[1])) # (!\double~combout )))

	.clk(gnd),
	.dataa(\double~combout ),
	.datab(sub_cnt[0]),
	.datac(sub_cnt[1]),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add8~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add8~1 .lut_mask = "00fd";
defparam \Add8~1 .operation_mode = "normal";
defparam \Add8~1 .output_mode = "comb_only";
defparam \Add8~1 .register_cascade_mode = "off";
defparam \Add8~1 .sum_lutc_input = "datac";
defparam \Add8~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N1
maxii_lcell \Add11~15 (
// Equation(s):
// \Add11~15_combout  = \Add18~3_combout  $ ((!\always1~21_combout ))
// \Add11~17  = CARRY((!\Add18~3_combout  & (\always1~21_combout )))
// \Add11~17COUT1_21  = CARRY((!\Add18~3_combout  & (\always1~21_combout )))

	.clk(gnd),
	.dataa(\Add18~3_combout ),
	.datab(\always1~21_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add11~15_combout ),
	.regout(),
	.cout(),
	.cout0(\Add11~17 ),
	.cout1(\Add11~17COUT1_21 ));
// synopsys translate_off
defparam \Add11~15 .lut_mask = "9944";
defparam \Add11~15 .operation_mode = "arithmetic";
defparam \Add11~15 .output_mode = "comb_only";
defparam \Add11~15 .register_cascade_mode = "off";
defparam \Add11~15 .sum_lutc_input = "datac";
defparam \Add11~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N2
maxii_lcell \Add11~5 (
// Equation(s):
// \Add11~5_combout  = \Add8~1_combout  $ (\seg_data[0][1]~regout  $ ((!\Add11~17 )))
// \Add11~7  = CARRY((\Add8~1_combout  $ (\seg_data[0][1]~regout )) # (!\Add11~17 ))
// \Add11~7COUT1_22  = CARRY((\Add8~1_combout  $ (\seg_data[0][1]~regout )) # (!\Add11~17COUT1_21 ))

	.clk(gnd),
	.dataa(\Add8~1_combout ),
	.datab(\seg_data[0][1]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add11~17 ),
	.cin1(\Add11~17COUT1_21 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add11~5_combout ),
	.regout(),
	.cout(),
	.cout0(\Add11~7 ),
	.cout1(\Add11~7COUT1_22 ));
// synopsys translate_off
defparam \Add11~5 .cin0_used = "true";
defparam \Add11~5 .cin1_used = "true";
defparam \Add11~5 .lut_mask = "696f";
defparam \Add11~5 .operation_mode = "arithmetic";
defparam \Add11~5 .output_mode = "comb_only";
defparam \Add11~5 .register_cascade_mode = "off";
defparam \Add11~5 .sum_lutc_input = "cin";
defparam \Add11~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N7
maxii_lcell \always1~15 (
// Equation(s):
// \always1~15_combout  = (\Equal8~0_combout  & (\double~combout  & (\night~combout  & \always1~13_combout )))

	.clk(gnd),
	.dataa(\Equal8~0_combout ),
	.datab(\double~combout ),
	.datac(\night~combout ),
	.datad(\always1~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~15 .lut_mask = "8000";
defparam \always1~15 .operation_mode = "normal";
defparam \always1~15 .output_mode = "comb_only";
defparam \always1~15 .register_cascade_mode = "off";
defparam \always1~15 .sum_lutc_input = "datac";
defparam \always1~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N1
maxii_lcell \Add22~5 (
// Equation(s):
// \Add22~5_combout  = \Add18~1_combout  $ ((((!\Add22~2 ))))
// \Add22~7  = CARRY((!\Add18~1_combout  & ((!\Add22~2 ))))
// \Add22~7COUT1_22  = CARRY((!\Add18~1_combout  & ((!\Add22~2COUT1_21 ))))

	.clk(gnd),
	.dataa(\Add18~1_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add22~2 ),
	.cin1(\Add22~2COUT1_21 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add22~5_combout ),
	.regout(),
	.cout(),
	.cout0(\Add22~7 ),
	.cout1(\Add22~7COUT1_22 ));
// synopsys translate_off
defparam \Add22~5 .cin0_used = "true";
defparam \Add22~5 .cin1_used = "true";
defparam \Add22~5 .lut_mask = "a505";
defparam \Add22~5 .operation_mode = "arithmetic";
defparam \Add22~5 .output_mode = "comb_only";
defparam \Add22~5 .register_cascade_mode = "off";
defparam \Add22~5 .sum_lutc_input = "cin";
defparam \Add22~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N2
maxii_lcell \Add22~10 (
// Equation(s):
// \Add22~10_combout  = \seg_data[0][2]~regout  $ (\Add18~2_combout  $ ((\Add22~7 )))
// \Add22~12  = CARRY((\seg_data[0][2]~regout  $ (\Add18~2_combout )) # (!\Add22~7 ))
// \Add22~12COUT1_23  = CARRY((\seg_data[0][2]~regout  $ (\Add18~2_combout )) # (!\Add22~7COUT1_22 ))

	.clk(gnd),
	.dataa(\seg_data[0][2]~regout ),
	.datab(\Add18~2_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add22~7 ),
	.cin1(\Add22~7COUT1_22 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add22~10_combout ),
	.regout(),
	.cout(),
	.cout0(\Add22~12 ),
	.cout1(\Add22~12COUT1_23 ));
// synopsys translate_off
defparam \Add22~10 .cin0_used = "true";
defparam \Add22~10 .cin1_used = "true";
defparam \Add22~10 .lut_mask = "966f";
defparam \Add22~10 .operation_mode = "arithmetic";
defparam \Add22~10 .output_mode = "comb_only";
defparam \Add22~10 .register_cascade_mode = "off";
defparam \Add22~10 .sum_lutc_input = "cin";
defparam \Add22~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N4
maxii_lcell \Add8~2 (
// Equation(s):
// \Add8~2_combout  = ((!\seg_data[0][1]~regout  & (!\Myuan[0]~0_combout  & !\seg_data[0][0]~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seg_data[0][1]~regout ),
	.datac(\Myuan[0]~0_combout ),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add8~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add8~2 .lut_mask = "0003";
defparam \Add8~2 .operation_mode = "normal";
defparam \Add8~2 .output_mode = "comb_only";
defparam \Add8~2 .register_cascade_mode = "off";
defparam \Add8~2 .sum_lutc_input = "datac";
defparam \Add8~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N1
maxii_lcell \Add12~5 (
// Equation(s):
// \Add12~5_combout  = \seg_data[0][1]~regout  $ (\Add8~1_combout  $ ((\Add12~2 )))
// \Add12~7  = CARRY((!\Add12~2  & (\seg_data[0][1]~regout  $ (\Add8~1_combout ))))
// \Add12~7COUT1_22  = CARRY((!\Add12~2COUT1_21  & (\seg_data[0][1]~regout  $ (\Add8~1_combout ))))

	.clk(gnd),
	.dataa(\seg_data[0][1]~regout ),
	.datab(\Add8~1_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add12~2 ),
	.cin1(\Add12~2COUT1_21 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add12~5_combout ),
	.regout(),
	.cout(),
	.cout0(\Add12~7 ),
	.cout1(\Add12~7COUT1_22 ));
// synopsys translate_off
defparam \Add12~5 .cin0_used = "true";
defparam \Add12~5 .cin1_used = "true";
defparam \Add12~5 .lut_mask = "9606";
defparam \Add12~5 .operation_mode = "arithmetic";
defparam \Add12~5 .output_mode = "comb_only";
defparam \Add12~5 .register_cascade_mode = "off";
defparam \Add12~5 .sum_lutc_input = "cin";
defparam \Add12~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N2
maxii_lcell \Add12~10 (
// Equation(s):
// \Add12~10_combout  = \seg_data[0][2]~regout  $ (\Add8~2_combout  $ ((\Add12~7 )))
// \Add12~12  = CARRY((\seg_data[0][2]~regout  $ (\Add8~2_combout )) # (!\Add12~7 ))
// \Add12~12COUT1_23  = CARRY((\seg_data[0][2]~regout  $ (\Add8~2_combout )) # (!\Add12~7COUT1_22 ))

	.clk(gnd),
	.dataa(\seg_data[0][2]~regout ),
	.datab(\Add8~2_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add12~7 ),
	.cin1(\Add12~7COUT1_22 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add12~10_combout ),
	.regout(),
	.cout(),
	.cout0(\Add12~12 ),
	.cout1(\Add12~12COUT1_23 ));
// synopsys translate_off
defparam \Add12~10 .cin0_used = "true";
defparam \Add12~10 .cin1_used = "true";
defparam \Add12~10 .lut_mask = "966f";
defparam \Add12~10 .operation_mode = "arithmetic";
defparam \Add12~10 .output_mode = "comb_only";
defparam \Add12~10 .register_cascade_mode = "off";
defparam \Add12~10 .sum_lutc_input = "cin";
defparam \Add12~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N3
maxii_lcell \Add11~10 (
// Equation(s):
// \Add11~10_combout  = \Add8~2_combout  $ (\seg_data[0][2]~regout  $ ((!\Add11~7 )))
// \Add11~12  = CARRY((!\Add11~7  & (\Add8~2_combout  $ (\seg_data[0][2]~regout ))))
// \Add11~12COUT1_23  = CARRY((!\Add11~7COUT1_22  & (\Add8~2_combout  $ (\seg_data[0][2]~regout ))))

	.clk(gnd),
	.dataa(\Add8~2_combout ),
	.datab(\seg_data[0][2]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add11~7 ),
	.cin1(\Add11~7COUT1_22 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add11~10_combout ),
	.regout(),
	.cout(),
	.cout0(\Add11~12 ),
	.cout1(\Add11~12COUT1_23 ));
// synopsys translate_off
defparam \Add11~10 .cin0_used = "true";
defparam \Add11~10 .cin1_used = "true";
defparam \Add11~10 .lut_mask = "6906";
defparam \Add11~10 .operation_mode = "arithmetic";
defparam \Add11~10 .output_mode = "comb_only";
defparam \Add11~10 .register_cascade_mode = "off";
defparam \Add11~10 .sum_lutc_input = "cin";
defparam \Add11~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N5
maxii_lcell \seg_data~56 (
// Equation(s):
// \seg_data~56_combout  = (\wait_status~regout  & ((\Add11~10_combout ) # ((\seg_data[0][1]~31_combout )))) # (!\wait_status~regout  & (((\Add21~10_combout  & !\seg_data[0][1]~31_combout ))))

	.clk(gnd),
	.dataa(\Add11~10_combout ),
	.datab(\wait_status~regout ),
	.datac(\Add21~10_combout ),
	.datad(\seg_data[0][1]~31_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~56_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~56 .lut_mask = "ccb8";
defparam \seg_data~56 .operation_mode = "normal";
defparam \seg_data~56 .output_mode = "comb_only";
defparam \seg_data~56 .register_cascade_mode = "off";
defparam \seg_data~56 .sum_lutc_input = "datac";
defparam \seg_data~56 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N9
maxii_lcell \seg_data~57 (
// Equation(s):
// \seg_data~57_combout  = (\seg_data[0][1]~31_combout  & ((\seg_data~56_combout  & ((\Add12~10_combout ))) # (!\seg_data~56_combout  & (\Add22~10_combout )))) # (!\seg_data[0][1]~31_combout  & (((\seg_data~56_combout ))))

	.clk(gnd),
	.dataa(\Add22~10_combout ),
	.datab(\seg_data[0][1]~31_combout ),
	.datac(\Add12~10_combout ),
	.datad(\seg_data~56_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~57_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~57 .lut_mask = "f388";
defparam \seg_data~57 .operation_mode = "normal";
defparam \seg_data~57 .output_mode = "comb_only";
defparam \seg_data~57 .register_cascade_mode = "off";
defparam \seg_data~57 .sum_lutc_input = "datac";
defparam \seg_data~57 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N4
maxii_lcell \seg_data[0][2] (
// Equation(s):
// \seg_data[0][2]~regout  = DFFEAS((\seg_data[0][1]~58_combout  & (((\seg_data~57_combout )))) # (!\seg_data[0][1]~58_combout  & (\seg_data~59_combout  & (!\always1~15_combout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[0][0]~36_combout , , , , 
// )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data~59_combout ),
	.datab(\always1~15_combout ),
	.datac(\seg_data[0][1]~58_combout ),
	.datad(\seg_data~57_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[0][0]~36_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[0][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[0][2] .lut_mask = "f202";
defparam \seg_data[0][2] .operation_mode = "normal";
defparam \seg_data[0][2] .output_mode = "reg_only";
defparam \seg_data[0][2] .register_cascade_mode = "off";
defparam \seg_data[0][2] .sum_lutc_input = "datac";
defparam \seg_data[0][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N8
maxii_lcell \Add8~0 (
// Equation(s):
// \Add8~0_combout  = (!\Myuan[0]~0_combout  & (\seg_data[0][2]~regout  & (!\seg_data[0][1]~regout  & !\seg_data[0][0]~regout )))

	.clk(gnd),
	.dataa(\Myuan[0]~0_combout ),
	.datab(\seg_data[0][2]~regout ),
	.datac(\seg_data[0][1]~regout ),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add8~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add8~0 .lut_mask = "0004";
defparam \Add8~0 .operation_mode = "normal";
defparam \Add8~0 .output_mode = "comb_only";
defparam \Add8~0 .register_cascade_mode = "off";
defparam \Add8~0 .sum_lutc_input = "datac";
defparam \Add8~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N3
maxii_lcell \Add12~15 (
// Equation(s):
// \Add12~15_combout  = \seg_data[0][3]~regout  $ (((\Add12~12  $ (\Add8~0_combout ))))

	.clk(gnd),
	.dataa(\seg_data[0][3]~regout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\Add8~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add12~12 ),
	.cin1(\Add12~12COUT1_23 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add12~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add12~15 .cin0_used = "true";
defparam \Add12~15 .cin1_used = "true";
defparam \Add12~15 .lut_mask = "a55a";
defparam \Add12~15 .operation_mode = "normal";
defparam \Add12~15 .output_mode = "comb_only";
defparam \Add12~15 .register_cascade_mode = "off";
defparam \Add12~15 .sum_lutc_input = "cin";
defparam \Add12~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y6_N6
maxii_lcell \Add18~0 (
// Equation(s):
// \Add18~0_combout  = (\seg_data[0][2]~regout  & (!\seg_data[0][1]~regout  & ((!\seg_data[0][0]~regout ) # (!\Myuan[0]~0_combout ))))

	.clk(gnd),
	.dataa(\Myuan[0]~0_combout ),
	.datab(\seg_data[0][2]~regout ),
	.datac(\seg_data[0][1]~regout ),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add18~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add18~0 .lut_mask = "040c";
defparam \Add18~0 .operation_mode = "normal";
defparam \Add18~0 .output_mode = "comb_only";
defparam \Add18~0 .register_cascade_mode = "off";
defparam \Add18~0 .sum_lutc_input = "datac";
defparam \Add18~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N3
maxii_lcell \Add22~15 (
// Equation(s):
// \Add22~15_combout  = \Add18~0_combout  $ (((\Add22~12  $ (\seg_data[0][3]~regout ))))

	.clk(gnd),
	.dataa(\Add18~0_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\seg_data[0][3]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add22~12 ),
	.cin1(\Add22~12COUT1_23 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add22~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add22~15 .cin0_used = "true";
defparam \Add22~15 .cin1_used = "true";
defparam \Add22~15 .lut_mask = "a55a";
defparam \Add22~15 .operation_mode = "normal";
defparam \Add22~15 .output_mode = "comb_only";
defparam \Add22~15 .register_cascade_mode = "off";
defparam \Add22~15 .sum_lutc_input = "cin";
defparam \Add22~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N0
maxii_lcell \Add21~15 (
// Equation(s):
// \Add21~15_combout  = \always1~19_combout  $ ((\Add18~3_combout ))
// \Add21~17  = CARRY((\always1~19_combout  & (\Add18~3_combout )))
// \Add21~17COUT1_21  = CARRY((\always1~19_combout  & (\Add18~3_combout )))

	.clk(gnd),
	.dataa(\always1~19_combout ),
	.datab(\Add18~3_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add21~15_combout ),
	.regout(),
	.cout(),
	.cout0(\Add21~17 ),
	.cout1(\Add21~17COUT1_21 ));
// synopsys translate_off
defparam \Add21~15 .lut_mask = "6688";
defparam \Add21~15 .operation_mode = "arithmetic";
defparam \Add21~15 .output_mode = "comb_only";
defparam \Add21~15 .register_cascade_mode = "off";
defparam \Add21~15 .sum_lutc_input = "datac";
defparam \Add21~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N1
maxii_lcell \Add21~5 (
// Equation(s):
// \Add21~5_combout  = \Add18~1_combout  $ ((((\Add21~17 ))))
// \Add21~7  = CARRY(((!\Add21~17 )) # (!\Add18~1_combout ))
// \Add21~7COUT1_22  = CARRY(((!\Add21~17COUT1_21 )) # (!\Add18~1_combout ))

	.clk(gnd),
	.dataa(\Add18~1_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add21~17 ),
	.cin1(\Add21~17COUT1_21 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add21~5_combout ),
	.regout(),
	.cout(),
	.cout0(\Add21~7 ),
	.cout1(\Add21~7COUT1_22 ));
// synopsys translate_off
defparam \Add21~5 .cin0_used = "true";
defparam \Add21~5 .cin1_used = "true";
defparam \Add21~5 .lut_mask = "5a5f";
defparam \Add21~5 .operation_mode = "arithmetic";
defparam \Add21~5 .output_mode = "comb_only";
defparam \Add21~5 .register_cascade_mode = "off";
defparam \Add21~5 .sum_lutc_input = "cin";
defparam \Add21~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N2
maxii_lcell \Add21~10 (
// Equation(s):
// \Add21~10_combout  = \Add18~2_combout  $ (\seg_data[0][2]~regout  $ ((!\Add21~7 )))
// \Add21~12  = CARRY((!\Add21~7  & (\Add18~2_combout  $ (\seg_data[0][2]~regout ))))
// \Add21~12COUT1_23  = CARRY((!\Add21~7COUT1_22  & (\Add18~2_combout  $ (\seg_data[0][2]~regout ))))

	.clk(gnd),
	.dataa(\Add18~2_combout ),
	.datab(\seg_data[0][2]~regout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add21~7 ),
	.cin1(\Add21~7COUT1_22 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add21~10_combout ),
	.regout(),
	.cout(),
	.cout0(\Add21~12 ),
	.cout1(\Add21~12COUT1_23 ));
// synopsys translate_off
defparam \Add21~10 .cin0_used = "true";
defparam \Add21~10 .cin1_used = "true";
defparam \Add21~10 .lut_mask = "6906";
defparam \Add21~10 .operation_mode = "arithmetic";
defparam \Add21~10 .output_mode = "comb_only";
defparam \Add21~10 .register_cascade_mode = "off";
defparam \Add21~10 .sum_lutc_input = "cin";
defparam \Add21~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N3
maxii_lcell \Add21~0 (
// Equation(s):
// \Add21~0_combout  = (\Add18~0_combout  $ (\Add21~12  $ (\seg_data[0][3]~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\Add18~0_combout ),
	.datac(vcc),
	.datad(\seg_data[0][3]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add21~12 ),
	.cin1(\Add21~12COUT1_23 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add21~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add21~0 .cin0_used = "true";
defparam \Add21~0 .cin1_used = "true";
defparam \Add21~0 .lut_mask = "c33c";
defparam \Add21~0 .operation_mode = "normal";
defparam \Add21~0 .output_mode = "comb_only";
defparam \Add21~0 .register_cascade_mode = "off";
defparam \Add21~0 .sum_lutc_input = "cin";
defparam \Add21~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N6
maxii_lcell \seg_data~68 (
// Equation(s):
// \seg_data~68_combout  = (\wait_status~regout  & (((\Add11~0_combout ) # (\seg_data[0][1]~31_combout )))) # (!\wait_status~regout  & (\Add21~0_combout  & ((!\seg_data[0][1]~31_combout ))))

	.clk(gnd),
	.dataa(\wait_status~regout ),
	.datab(\Add21~0_combout ),
	.datac(\Add11~0_combout ),
	.datad(\seg_data[0][1]~31_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~68_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~68 .lut_mask = "aae4";
defparam \seg_data~68 .operation_mode = "normal";
defparam \seg_data~68 .output_mode = "comb_only";
defparam \seg_data~68 .register_cascade_mode = "off";
defparam \seg_data~68 .sum_lutc_input = "datac";
defparam \seg_data~68 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N7
maxii_lcell \seg_data~69 (
// Equation(s):
// \seg_data~69_combout  = (\seg_data[0][1]~31_combout  & ((\seg_data~68_combout  & (\Add12~15_combout )) # (!\seg_data~68_combout  & ((\Add22~15_combout ))))) # (!\seg_data[0][1]~31_combout  & (((\seg_data~68_combout ))))

	.clk(gnd),
	.dataa(\Add12~15_combout ),
	.datab(\seg_data[0][1]~31_combout ),
	.datac(\Add22~15_combout ),
	.datad(\seg_data~68_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~69_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~69 .lut_mask = "bbc0";
defparam \seg_data~69 .operation_mode = "normal";
defparam \seg_data~69 .output_mode = "comb_only";
defparam \seg_data~69 .register_cascade_mode = "off";
defparam \seg_data~69 .sum_lutc_input = "datac";
defparam \seg_data~69 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N8
maxii_lcell \seg_data[0][3] (
// Equation(s):
// \seg_data[0][3]~regout  = DFFEAS(((\seg_data[0][1]~58_combout  & ((\seg_data~69_combout ))) # (!\seg_data[0][1]~58_combout  & (\seg_data~35_combout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[0][0]~36_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(\seg_data~35_combout ),
	.datac(\seg_data[0][1]~58_combout ),
	.datad(\seg_data~69_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[0][0]~36_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[0][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[0][3] .lut_mask = "fc0c";
defparam \seg_data[0][3] .operation_mode = "normal";
defparam \seg_data[0][3] .output_mode = "reg_only";
defparam \seg_data[0][3] .register_cascade_mode = "off";
defparam \seg_data[0][3] .sum_lutc_input = "datac";
defparam \seg_data[0][3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N4
maxii_lcell \Add11~0 (
// Equation(s):
// \Add11~0_combout  = (\seg_data[0][3]~regout  $ (\Add11~12  $ (\Add8~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\seg_data[0][3]~regout ),
	.datac(vcc),
	.datad(\Add8~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\Add11~12 ),
	.cin1(\Add11~12COUT1_23 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add11~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add11~0 .cin0_used = "true";
defparam \Add11~0 .cin1_used = "true";
defparam \Add11~0 .lut_mask = "c33c";
defparam \Add11~0 .operation_mode = "normal";
defparam \Add11~0 .output_mode = "comb_only";
defparam \Add11~0 .register_cascade_mode = "off";
defparam \Add11~0 .sum_lutc_input = "cin";
defparam \Add11~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N9
maxii_lcell \LessThan4~0 (
// Equation(s):
// \LessThan4~0_combout  = ((\Add11~0_combout  & ((\Add11~5_combout ) # (\Add11~10_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\Add11~5_combout ),
	.datac(\Add11~0_combout ),
	.datad(\Add11~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan4~0 .lut_mask = "f0c0";
defparam \LessThan4~0 .operation_mode = "normal";
defparam \LessThan4~0 .output_mode = "comb_only";
defparam \LessThan4~0 .register_cascade_mode = "off";
defparam \LessThan4~0 .sum_lutc_input = "datac";
defparam \LessThan4~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N8
maxii_lcell \seg_data[0][1]~31 (
// Equation(s):
// \seg_data[0][1]~31_combout  = ((\wait_status~regout  & ((\LessThan4~0_combout ))) # (!\wait_status~regout  & (\LessThan12~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\LessThan12~0_combout ),
	.datac(\wait_status~regout ),
	.datad(\LessThan4~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[0][1]~31_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[0][1]~31 .lut_mask = "fc0c";
defparam \seg_data[0][1]~31 .operation_mode = "normal";
defparam \seg_data[0][1]~31 .output_mode = "comb_only";
defparam \seg_data[0][1]~31 .register_cascade_mode = "off";
defparam \seg_data[0][1]~31 .sum_lutc_input = "datac";
defparam \seg_data[0][1]~31 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N6
maxii_lcell \seg_data~32 (
// Equation(s):
// \seg_data~32_combout  = (\wait_status~regout  & (((\Add11~15_combout ) # (\seg_data[0][1]~31_combout )))) # (!\wait_status~regout  & (\Add21~15_combout  & ((!\seg_data[0][1]~31_combout ))))

	.clk(gnd),
	.dataa(\wait_status~regout ),
	.datab(\Add21~15_combout ),
	.datac(\Add11~15_combout ),
	.datad(\seg_data[0][1]~31_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~32_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~32 .lut_mask = "aae4";
defparam \seg_data~32 .operation_mode = "normal";
defparam \seg_data~32 .output_mode = "comb_only";
defparam \seg_data~32 .register_cascade_mode = "off";
defparam \seg_data~32 .sum_lutc_input = "datac";
defparam \seg_data~32 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N7
maxii_lcell \seg_data~33 (
// Equation(s):
// \seg_data~33_combout  = (\seg_data[0][1]~31_combout  & ((\seg_data~32_combout  & (\Add12~0_combout )) # (!\seg_data~32_combout  & ((\Add22~0_combout ))))) # (!\seg_data[0][1]~31_combout  & (((\seg_data~32_combout ))))

	.clk(gnd),
	.dataa(\Add12~0_combout ),
	.datab(\Add22~0_combout ),
	.datac(\seg_data[0][1]~31_combout ),
	.datad(\seg_data~32_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~33_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~33 .lut_mask = "afc0";
defparam \seg_data~33 .operation_mode = "normal";
defparam \seg_data~33 .output_mode = "comb_only";
defparam \seg_data~33 .register_cascade_mode = "off";
defparam \seg_data~33 .sum_lutc_input = "datac";
defparam \seg_data~33 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N8
maxii_lcell \seg_data[0][0] (
// Equation(s):
// \seg_data[0][0]~regout  = DFFEAS((\always1~0_combout  & (((!\seg_data~24_combout  & !\seg_data~25_combout )) # (!\seg_data~33_combout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[0][0]~36_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\always1~0_combout ),
	.datab(\seg_data~24_combout ),
	.datac(\seg_data~25_combout ),
	.datad(\seg_data~33_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[0][0]~36_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[0][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[0][0] .lut_mask = "02aa";
defparam \seg_data[0][0] .operation_mode = "normal";
defparam \seg_data[0][0] .output_mode = "reg_only";
defparam \seg_data[0][0] .register_cascade_mode = "off";
defparam \seg_data[0][0] .sum_lutc_input = "datac";
defparam \seg_data[0][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N4
maxii_lcell \Add18~1 (
// Equation(s):
// \Add18~1_combout  = (\seg_data[0][1]~regout  $ (((\Myuan[0]~0_combout  & \seg_data[0][0]~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\Myuan[0]~0_combout ),
	.datac(\seg_data[0][1]~regout ),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add18~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add18~1 .lut_mask = "3cf0";
defparam \Add18~1 .operation_mode = "normal";
defparam \Add18~1 .output_mode = "comb_only";
defparam \Add18~1 .register_cascade_mode = "off";
defparam \Add18~1 .sum_lutc_input = "datac";
defparam \Add18~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N5
maxii_lcell \seg_data~47 (
// Equation(s):
// \seg_data~47_combout  = (\wait_status~regout  & (((\seg_data[0][1]~31_combout ) # (\Add11~5_combout )))) # (!\wait_status~regout  & (\Add21~5_combout  & (!\seg_data[0][1]~31_combout )))

	.clk(gnd),
	.dataa(\wait_status~regout ),
	.datab(\Add21~5_combout ),
	.datac(\seg_data[0][1]~31_combout ),
	.datad(\Add11~5_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~47_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~47 .lut_mask = "aea4";
defparam \seg_data~47 .operation_mode = "normal";
defparam \seg_data~47 .output_mode = "comb_only";
defparam \seg_data~47 .register_cascade_mode = "off";
defparam \seg_data~47 .sum_lutc_input = "datac";
defparam \seg_data~47 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N6
maxii_lcell \seg_data~48 (
// Equation(s):
// \seg_data~48_combout  = (\seg_data[0][1]~31_combout  & ((\seg_data~47_combout  & ((\Add12~5_combout ))) # (!\seg_data~47_combout  & (\Add22~5_combout )))) # (!\seg_data[0][1]~31_combout  & (((\seg_data~47_combout ))))

	.clk(gnd),
	.dataa(\Add22~5_combout ),
	.datab(\seg_data[0][1]~31_combout ),
	.datac(\Add12~5_combout ),
	.datad(\seg_data~47_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~48_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~48 .lut_mask = "f388";
defparam \seg_data~48 .operation_mode = "normal";
defparam \seg_data~48 .output_mode = "comb_only";
defparam \seg_data~48 .register_cascade_mode = "off";
defparam \seg_data~48 .sum_lutc_input = "datac";
defparam \seg_data~48 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y6_N7
maxii_lcell \seg_data[0][1] (
// Equation(s):
// \seg_data[0][1]~regout  = DFFEAS((\always1~0_combout  & ((\seg_data~34_combout  & ((!\seg_data~48_combout ))) # (!\seg_data~34_combout  & (!\seg_data~49_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[0][0]~36_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\always1~0_combout ),
	.datab(\seg_data~49_combout ),
	.datac(\seg_data~34_combout ),
	.datad(\seg_data~48_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[0][0]~36_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[0][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[0][1] .lut_mask = "02a2";
defparam \seg_data[0][1] .operation_mode = "normal";
defparam \seg_data[0][1] .output_mode = "reg_only";
defparam \seg_data[0][1] .register_cascade_mode = "off";
defparam \seg_data[0][1] .sum_lutc_input = "datac";
defparam \seg_data[0][1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N5
maxii_lcell \Add18~2 (
// Equation(s):
// \Add18~2_combout  = ((!\seg_data[0][1]~regout  & ((!\seg_data[0][0]~regout ) # (!\Myuan[0]~0_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\Myuan[0]~0_combout ),
	.datac(\seg_data[0][1]~regout ),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add18~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add18~2 .lut_mask = "030f";
defparam \Add18~2 .operation_mode = "normal";
defparam \Add18~2 .output_mode = "comb_only";
defparam \Add18~2 .register_cascade_mode = "off";
defparam \Add18~2 .sum_lutc_input = "datac";
defparam \Add18~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y6_N7
maxii_lcell \LessThan12~0 (
// Equation(s):
// \LessThan12~0_combout  = ((\Add21~0_combout  & ((\Add21~10_combout ) # (\Add21~5_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\Add21~10_combout ),
	.datac(\Add21~5_combout ),
	.datad(\Add21~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan12~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan12~0 .lut_mask = "fc00";
defparam \LessThan12~0 .operation_mode = "normal";
defparam \LessThan12~0 .output_mode = "comb_only";
defparam \LessThan12~0 .register_cascade_mode = "off";
defparam \LessThan12~0 .sum_lutc_input = "datac";
defparam \LessThan12~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y6_N0
maxii_lcell \seg_data~26 (
// Equation(s):
// \seg_data~26_combout  = (\seg_data~25_combout  & ((\LessThan4~0_combout ) # ((\LessThan12~0_combout  & \seg_data~24_combout )))) # (!\seg_data~25_combout  & (\LessThan12~0_combout  & (\seg_data~24_combout )))

	.clk(gnd),
	.dataa(\seg_data~25_combout ),
	.datab(\LessThan12~0_combout ),
	.datac(\seg_data~24_combout ),
	.datad(\LessThan4~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~26_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~26 .lut_mask = "eac0";
defparam \seg_data~26 .operation_mode = "normal";
defparam \seg_data~26 .output_mode = "comb_only";
defparam \seg_data~26 .register_cascade_mode = "off";
defparam \seg_data~26 .sum_lutc_input = "datac";
defparam \seg_data~26 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N6
maxii_lcell \seg_data[1][1]~45 (
// Equation(s):
// \seg_data[1][1]~45_combout  = (\mile_mcnt[9]~20_combout  & (((\seg_data~26_combout ) # (!\seg_data~28_combout )) # (!\always1~0_combout )))

	.clk(gnd),
	.dataa(\always1~0_combout ),
	.datab(\mile_mcnt[9]~20_combout ),
	.datac(\seg_data~28_combout ),
	.datad(\seg_data~26_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[1][1]~45_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[1][1]~45 .lut_mask = "cc4c";
defparam \seg_data[1][1]~45 .operation_mode = "normal";
defparam \seg_data[1][1]~45 .output_mode = "comb_only";
defparam \seg_data[1][1]~45 .register_cascade_mode = "off";
defparam \seg_data[1][1]~45 .sum_lutc_input = "datac";
defparam \seg_data[1][1]~45 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N4
maxii_lcell \seg_data[1][3] (
// Equation(s):
// \seg_data[1][3]~regout  = DFFEAS((\seg_data~43_combout  & (\seg_data[1][3]~regout  $ (((\Add24~0_combout  & \seg_data[1][2]~regout ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[1][1]~45_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\Add24~0_combout ),
	.datab(\seg_data[1][2]~regout ),
	.datac(\seg_data[1][3]~regout ),
	.datad(\seg_data~43_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[1][1]~45_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[1][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[1][3] .lut_mask = "7800";
defparam \seg_data[1][3] .operation_mode = "normal";
defparam \seg_data[1][3] .output_mode = "reg_only";
defparam \seg_data[1][3] .register_cascade_mode = "off";
defparam \seg_data[1][3] .sum_lutc_input = "datac";
defparam \seg_data[1][3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N2
maxii_lcell \seg_data~43 (
// Equation(s):
// \seg_data~43_combout  = (\always1~0_combout  & (\seg_data~26_combout  & ((!\Equal20~0_combout ) # (!\seg_data[1][3]~regout ))))

	.clk(gnd),
	.dataa(\always1~0_combout ),
	.datab(\seg_data[1][3]~regout ),
	.datac(\Equal20~0_combout ),
	.datad(\seg_data~26_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~43_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~43 .lut_mask = "2a00";
defparam \seg_data~43 .operation_mode = "normal";
defparam \seg_data~43 .output_mode = "comb_only";
defparam \seg_data~43 .register_cascade_mode = "off";
defparam \seg_data~43 .sum_lutc_input = "datac";
defparam \seg_data~43 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N7
maxii_lcell \seg_data[1][2] (
// Equation(s):
// \seg_data[1][2]~regout  = DFFEAS((\seg_data~43_combout  & (\seg_data[1][2]~regout  $ (((\seg_data[1][1]~regout  & !\seg_data[1][0]~regout ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[1][1]~45_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[1][1]~regout ),
	.datab(\seg_data[1][0]~regout ),
	.datac(\seg_data[1][2]~regout ),
	.datad(\seg_data~43_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[1][1]~45_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[1][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[1][2] .lut_mask = "d200";
defparam \seg_data[1][2] .operation_mode = "normal";
defparam \seg_data[1][2] .output_mode = "reg_only";
defparam \seg_data[1][2] .register_cascade_mode = "off";
defparam \seg_data[1][2] .sum_lutc_input = "datac";
defparam \seg_data[1][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N5
maxii_lcell \Equal20~0 (
// Equation(s):
// \Equal20~0_combout  = (!\seg_data[1][1]~regout  & (!\seg_data[1][2]~regout  & ((!\seg_data[1][0]~regout ))))

	.clk(gnd),
	.dataa(\seg_data[1][1]~regout ),
	.datab(\seg_data[1][2]~regout ),
	.datac(vcc),
	.datad(\seg_data[1][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal20~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal20~0 .lut_mask = "0011";
defparam \Equal20~0 .operation_mode = "normal";
defparam \Equal20~0 .output_mode = "comb_only";
defparam \Equal20~0 .register_cascade_mode = "off";
defparam \Equal20~0 .sum_lutc_input = "datac";
defparam \Equal20~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N4
maxii_lcell \always1~8 (
// Equation(s):
// \always1~8_combout  = (!\seg_data[6][2]~regout  & (\seg_data[5][3]~regout  & (\seg_data[6][0]~regout  & !\seg_data[6][1]~regout )))

	.clk(gnd),
	.dataa(\seg_data[6][2]~regout ),
	.datab(\seg_data[5][3]~regout ),
	.datac(\seg_data[6][0]~regout ),
	.datad(\seg_data[6][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~8 .lut_mask = "0040";
defparam \always1~8 .operation_mode = "normal";
defparam \always1~8 .output_mode = "comb_only";
defparam \always1~8 .register_cascade_mode = "off";
defparam \always1~8 .sum_lutc_input = "datac";
defparam \always1~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y6_N7
maxii_lcell \Equal1~0 (
// Equation(s):
// \Equal1~0_combout  = (((!sub_cnt[1] & sub_cnt[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(sub_cnt[1]),
	.datad(sub_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal1~0 .lut_mask = "0f00";
defparam \Equal1~0 .operation_mode = "normal";
defparam \Equal1~0 .output_mode = "comb_only";
defparam \Equal1~0 .register_cascade_mode = "off";
defparam \Equal1~0 .sum_lutc_input = "datac";
defparam \Equal1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N9
maxii_lcell \seg_data[2][0]~23 (
// Equation(s):
// \seg_data[2][0]~23_combout  = ((\stop_cnt~regout ) # ((\Equal1~0_combout ) # (!\Equal20~0_combout ))) # (!\seg_data[1][3]~regout )

	.clk(gnd),
	.dataa(\seg_data[1][3]~regout ),
	.datab(\stop_cnt~regout ),
	.datac(\Equal1~0_combout ),
	.datad(\Equal20~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[2][0]~23_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[2][0]~23 .lut_mask = "fdff";
defparam \seg_data[2][0]~23 .operation_mode = "normal";
defparam \seg_data[2][0]~23 .output_mode = "comb_only";
defparam \seg_data[2][0]~23 .register_cascade_mode = "off";
defparam \seg_data[2][0]~23 .sum_lutc_input = "datac";
defparam \seg_data[2][0]~23 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y9_N0
maxii_lcell \seg_data[2][0]~27 (
// Equation(s):
// \seg_data[2][0]~27_combout  = (!\rst~combout  & (((!\seg_data[2][0]~23_combout  & \seg_data~26_combout )) # (!\onride~combout )))

	.clk(gnd),
	.dataa(\rst~combout ),
	.datab(\onride~combout ),
	.datac(\seg_data[2][0]~23_combout ),
	.datad(\seg_data~26_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data[2][0]~27_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[2][0]~27 .lut_mask = "1511";
defparam \seg_data[2][0]~27 .operation_mode = "normal";
defparam \seg_data[2][0]~27 .output_mode = "comb_only";
defparam \seg_data[2][0]~27 .register_cascade_mode = "off";
defparam \seg_data[2][0]~27 .sum_lutc_input = "datac";
defparam \seg_data[2][0]~27 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y9_N7
maxii_lcell \seg_data[2][0] (
// Equation(s):
// \seg_data[2][0]~regout  = DFFEAS((((!\seg_data[2][0]~regout  & \always1~0_combout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[2][0]~27_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[2][0]~regout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[2][0]~27_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[2][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[2][0] .lut_mask = "0f00";
defparam \seg_data[2][0] .operation_mode = "normal";
defparam \seg_data[2][0] .output_mode = "reg_only";
defparam \seg_data[2][0] .register_cascade_mode = "off";
defparam \seg_data[2][0] .sum_lutc_input = "datac";
defparam \seg_data[2][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y9_N8
maxii_lcell \seg_data[2][1] (
// Equation(s):
// \seg_data[2][1]~regout  = DFFEAS(((\always1~0_combout  & (\seg_data[2][1]~regout  $ (\seg_data[2][0]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[2][0]~27_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[2][1]~regout ),
	.datab(vcc),
	.datac(\seg_data[2][0]~regout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[2][0]~27_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[2][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[2][1] .lut_mask = "5a00";
defparam \seg_data[2][1] .operation_mode = "normal";
defparam \seg_data[2][1] .output_mode = "reg_only";
defparam \seg_data[2][1] .register_cascade_mode = "off";
defparam \seg_data[2][1] .sum_lutc_input = "datac";
defparam \seg_data[2][1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y9_N1
maxii_lcell \Add23~0 (
// Equation(s):
// \Add23~0_combout  = (\seg_data[2][1]~regout  & (((\seg_data[2][0]~regout ))))

	.clk(gnd),
	.dataa(\seg_data[2][1]~regout ),
	.datab(vcc),
	.datac(\seg_data[2][0]~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add23~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add23~0 .lut_mask = "a0a0";
defparam \Add23~0 .operation_mode = "normal";
defparam \Add23~0 .output_mode = "comb_only";
defparam \Add23~0 .register_cascade_mode = "off";
defparam \Add23~0 .sum_lutc_input = "datac";
defparam \Add23~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y9_N9
maxii_lcell \seg_data[2][2] (
// Equation(s):
// \seg_data[2][2]~regout  = DFFEAS((\always1~0_combout  & (\seg_data[2][2]~regout  $ (((\seg_data[2][1]~regout  & \seg_data[2][0]~regout ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[2][0]~27_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[2][1]~regout ),
	.datab(\seg_data[2][2]~regout ),
	.datac(\seg_data[2][0]~regout ),
	.datad(\always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[2][0]~27_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[2][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[2][2] .lut_mask = "6c00";
defparam \seg_data[2][2] .operation_mode = "normal";
defparam \seg_data[2][2] .output_mode = "reg_only";
defparam \seg_data[2][2] .register_cascade_mode = "off";
defparam \seg_data[2][2] .sum_lutc_input = "datac";
defparam \seg_data[2][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y9_N5
maxii_lcell \seg_data[2][3] (
// Equation(s):
// \seg_data[2][3]~regout  = DFFEAS((\always1~0_combout  & (\seg_data[2][3]~regout  $ (((\Add23~0_combout  & \seg_data[2][2]~regout ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[2][0]~27_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\always1~0_combout ),
	.datab(\Add23~0_combout ),
	.datac(\seg_data[2][3]~regout ),
	.datad(\seg_data[2][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[2][0]~27_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[2][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[2][3] .lut_mask = "28a0";
defparam \seg_data[2][3] .operation_mode = "normal";
defparam \seg_data[2][3] .output_mode = "reg_only";
defparam \seg_data[2][3] .register_cascade_mode = "off";
defparam \seg_data[2][3] .sum_lutc_input = "datac";
defparam \seg_data[2][3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y9_N6
maxii_lcell \always1~9 (
// Equation(s):
// \always1~9_combout  = (!\seg_data[2][3]~regout  & (!\seg_data[2][2]~regout  & (\seg_data[5][0]~regout  & !\seg_data[2][1]~regout )))

	.clk(gnd),
	.dataa(\seg_data[2][3]~regout ),
	.datab(\seg_data[2][2]~regout ),
	.datac(\seg_data[5][0]~regout ),
	.datad(\seg_data[2][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~9 .lut_mask = "0010";
defparam \always1~9 .operation_mode = "normal";
defparam \always1~9 .output_mode = "comb_only";
defparam \always1~9 .register_cascade_mode = "off";
defparam \always1~9 .sum_lutc_input = "datac";
defparam \always1~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y8_N8
maxii_lcell \always1~10 (
// Equation(s):
// \always1~10_combout  = (!\seg_data[0][3]~regout  & (!\seg_data[0][2]~regout  & (!\seg_data[1][3]~regout  & !\seg_data[2][0]~regout )))

	.clk(gnd),
	.dataa(\seg_data[0][3]~regout ),
	.datab(\seg_data[0][2]~regout ),
	.datac(\seg_data[1][3]~regout ),
	.datad(\seg_data[2][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~10 .lut_mask = "0001";
defparam \always1~10 .operation_mode = "normal";
defparam \always1~10 .output_mode = "comb_only";
defparam \always1~10 .register_cascade_mode = "off";
defparam \always1~10 .sum_lutc_input = "datac";
defparam \always1~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y9_N3
maxii_lcell \always1~11 (
// Equation(s):
// \always1~11_combout  = (((!\seg_data[0][1]~regout  & !\seg_data[0][0]~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[0][1]~regout ),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~11 .lut_mask = "000f";
defparam \always1~11 .operation_mode = "normal";
defparam \always1~11 .output_mode = "comb_only";
defparam \always1~11 .register_cascade_mode = "off";
defparam \always1~11 .sum_lutc_input = "datac";
defparam \always1~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N0
maxii_lcell \always1~12 (
// Equation(s):
// \always1~12_combout  = (\always1~8_combout  & (\always1~9_combout  & (\always1~10_combout  & \always1~11_combout )))

	.clk(gnd),
	.dataa(\always1~8_combout ),
	.datab(\always1~9_combout ),
	.datac(\always1~10_combout ),
	.datad(\always1~11_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~12 .lut_mask = "8000";
defparam \always1~12 .operation_mode = "normal";
defparam \always1~12 .output_mode = "comb_only";
defparam \always1~12 .register_cascade_mode = "off";
defparam \always1~12 .sum_lutc_input = "datac";
defparam \always1~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N8
maxii_lcell \always1~7 (
// Equation(s):
// \always1~7_combout  = (!\seg_data[3][3]~regout  & (!\seg_data[3][0]~regout  & (\always1~4_combout  & \always1~3_combout )))

	.clk(gnd),
	.dataa(\seg_data[3][3]~regout ),
	.datab(\seg_data[3][0]~regout ),
	.datac(\always1~4_combout ),
	.datad(\always1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~7 .lut_mask = "1000";
defparam \always1~7 .operation_mode = "normal";
defparam \always1~7 .output_mode = "comb_only";
defparam \always1~7 .register_cascade_mode = "off";
defparam \always1~7 .sum_lutc_input = "datac";
defparam \always1~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N6
maxii_lcell \always1~13 (
// Equation(s):
// \always1~13_combout  = (\seg_data[6][3]~regout  & (\Equal20~0_combout  & (\always1~12_combout  & \always1~7_combout )))

	.clk(gnd),
	.dataa(\seg_data[6][3]~regout ),
	.datab(\Equal20~0_combout ),
	.datac(\always1~12_combout ),
	.datad(\always1~7_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~13 .lut_mask = "8000";
defparam \always1~13 .operation_mode = "normal";
defparam \always1~13 .output_mode = "comb_only";
defparam \always1~13 .register_cascade_mode = "off";
defparam \always1~13 .sum_lutc_input = "datac";
defparam \always1~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y5_N1
maxii_lcell \seg_data~28 (
// Equation(s):
// \seg_data~28_combout  = ((\night~combout ) # ((!\always1~13_combout ) # (!\Equal8~0_combout ))) # (!\double~combout )

	.clk(gnd),
	.dataa(\double~combout ),
	.datab(\night~combout ),
	.datac(\Equal8~0_combout ),
	.datad(\always1~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~28_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~28 .lut_mask = "dfff";
defparam \seg_data~28 .operation_mode = "normal";
defparam \seg_data~28 .output_mode = "comb_only";
defparam \seg_data~28 .register_cascade_mode = "off";
defparam \seg_data~28 .sum_lutc_input = "datac";
defparam \seg_data~28 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N1
maxii_lcell \seg_data~29 (
// Equation(s):
// \seg_data~29_combout  = (\seg_data[1][0]~regout  & (((\always1~0_combout  & \seg_data~26_combout )))) # (!\seg_data[1][0]~regout  & (\seg_data~28_combout  & ((!\seg_data~26_combout ))))

	.clk(gnd),
	.dataa(\seg_data[1][0]~regout ),
	.datab(\seg_data~28_combout ),
	.datac(\always1~0_combout ),
	.datad(\seg_data~26_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_data~29_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data~29 .lut_mask = "a044";
defparam \seg_data~29 .operation_mode = "normal";
defparam \seg_data~29 .output_mode = "comb_only";
defparam \seg_data~29 .register_cascade_mode = "off";
defparam \seg_data~29 .sum_lutc_input = "datac";
defparam \seg_data~29 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y5_N0
maxii_lcell \seg_data[1][0] (
// Equation(s):
// \seg_data[1][0]~regout  = DFFEAS((!\seg_data~29_combout  & ((\always1~0_combout ) # ((\onride~combout  & \seg_data[1][0]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\onride~combout ),
	.datab(\seg_data[1][0]~regout ),
	.datac(\always1~0_combout ),
	.datad(\seg_data~29_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[1][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[1][0] .lut_mask = "00f8";
defparam \seg_data[1][0] .operation_mode = "normal";
defparam \seg_data[1][0] .output_mode = "reg_only";
defparam \seg_data[1][0] .register_cascade_mode = "off";
defparam \seg_data[1][0] .sum_lutc_input = "datac";
defparam \seg_data[1][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N3
maxii_lcell \seg_data[1][1] (
// Equation(s):
// \seg_data[1][1]~regout  = DFFEAS(((\seg_data~43_combout  & (\seg_data[1][1]~regout  $ (!\seg_data[1][0]~regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \seg_data[1][1]~45_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\seg_data[1][1]~regout ),
	.datab(\seg_data[1][0]~regout ),
	.datac(vcc),
	.datad(\seg_data~43_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\seg_data[1][1]~45_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\seg_data[1][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_data[1][1] .lut_mask = "9900";
defparam \seg_data[1][1] .operation_mode = "normal";
defparam \seg_data[1][1] .output_mode = "reg_only";
defparam \seg_data[1][1] .register_cascade_mode = "off";
defparam \seg_data[1][1] .sum_lutc_input = "datac";
defparam \seg_data[1][1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y7_N6
maxii_lcell \Mux2~2 (
// Equation(s):
// \Mux2~2_combout  = (seg_cnt[1] & ((\seg_data[2][1]~regout ) # ((seg_cnt[0])))) # (!seg_cnt[1] & (((!seg_cnt[0] & !\seg_data[0][1]~regout ))))

	.clk(gnd),
	.dataa(seg_cnt[1]),
	.datab(\seg_data[2][1]~regout ),
	.datac(seg_cnt[0]),
	.datad(\seg_data[0][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux2~2 .lut_mask = "a8ad";
defparam \Mux2~2 .operation_mode = "normal";
defparam \Mux2~2 .output_mode = "comb_only";
defparam \Mux2~2 .register_cascade_mode = "off";
defparam \Mux2~2 .sum_lutc_input = "datac";
defparam \Mux2~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y7_N7
maxii_lcell \Mux2~3 (
// Equation(s):
// \Mux2~3_combout  = (seg_cnt[0] & ((\Mux2~2_combout  & (\seg_data[3][1]~regout )) # (!\Mux2~2_combout  & ((\seg_data[1][1]~regout ))))) # (!seg_cnt[0] & (((\Mux2~2_combout ))))

	.clk(gnd),
	.dataa(\seg_data[3][1]~regout ),
	.datab(seg_cnt[0]),
	.datac(\seg_data[1][1]~regout ),
	.datad(\Mux2~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux2~3 .lut_mask = "bbc0";
defparam \Mux2~3 .operation_mode = "normal";
defparam \Mux2~3 .output_mode = "comb_only";
defparam \Mux2~3 .register_cascade_mode = "off";
defparam \Mux2~3 .sum_lutc_input = "datac";
defparam \Mux2~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y8_N7
maxii_lcell \Mux2~0 (
// Equation(s):
// \Mux2~0_combout  = (seg_cnt[1] & (((seg_cnt[0])))) # (!seg_cnt[1] & ((seg_cnt[0] & (\seg_data[5][1]~regout )) # (!seg_cnt[0] & ((\seg_data[4][1]~regout )))))

	.clk(gnd),
	.dataa(\seg_data[5][1]~regout ),
	.datab(seg_cnt[1]),
	.datac(seg_cnt[0]),
	.datad(\seg_data[4][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux2~0 .lut_mask = "e3e0";
defparam \Mux2~0 .operation_mode = "normal";
defparam \Mux2~0 .output_mode = "comb_only";
defparam \Mux2~0 .register_cascade_mode = "off";
defparam \Mux2~0 .sum_lutc_input = "datac";
defparam \Mux2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y8_N8
maxii_lcell \Mux2~1 (
// Equation(s):
// \Mux2~1_combout  = (seg_cnt[1] & ((\Mux2~0_combout  & (\seg_data[7][1]~regout )) # (!\Mux2~0_combout  & ((\seg_data[6][1]~regout ))))) # (!seg_cnt[1] & (((\Mux2~0_combout ))))

	.clk(gnd),
	.dataa(\seg_data[7][1]~regout ),
	.datab(seg_cnt[1]),
	.datac(\seg_data[6][1]~regout ),
	.datad(\Mux2~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux2~1 .lut_mask = "bbc0";
defparam \Mux2~1 .operation_mode = "normal";
defparam \Mux2~1 .output_mode = "comb_only";
defparam \Mux2~1 .register_cascade_mode = "off";
defparam \Mux2~1 .sum_lutc_input = "datac";
defparam \Mux2~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y7_N3
maxii_lcell \Mux2~4 (
// Equation(s):
// \Mux2~4_combout  = ((seg_cnt[2] & ((\Mux2~1_combout ))) # (!seg_cnt[2] & (\Mux2~3_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(seg_cnt[2]),
	.datac(\Mux2~3_combout ),
	.datad(\Mux2~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux2~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux2~4 .lut_mask = "fc30";
defparam \Mux2~4 .operation_mode = "normal";
defparam \Mux2~4 .output_mode = "comb_only";
defparam \Mux2~4 .register_cascade_mode = "off";
defparam \Mux2~4 .sum_lutc_input = "datac";
defparam \Mux2~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N6
maxii_lcell \Mux1~0 (
// Equation(s):
// \Mux1~0_combout  = (seg_cnt[1] & (((seg_cnt[0])))) # (!seg_cnt[1] & ((seg_cnt[0] & (\seg_data[5][2]~regout )) # (!seg_cnt[0] & ((\seg_data[4][2]~regout )))))

	.clk(gnd),
	.dataa(\seg_data[5][2]~regout ),
	.datab(seg_cnt[1]),
	.datac(\seg_data[4][2]~regout ),
	.datad(seg_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux1~0 .lut_mask = "ee30";
defparam \Mux1~0 .operation_mode = "normal";
defparam \Mux1~0 .output_mode = "comb_only";
defparam \Mux1~0 .register_cascade_mode = "off";
defparam \Mux1~0 .sum_lutc_input = "datac";
defparam \Mux1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y7_N9
maxii_lcell \Mux1~1 (
// Equation(s):
// \Mux1~1_combout  = (seg_cnt[1] & ((\Mux1~0_combout  & ((\seg_data[7][2]~regout ))) # (!\Mux1~0_combout  & (\seg_data[6][2]~regout )))) # (!seg_cnt[1] & (((\Mux1~0_combout ))))

	.clk(gnd),
	.dataa(\seg_data[6][2]~regout ),
	.datab(seg_cnt[1]),
	.datac(\seg_data[7][2]~regout ),
	.datad(\Mux1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux1~1 .lut_mask = "f388";
defparam \Mux1~1 .operation_mode = "normal";
defparam \Mux1~1 .output_mode = "comb_only";
defparam \Mux1~1 .register_cascade_mode = "off";
defparam \Mux1~1 .sum_lutc_input = "datac";
defparam \Mux1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y8_N4
maxii_lcell \Mux1~2 (
// Equation(s):
// \Mux1~2_combout  = (seg_cnt[1] & ((\seg_data[2][2]~regout ) # ((seg_cnt[0])))) # (!seg_cnt[1] & (((!seg_cnt[0] & \seg_data[0][2]~regout ))))

	.clk(gnd),
	.dataa(\seg_data[2][2]~regout ),
	.datab(seg_cnt[1]),
	.datac(seg_cnt[0]),
	.datad(\seg_data[0][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux1~2 .lut_mask = "cbc8";
defparam \Mux1~2 .operation_mode = "normal";
defparam \Mux1~2 .output_mode = "comb_only";
defparam \Mux1~2 .register_cascade_mode = "off";
defparam \Mux1~2 .sum_lutc_input = "datac";
defparam \Mux1~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y8_N7
maxii_lcell \Mux1~3 (
// Equation(s):
// \Mux1~3_combout  = (\Mux1~2_combout  & ((\seg_data[3][2]~regout ) # ((!seg_cnt[0])))) # (!\Mux1~2_combout  & (((\seg_data[1][2]~regout  & seg_cnt[0]))))

	.clk(gnd),
	.dataa(\Mux1~2_combout ),
	.datab(\seg_data[3][2]~regout ),
	.datac(\seg_data[1][2]~regout ),
	.datad(seg_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux1~3 .lut_mask = "d8aa";
defparam \Mux1~3 .operation_mode = "normal";
defparam \Mux1~3 .output_mode = "comb_only";
defparam \Mux1~3 .register_cascade_mode = "off";
defparam \Mux1~3 .sum_lutc_input = "datac";
defparam \Mux1~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y7_N8
maxii_lcell \Mux1~4 (
// Equation(s):
// \Mux1~4_combout  = ((seg_cnt[2] & (\Mux1~1_combout )) # (!seg_cnt[2] & ((\Mux1~3_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(seg_cnt[2]),
	.datac(\Mux1~1_combout ),
	.datad(\Mux1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux1~4 .lut_mask = "f3c0";
defparam \Mux1~4 .operation_mode = "normal";
defparam \Mux1~4 .output_mode = "comb_only";
defparam \Mux1~4 .register_cascade_mode = "off";
defparam \Mux1~4 .sum_lutc_input = "datac";
defparam \Mux1~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N4
maxii_lcell \Mux0~0 (
// Equation(s):
// \Mux0~0_combout  = (seg_cnt[1] & (((seg_cnt[0])))) # (!seg_cnt[1] & ((seg_cnt[0] & (!\seg_data[5][3]~regout )) # (!seg_cnt[0] & ((\seg_data[4][3]~regout )))))

	.clk(gnd),
	.dataa(\seg_data[5][3]~regout ),
	.datab(seg_cnt[1]),
	.datac(\seg_data[4][3]~regout ),
	.datad(seg_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux0~0 .lut_mask = "dd30";
defparam \Mux0~0 .operation_mode = "normal";
defparam \Mux0~0 .output_mode = "comb_only";
defparam \Mux0~0 .register_cascade_mode = "off";
defparam \Mux0~0 .sum_lutc_input = "datac";
defparam \Mux0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N2
maxii_lcell \Mux0~1 (
// Equation(s):
// \Mux0~1_combout  = (\Mux0~0_combout  & (((!\seg_data[7][3]~regout )) # (!seg_cnt[1]))) # (!\Mux0~0_combout  & (seg_cnt[1] & (!\seg_data[6][3]~regout )))

	.clk(gnd),
	.dataa(\Mux0~0_combout ),
	.datab(seg_cnt[1]),
	.datac(\seg_data[6][3]~regout ),
	.datad(\seg_data[7][3]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux0~1 .lut_mask = "26ae";
defparam \Mux0~1 .operation_mode = "normal";
defparam \Mux0~1 .output_mode = "comb_only";
defparam \Mux0~1 .register_cascade_mode = "off";
defparam \Mux0~1 .sum_lutc_input = "datac";
defparam \Mux0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y8_N0
maxii_lcell \Mux0~2 (
// Equation(s):
// \Mux0~2_combout  = (seg_cnt[1] & ((\seg_data[2][3]~regout ) # ((seg_cnt[0])))) # (!seg_cnt[1] & (((\seg_data[0][3]~regout  & !seg_cnt[0]))))

	.clk(gnd),
	.dataa(seg_cnt[1]),
	.datab(\seg_data[2][3]~regout ),
	.datac(\seg_data[0][3]~regout ),
	.datad(seg_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux0~2 .lut_mask = "aad8";
defparam \Mux0~2 .operation_mode = "normal";
defparam \Mux0~2 .output_mode = "comb_only";
defparam \Mux0~2 .register_cascade_mode = "off";
defparam \Mux0~2 .sum_lutc_input = "datac";
defparam \Mux0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y8_N1
maxii_lcell \Mux0~3 (
// Equation(s):
// \Mux0~3_combout  = (\Mux0~2_combout  & (((\seg_data[3][3]~regout ) # (!seg_cnt[0])))) # (!\Mux0~2_combout  & (\seg_data[1][3]~regout  & ((seg_cnt[0]))))

	.clk(gnd),
	.dataa(\seg_data[1][3]~regout ),
	.datab(\Mux0~2_combout ),
	.datac(\seg_data[3][3]~regout ),
	.datad(seg_cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux0~3 .lut_mask = "e2cc";
defparam \Mux0~3 .operation_mode = "normal";
defparam \Mux0~3 .output_mode = "comb_only";
defparam \Mux0~3 .register_cascade_mode = "off";
defparam \Mux0~3 .sum_lutc_input = "datac";
defparam \Mux0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y7_N1
maxii_lcell \Mux0~4 (
// Equation(s):
// \Mux0~4_combout  = ((seg_cnt[2] & (\Mux0~1_combout )) # (!seg_cnt[2] & ((\Mux0~3_combout ))))

	.clk(gnd),
	.dataa(\Mux0~1_combout ),
	.datab(\Mux0~3_combout ),
	.datac(vcc),
	.datad(seg_cnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux0~4 .lut_mask = "aacc";
defparam \Mux0~4 .operation_mode = "normal";
defparam \Mux0~4 .output_mode = "comb_only";
defparam \Mux0~4 .register_cascade_mode = "off";
defparam \Mux0~4 .sum_lutc_input = "datac";
defparam \Mux0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y8_N3
maxii_lcell \Mux3~2 (
// Equation(s):
// \Mux3~2_combout  = (seg_cnt[1] & (((seg_cnt[0])))) # (!seg_cnt[1] & ((seg_cnt[0] & (!\seg_data[1][0]~regout )) # (!seg_cnt[0] & ((!\seg_data[0][0]~regout )))))

	.clk(gnd),
	.dataa(seg_cnt[1]),
	.datab(\seg_data[1][0]~regout ),
	.datac(seg_cnt[0]),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux3~2 .lut_mask = "b0b5";
defparam \Mux3~2 .operation_mode = "normal";
defparam \Mux3~2 .output_mode = "comb_only";
defparam \Mux3~2 .register_cascade_mode = "off";
defparam \Mux3~2 .sum_lutc_input = "datac";
defparam \Mux3~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y8_N9
maxii_lcell \Mux3~3 (
// Equation(s):
// \Mux3~3_combout  = (seg_cnt[1] & ((\Mux3~2_combout  & ((\seg_data[3][0]~regout ))) # (!\Mux3~2_combout  & (\seg_data[2][0]~regout )))) # (!seg_cnt[1] & (((\Mux3~2_combout ))))

	.clk(gnd),
	.dataa(\seg_data[2][0]~regout ),
	.datab(seg_cnt[1]),
	.datac(\seg_data[3][0]~regout ),
	.datad(\Mux3~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux3~3 .lut_mask = "f388";
defparam \Mux3~3 .operation_mode = "normal";
defparam \Mux3~3 .output_mode = "comb_only";
defparam \Mux3~3 .register_cascade_mode = "off";
defparam \Mux3~3 .sum_lutc_input = "datac";
defparam \Mux3~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y7_N5
maxii_lcell \Mux3~0 (
// Equation(s):
// \Mux3~0_combout  = (seg_cnt[0] & (((seg_cnt[1]) # (!\seg_data[5][0]~regout )))) # (!seg_cnt[0] & (\seg_data[4][0]~regout  & (!seg_cnt[1])))

	.clk(gnd),
	.dataa(seg_cnt[0]),
	.datab(\seg_data[4][0]~regout ),
	.datac(seg_cnt[1]),
	.datad(\seg_data[5][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux3~0 .lut_mask = "a4ae";
defparam \Mux3~0 .operation_mode = "normal";
defparam \Mux3~0 .output_mode = "comb_only";
defparam \Mux3~0 .register_cascade_mode = "off";
defparam \Mux3~0 .sum_lutc_input = "datac";
defparam \Mux3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y7_N9
maxii_lcell \Mux3~1 (
// Equation(s):
// \Mux3~1_combout  = (\Mux3~0_combout  & (((!seg_cnt[1])) # (!\seg_data[7][0]~regout ))) # (!\Mux3~0_combout  & (((!\seg_data[6][0]~regout  & seg_cnt[1]))))

	.clk(gnd),
	.dataa(\Mux3~0_combout ),
	.datab(\seg_data[7][0]~regout ),
	.datac(\seg_data[6][0]~regout ),
	.datad(seg_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux3~1 .lut_mask = "27aa";
defparam \Mux3~1 .operation_mode = "normal";
defparam \Mux3~1 .output_mode = "comb_only";
defparam \Mux3~1 .register_cascade_mode = "off";
defparam \Mux3~1 .sum_lutc_input = "datac";
defparam \Mux3~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y7_N6
maxii_lcell \Mux3~4 (
// Equation(s):
// \Mux3~4_combout  = ((seg_cnt[2] & ((\Mux3~1_combout ))) # (!seg_cnt[2] & (\Mux3~3_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(seg_cnt[2]),
	.datac(\Mux3~3_combout ),
	.datad(\Mux3~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Mux3~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Mux3~4 .lut_mask = "fc30";
defparam \Mux3~4 .operation_mode = "normal";
defparam \Mux3~4 .output_mode = "comb_only";
defparam \Mux3~4 .register_cascade_mode = "off";
defparam \Mux3~4 .sum_lutc_input = "datac";
defparam \Mux3~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N9
maxii_lcell \seg_high|seg~0 (
// Equation(s):
// \seg_high|seg~0_combout  = (\Mux2~4_combout  & (((\Mux0~4_combout )))) # (!\Mux2~4_combout  & (\Mux1~4_combout  $ (((!\Mux0~4_combout  & \Mux3~4_combout )))))

	.clk(gnd),
	.dataa(\Mux2~4_combout ),
	.datab(\Mux1~4_combout ),
	.datac(\Mux0~4_combout ),
	.datad(\Mux3~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_high|seg~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_high|seg~0 .lut_mask = "e1e4";
defparam \seg_high|seg~0 .operation_mode = "normal";
defparam \seg_high|seg~0 .output_mode = "comb_only";
defparam \seg_high|seg~0 .register_cascade_mode = "off";
defparam \seg_high|seg~0 .sum_lutc_input = "datac";
defparam \seg_high|seg~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N0
maxii_lcell \seg_high|seg~1 (
// Equation(s):
// \seg_high|seg~1_combout  = (\Mux1~4_combout  & ((\Mux0~4_combout ) # (\Mux2~4_combout  $ (\Mux3~4_combout )))) # (!\Mux1~4_combout  & (\Mux2~4_combout  & (\Mux0~4_combout )))

	.clk(gnd),
	.dataa(\Mux2~4_combout ),
	.datab(\Mux1~4_combout ),
	.datac(\Mux0~4_combout ),
	.datad(\Mux3~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_high|seg~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_high|seg~1 .lut_mask = "e4e8";
defparam \seg_high|seg~1 .operation_mode = "normal";
defparam \seg_high|seg~1 .output_mode = "comb_only";
defparam \seg_high|seg~1 .register_cascade_mode = "off";
defparam \seg_high|seg~1 .sum_lutc_input = "datac";
defparam \seg_high|seg~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N2
maxii_lcell \seg_high|seg~2 (
// Equation(s):
// \seg_high|seg~2_combout  = (\Mux1~4_combout  & (((\Mux0~4_combout )))) # (!\Mux1~4_combout  & (\Mux2~4_combout  & ((\Mux0~4_combout ) # (!\Mux3~4_combout ))))

	.clk(gnd),
	.dataa(\Mux2~4_combout ),
	.datab(\Mux1~4_combout ),
	.datac(\Mux0~4_combout ),
	.datad(\Mux3~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_high|seg~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_high|seg~2 .lut_mask = "e0e2";
defparam \seg_high|seg~2 .operation_mode = "normal";
defparam \seg_high|seg~2 .output_mode = "comb_only";
defparam \seg_high|seg~2 .register_cascade_mode = "off";
defparam \seg_high|seg~2 .sum_lutc_input = "datac";
defparam \seg_high|seg~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N5
maxii_lcell \seg_high|seg~3 (
// Equation(s):
// \seg_high|seg~3_combout  = (\Mux2~4_combout  & ((\Mux0~4_combout ) # ((\Mux1~4_combout  & \Mux3~4_combout )))) # (!\Mux2~4_combout  & (\Mux1~4_combout  $ (((!\Mux0~4_combout  & \Mux3~4_combout )))))

	.clk(gnd),
	.dataa(\Mux2~4_combout ),
	.datab(\Mux1~4_combout ),
	.datac(\Mux0~4_combout ),
	.datad(\Mux3~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_high|seg~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_high|seg~3 .lut_mask = "e9e4";
defparam \seg_high|seg~3 .operation_mode = "normal";
defparam \seg_high|seg~3 .output_mode = "comb_only";
defparam \seg_high|seg~3 .register_cascade_mode = "off";
defparam \seg_high|seg~3 .sum_lutc_input = "datac";
defparam \seg_high|seg~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N6
maxii_lcell \seg_high|seg~4 (
// Equation(s):
// \seg_high|seg~4_combout  = (\Mux3~4_combout ) # ((\Mux2~4_combout  & ((\Mux0~4_combout ))) # (!\Mux2~4_combout  & (\Mux1~4_combout )))

	.clk(gnd),
	.dataa(\Mux2~4_combout ),
	.datab(\Mux1~4_combout ),
	.datac(\Mux0~4_combout ),
	.datad(\Mux3~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_high|seg~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_high|seg~4 .lut_mask = "ffe4";
defparam \seg_high|seg~4 .operation_mode = "normal";
defparam \seg_high|seg~4 .output_mode = "comb_only";
defparam \seg_high|seg~4 .register_cascade_mode = "off";
defparam \seg_high|seg~4 .sum_lutc_input = "datac";
defparam \seg_high|seg~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N7
maxii_lcell \seg_high|seg~5 (
// Equation(s):
// \seg_high|seg~5_combout  = (\Mux1~4_combout  & ((\Mux0~4_combout ) # ((\Mux2~4_combout  & \Mux3~4_combout )))) # (!\Mux1~4_combout  & ((\Mux2~4_combout ) # ((!\Mux0~4_combout  & \Mux3~4_combout ))))

	.clk(gnd),
	.dataa(\Mux2~4_combout ),
	.datab(\Mux1~4_combout ),
	.datac(\Mux0~4_combout ),
	.datad(\Mux3~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_high|seg~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_high|seg~5 .lut_mask = "ebe2";
defparam \seg_high|seg~5 .operation_mode = "normal";
defparam \seg_high|seg~5 .output_mode = "comb_only";
defparam \seg_high|seg~5 .register_cascade_mode = "off";
defparam \seg_high|seg~5 .sum_lutc_input = "datac";
defparam \seg_high|seg~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y4_N8
maxii_lcell \seg_high|seg~6 (
// Equation(s):
// \seg_high|seg~6_combout  = (\Mux2~4_combout  & (!\Mux0~4_combout  & ((!\Mux3~4_combout ) # (!\Mux1~4_combout )))) # (!\Mux2~4_combout  & (\Mux1~4_combout  $ ((\Mux0~4_combout ))))

	.clk(gnd),
	.dataa(\Mux2~4_combout ),
	.datab(\Mux1~4_combout ),
	.datac(\Mux0~4_combout ),
	.datad(\Mux3~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\seg_high|seg~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \seg_high|seg~6 .lut_mask = "161e";
defparam \seg_high|seg~6 .operation_mode = "normal";
defparam \seg_high|seg~6 .output_mode = "comb_only";
defparam \seg_high|seg~6 .register_cascade_mode = "off";
defparam \seg_high|seg~6 .sum_lutc_input = "datac";
defparam \seg_high|seg~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y3_N3
maxii_lcell \speedLED|led[1]~0 (
// Equation(s):
// \speedLED|led[1]~0_combout  = ((!mile_speed[0] & (!mile_speed[1] & !mile_speed[2]))) # (!\onride~combout )

	.clk(gnd),
	.dataa(mile_speed[0]),
	.datab(mile_speed[1]),
	.datac(mile_speed[2]),
	.datad(\onride~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\speedLED|led[1]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \speedLED|led[1]~0 .lut_mask = "01ff";
defparam \speedLED|led[1]~0 .operation_mode = "normal";
defparam \speedLED|led[1]~0 .output_mode = "comb_only";
defparam \speedLED|led[1]~0 .register_cascade_mode = "off";
defparam \speedLED|led[1]~0 .sum_lutc_input = "datac";
defparam \speedLED|led[1]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y3_N4
maxii_lcell \speedLED|led[2]~1 (
// Equation(s):
// \speedLED|led[2]~1_combout  = ((!mile_speed[1] & (!mile_speed[2]))) # (!\onride~combout )

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(mile_speed[1]),
	.datac(mile_speed[2]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\speedLED|led[2]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \speedLED|led[2]~1 .lut_mask = "5757";
defparam \speedLED|led[2]~1 .operation_mode = "normal";
defparam \speedLED|led[2]~1 .output_mode = "comb_only";
defparam \speedLED|led[2]~1 .register_cascade_mode = "off";
defparam \speedLED|led[2]~1 .sum_lutc_input = "datac";
defparam \speedLED|led[2]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y3_N0
maxii_lcell \speedLED|led[3]~2 (
// Equation(s):
// \speedLED|led[3]~2_combout  = (\onride~combout  & ((mile_speed[2]) # ((mile_speed[0] & mile_speed[1]))))

	.clk(gnd),
	.dataa(mile_speed[0]),
	.datab(mile_speed[1]),
	.datac(mile_speed[2]),
	.datad(\onride~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\speedLED|led[3]~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \speedLED|led[3]~2 .lut_mask = "f800";
defparam \speedLED|led[3]~2 .operation_mode = "normal";
defparam \speedLED|led[3]~2 .output_mode = "comb_only";
defparam \speedLED|led[3]~2 .register_cascade_mode = "off";
defparam \speedLED|led[3]~2 .sum_lutc_input = "datac";
defparam \speedLED|led[3]~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y3_N5
maxii_lcell \speedLED|led[4]~3 (
// Equation(s):
// \speedLED|led[4]~3_combout  = (((mile_speed[2] & \onride~combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(mile_speed[2]),
	.datad(\onride~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\speedLED|led[4]~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \speedLED|led[4]~3 .lut_mask = "f000";
defparam \speedLED|led[4]~3 .operation_mode = "normal";
defparam \speedLED|led[4]~3 .output_mode = "comb_only";
defparam \speedLED|led[4]~3 .register_cascade_mode = "off";
defparam \speedLED|led[4]~3 .sum_lutc_input = "datac";
defparam \speedLED|led[4]~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y3_N2
maxii_lcell \speedLED|led[5]~4 (
// Equation(s):
// \speedLED|led[5]~4_combout  = (mile_speed[2] & (\onride~combout  & ((mile_speed[0]) # (mile_speed[1]))))

	.clk(gnd),
	.dataa(mile_speed[0]),
	.datab(mile_speed[1]),
	.datac(mile_speed[2]),
	.datad(\onride~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\speedLED|led[5]~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \speedLED|led[5]~4 .lut_mask = "e000";
defparam \speedLED|led[5]~4 .operation_mode = "normal";
defparam \speedLED|led[5]~4 .output_mode = "comb_only";
defparam \speedLED|led[5]~4 .register_cascade_mode = "off";
defparam \speedLED|led[5]~4 .sum_lutc_input = "datac";
defparam \speedLED|led[5]~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y3_N8
maxii_lcell \speedLED|led[6]~5 (
// Equation(s):
// \speedLED|led[6]~5_combout  = (\onride~combout  & (mile_speed[1] & (mile_speed[2])))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(mile_speed[1]),
	.datac(mile_speed[2]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\speedLED|led[6]~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \speedLED|led[6]~5 .lut_mask = "8080";
defparam \speedLED|led[6]~5 .operation_mode = "normal";
defparam \speedLED|led[6]~5 .output_mode = "comb_only";
defparam \speedLED|led[6]~5 .register_cascade_mode = "off";
defparam \speedLED|led[6]~5 .sum_lutc_input = "datac";
defparam \speedLED|led[6]~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y3_N7
maxii_lcell \speedLED|led[7]~6 (
// Equation(s):
// \speedLED|led[7]~6_combout  = (mile_speed[0] & (mile_speed[1] & (mile_speed[2] & \onride~combout )))

	.clk(gnd),
	.dataa(mile_speed[0]),
	.datab(mile_speed[1]),
	.datac(mile_speed[2]),
	.datad(\onride~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\speedLED|led[7]~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \speedLED|led[7]~6 .lut_mask = "8000";
defparam \speedLED|led[7]~6 .operation_mode = "normal";
defparam \speedLED|led[7]~6 .output_mode = "comb_only";
defparam \speedLED|led[7]~6 .register_cascade_mode = "off";
defparam \speedLED|led[7]~6 .sum_lutc_input = "datac";
defparam \speedLED|led[7]~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y4_N8
maxii_lcell \always1~16 (
// Equation(s):
// \always1~16_combout  = ((\onride~combout  & ((\stop_cnt~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\onride~combout ),
	.datac(vcc),
	.datad(\stop_cnt~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\always1~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \always1~16 .lut_mask = "cc00";
defparam \always1~16 .operation_mode = "normal";
defparam \always1~16 .output_mode = "comb_only";
defparam \always1~16 .register_cascade_mode = "off";
defparam \always1~16 .sum_lutc_input = "datac";
defparam \always1~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N0
maxii_lcell \snd_status~8 (
// Equation(s):
// \snd_status~8_combout  = (!\Equal1~0_combout  & (snd_status[2] $ (((snd_status[1] & snd_status[0])))))

	.clk(gnd),
	.dataa(snd_status[2]),
	.datab(snd_status[1]),
	.datac(snd_status[0]),
	.datad(\Equal1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\snd_status~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \snd_status~8 .lut_mask = "006a";
defparam \snd_status~8 .operation_mode = "normal";
defparam \snd_status~8 .output_mode = "comb_only";
defparam \snd_status~8 .register_cascade_mode = "off";
defparam \snd_status~8 .sum_lutc_input = "datac";
defparam \snd_status~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y6_N6
maxii_lcell \Add29~0 (
// Equation(s):
// \Add29~0_combout  = (((!snd_status[0] & !snd_status[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(snd_status[0]),
	.datad(snd_status[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add29~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add29~0 .lut_mask = "000f";
defparam \Add29~0 .operation_mode = "normal";
defparam \Add29~0 .output_mode = "comb_only";
defparam \Add29~0 .register_cascade_mode = "off";
defparam \Add29~0 .sum_lutc_input = "datac";
defparam \Add29~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y5_N0
maxii_lcell \snd_status[2] (
// Equation(s):
// snd_status[2] = DFFEAS((\stop_cnt~regout  & ((\Add29~0_combout  $ (snd_status[2])))) # (!\stop_cnt~regout  & (\snd_status~8_combout )), GLOBAL(\divide1000|clk_p~regout ), VCC, , \snd_status[1]~6_combout , , , !\onride~combout , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\snd_status~8_combout ),
	.datab(\stop_cnt~regout ),
	.datac(\Add29~0_combout ),
	.datad(snd_status[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\onride~combout ),
	.sload(gnd),
	.ena(\snd_status[1]~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(snd_status[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \snd_status[2] .lut_mask = "2ee2";
defparam \snd_status[2] .operation_mode = "normal";
defparam \snd_status[2] .output_mode = "reg_only";
defparam \snd_status[2] .register_cascade_mode = "off";
defparam \snd_status[2] .sum_lutc_input = "datac";
defparam \snd_status[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y5_N8
maxii_lcell \Add4~0 (
// Equation(s):
// \Add4~0_combout  = (snd_status[0] & (((snd_status[1]))))

	.clk(gnd),
	.dataa(snd_status[0]),
	.datab(vcc),
	.datac(vcc),
	.datad(snd_status[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Add4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Add4~0 .lut_mask = "aa00";
defparam \Add4~0 .operation_mode = "normal";
defparam \Add4~0 .output_mode = "comb_only";
defparam \Add4~0 .register_cascade_mode = "off";
defparam \Add4~0 .sum_lutc_input = "datac";
defparam \Add4~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N9
maxii_lcell \snd_status~7 (
// Equation(s):
// \snd_status~7_combout  = (!\Equal1~0_combout  & (snd_status[3] $ (((snd_status[2] & \Add4~0_combout )))))

	.clk(gnd),
	.dataa(snd_status[2]),
	.datab(\Equal1~0_combout ),
	.datac(snd_status[3]),
	.datad(\Add4~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\snd_status~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \snd_status~7 .lut_mask = "1230";
defparam \snd_status~7 .operation_mode = "normal";
defparam \snd_status~7 .output_mode = "comb_only";
defparam \snd_status~7 .register_cascade_mode = "off";
defparam \snd_status~7 .sum_lutc_input = "datac";
defparam \snd_status~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N7
maxii_lcell \LessThan14~1 (
// Equation(s):
// \LessThan14~1_combout  = (!snd_status[2] & (((!snd_status[0] & !snd_status[1]))))

	.clk(gnd),
	.dataa(snd_status[2]),
	.datab(vcc),
	.datac(snd_status[0]),
	.datad(snd_status[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan14~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan14~1 .lut_mask = "0005";
defparam \LessThan14~1 .operation_mode = "normal";
defparam \LessThan14~1 .output_mode = "comb_only";
defparam \LessThan14~1 .register_cascade_mode = "off";
defparam \LessThan14~1 .sum_lutc_input = "datac";
defparam \LessThan14~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y5_N2
maxii_lcell \snd_status[3] (
// Equation(s):
// snd_status[3] = DFFEAS((\stop_cnt~regout  & ((\LessThan14~1_combout  $ (snd_status[3])))) # (!\stop_cnt~regout  & (\snd_status~7_combout )), GLOBAL(\divide1000|clk_p~regout ), VCC, , \snd_status[1]~6_combout , , , !\onride~combout , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\snd_status~7_combout ),
	.datab(\LessThan14~1_combout ),
	.datac(snd_status[3]),
	.datad(\stop_cnt~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\onride~combout ),
	.sload(gnd),
	.ena(\snd_status[1]~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(snd_status[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \snd_status[3] .lut_mask = "3caa";
defparam \snd_status[3] .operation_mode = "normal";
defparam \snd_status[3] .output_mode = "reg_only";
defparam \snd_status[3] .register_cascade_mode = "off";
defparam \snd_status[3] .sum_lutc_input = "datac";
defparam \snd_status[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y5_N8
maxii_lcell \LessThan14~0 (
// Equation(s):
// \LessThan14~0_combout  = (snd_status[1]) # ((snd_status[0]) # ((snd_status[2]) # (snd_status[3])))

	.clk(gnd),
	.dataa(snd_status[1]),
	.datab(snd_status[0]),
	.datac(snd_status[2]),
	.datad(snd_status[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan14~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan14~0 .lut_mask = "fffe";
defparam \LessThan14~0 .operation_mode = "normal";
defparam \LessThan14~0 .output_mode = "comb_only";
defparam \LessThan14~0 .register_cascade_mode = "off";
defparam \LessThan14~0 .sum_lutc_input = "datac";
defparam \LessThan14~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N1
maxii_lcell \snd_status[1]~5 (
// Equation(s):
// \snd_status[1]~5_combout  = (\stop_cnt~regout  & (((\LessThan14~0_combout )))) # (!\stop_cnt~regout  & (!\Equal1~0_combout  & ((\LessThan0~0_combout ))))

	.clk(gnd),
	.dataa(\stop_cnt~regout ),
	.datab(\Equal1~0_combout ),
	.datac(\LessThan14~0_combout ),
	.datad(\LessThan0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\snd_status[1]~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \snd_status[1]~5 .lut_mask = "b1a0";
defparam \snd_status[1]~5 .operation_mode = "normal";
defparam \snd_status[1]~5 .output_mode = "comb_only";
defparam \snd_status[1]~5 .register_cascade_mode = "off";
defparam \snd_status[1]~5 .sum_lutc_input = "datac";
defparam \snd_status[1]~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N0
maxii_lcell \sound_cnt[0] (
// Equation(s):
// sound_cnt[0] = DFFEAS(((!sound_cnt[0])), GLOBAL(\divide1000|clk_p~regout ), VCC, , \sound_cnt[8]~19_combout , , , , )
// \sound_cnt[0]~1  = CARRY(((sound_cnt[0])))
// \sound_cnt[0]~1COUT1_21  = CARRY(((sound_cnt[0])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(sound_cnt[0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sound_cnt[8]~19_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sound_cnt[0]),
	.cout(),
	.cout0(\sound_cnt[0]~1 ),
	.cout1(\sound_cnt[0]~1COUT1_21 ));
// synopsys translate_off
defparam \sound_cnt[0] .lut_mask = "33cc";
defparam \sound_cnt[0] .operation_mode = "arithmetic";
defparam \sound_cnt[0] .output_mode = "reg_only";
defparam \sound_cnt[0] .register_cascade_mode = "off";
defparam \sound_cnt[0] .sum_lutc_input = "datac";
defparam \sound_cnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N1
maxii_lcell \sound_cnt[1] (
// Equation(s):
// sound_cnt[1] = DFFEAS((sound_cnt[1] $ ((\sound_cnt[0]~1 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \sound_cnt[8]~19_combout , , , , )
// \sound_cnt[1]~3  = CARRY(((!\sound_cnt[0]~1 ) # (!sound_cnt[1])))
// \sound_cnt[1]~3COUT1_22  = CARRY(((!\sound_cnt[0]~1COUT1_21 ) # (!sound_cnt[1])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(sound_cnt[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sound_cnt[8]~19_combout ),
	.cin(gnd),
	.cin0(\sound_cnt[0]~1 ),
	.cin1(\sound_cnt[0]~1COUT1_21 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sound_cnt[1]),
	.cout(),
	.cout0(\sound_cnt[1]~3 ),
	.cout1(\sound_cnt[1]~3COUT1_22 ));
// synopsys translate_off
defparam \sound_cnt[1] .cin0_used = "true";
defparam \sound_cnt[1] .cin1_used = "true";
defparam \sound_cnt[1] .lut_mask = "3c3f";
defparam \sound_cnt[1] .operation_mode = "arithmetic";
defparam \sound_cnt[1] .output_mode = "reg_only";
defparam \sound_cnt[1] .register_cascade_mode = "off";
defparam \sound_cnt[1] .sum_lutc_input = "cin";
defparam \sound_cnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N2
maxii_lcell \sound_cnt[2] (
// Equation(s):
// sound_cnt[2] = DFFEAS((sound_cnt[2] $ ((!\sound_cnt[1]~3 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \sound_cnt[8]~19_combout , , , , )
// \sound_cnt[2]~5  = CARRY(((sound_cnt[2] & !\sound_cnt[1]~3 )))
// \sound_cnt[2]~5COUT1_23  = CARRY(((sound_cnt[2] & !\sound_cnt[1]~3COUT1_22 )))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(sound_cnt[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sound_cnt[8]~19_combout ),
	.cin(gnd),
	.cin0(\sound_cnt[1]~3 ),
	.cin1(\sound_cnt[1]~3COUT1_22 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sound_cnt[2]),
	.cout(),
	.cout0(\sound_cnt[2]~5 ),
	.cout1(\sound_cnt[2]~5COUT1_23 ));
// synopsys translate_off
defparam \sound_cnt[2] .cin0_used = "true";
defparam \sound_cnt[2] .cin1_used = "true";
defparam \sound_cnt[2] .lut_mask = "c30c";
defparam \sound_cnt[2] .operation_mode = "arithmetic";
defparam \sound_cnt[2] .output_mode = "reg_only";
defparam \sound_cnt[2] .register_cascade_mode = "off";
defparam \sound_cnt[2] .sum_lutc_input = "cin";
defparam \sound_cnt[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N3
maxii_lcell \sound_cnt[3] (
// Equation(s):
// sound_cnt[3] = DFFEAS(sound_cnt[3] $ ((((\sound_cnt[2]~5 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \sound_cnt[8]~19_combout , , , , )
// \sound_cnt[3]~7  = CARRY(((!\sound_cnt[2]~5 )) # (!sound_cnt[3]))
// \sound_cnt[3]~7COUT1_24  = CARRY(((!\sound_cnt[2]~5COUT1_23 )) # (!sound_cnt[3]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(sound_cnt[3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sound_cnt[8]~19_combout ),
	.cin(gnd),
	.cin0(\sound_cnt[2]~5 ),
	.cin1(\sound_cnt[2]~5COUT1_23 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sound_cnt[3]),
	.cout(),
	.cout0(\sound_cnt[3]~7 ),
	.cout1(\sound_cnt[3]~7COUT1_24 ));
// synopsys translate_off
defparam \sound_cnt[3] .cin0_used = "true";
defparam \sound_cnt[3] .cin1_used = "true";
defparam \sound_cnt[3] .lut_mask = "5a5f";
defparam \sound_cnt[3] .operation_mode = "arithmetic";
defparam \sound_cnt[3] .output_mode = "reg_only";
defparam \sound_cnt[3] .register_cascade_mode = "off";
defparam \sound_cnt[3] .sum_lutc_input = "cin";
defparam \sound_cnt[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N4
maxii_lcell \sound_cnt[4] (
// Equation(s):
// sound_cnt[4] = DFFEAS(sound_cnt[4] $ ((((!\sound_cnt[3]~7 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \sound_cnt[8]~19_combout , , , , )
// \sound_cnt[4]~9  = CARRY((sound_cnt[4] & ((!\sound_cnt[3]~7COUT1_24 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(sound_cnt[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sound_cnt[8]~19_combout ),
	.cin(gnd),
	.cin0(\sound_cnt[3]~7 ),
	.cin1(\sound_cnt[3]~7COUT1_24 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sound_cnt[4]),
	.cout(\sound_cnt[4]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sound_cnt[4] .cin0_used = "true";
defparam \sound_cnt[4] .cin1_used = "true";
defparam \sound_cnt[4] .lut_mask = "a50a";
defparam \sound_cnt[4] .operation_mode = "arithmetic";
defparam \sound_cnt[4] .output_mode = "reg_only";
defparam \sound_cnt[4] .register_cascade_mode = "off";
defparam \sound_cnt[4] .sum_lutc_input = "cin";
defparam \sound_cnt[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N5
maxii_lcell \sound_cnt[5] (
// Equation(s):
// sound_cnt[5] = DFFEAS(sound_cnt[5] $ ((((\sound_cnt[4]~9 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \sound_cnt[8]~19_combout , , , , )
// \sound_cnt[5]~11  = CARRY(((!\sound_cnt[4]~9 )) # (!sound_cnt[5]))
// \sound_cnt[5]~11COUT1_25  = CARRY(((!\sound_cnt[4]~9 )) # (!sound_cnt[5]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(sound_cnt[5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sound_cnt[8]~19_combout ),
	.cin(\sound_cnt[4]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sound_cnt[5]),
	.cout(),
	.cout0(\sound_cnt[5]~11 ),
	.cout1(\sound_cnt[5]~11COUT1_25 ));
// synopsys translate_off
defparam \sound_cnt[5] .cin_used = "true";
defparam \sound_cnt[5] .lut_mask = "5a5f";
defparam \sound_cnt[5] .operation_mode = "arithmetic";
defparam \sound_cnt[5] .output_mode = "reg_only";
defparam \sound_cnt[5] .register_cascade_mode = "off";
defparam \sound_cnt[5] .sum_lutc_input = "cin";
defparam \sound_cnt[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N6
maxii_lcell \sound_cnt[6] (
// Equation(s):
// sound_cnt[6] = DFFEAS(sound_cnt[6] $ ((((!(!\sound_cnt[4]~9  & \sound_cnt[5]~11 ) # (\sound_cnt[4]~9  & \sound_cnt[5]~11COUT1_25 ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \sound_cnt[8]~19_combout , , , , )
// \sound_cnt[6]~13  = CARRY((sound_cnt[6] & ((!\sound_cnt[5]~11 ))))
// \sound_cnt[6]~13COUT1_26  = CARRY((sound_cnt[6] & ((!\sound_cnt[5]~11COUT1_25 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(sound_cnt[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sound_cnt[8]~19_combout ),
	.cin(\sound_cnt[4]~9 ),
	.cin0(\sound_cnt[5]~11 ),
	.cin1(\sound_cnt[5]~11COUT1_25 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sound_cnt[6]),
	.cout(),
	.cout0(\sound_cnt[6]~13 ),
	.cout1(\sound_cnt[6]~13COUT1_26 ));
// synopsys translate_off
defparam \sound_cnt[6] .cin0_used = "true";
defparam \sound_cnt[6] .cin1_used = "true";
defparam \sound_cnt[6] .cin_used = "true";
defparam \sound_cnt[6] .lut_mask = "a50a";
defparam \sound_cnt[6] .operation_mode = "arithmetic";
defparam \sound_cnt[6] .output_mode = "reg_only";
defparam \sound_cnt[6] .register_cascade_mode = "off";
defparam \sound_cnt[6] .sum_lutc_input = "cin";
defparam \sound_cnt[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N7
maxii_lcell \sound_cnt[7] (
// Equation(s):
// sound_cnt[7] = DFFEAS((sound_cnt[7] $ (((!\sound_cnt[4]~9  & \sound_cnt[6]~13 ) # (\sound_cnt[4]~9  & \sound_cnt[6]~13COUT1_26 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \sound_cnt[8]~19_combout , , , , )
// \sound_cnt[7]~15  = CARRY(((!\sound_cnt[6]~13 ) # (!sound_cnt[7])))
// \sound_cnt[7]~15COUT1_27  = CARRY(((!\sound_cnt[6]~13COUT1_26 ) # (!sound_cnt[7])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(sound_cnt[7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sound_cnt[8]~19_combout ),
	.cin(\sound_cnt[4]~9 ),
	.cin0(\sound_cnt[6]~13 ),
	.cin1(\sound_cnt[6]~13COUT1_26 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sound_cnt[7]),
	.cout(),
	.cout0(\sound_cnt[7]~15 ),
	.cout1(\sound_cnt[7]~15COUT1_27 ));
// synopsys translate_off
defparam \sound_cnt[7] .cin0_used = "true";
defparam \sound_cnt[7] .cin1_used = "true";
defparam \sound_cnt[7] .cin_used = "true";
defparam \sound_cnt[7] .lut_mask = "3c3f";
defparam \sound_cnt[7] .operation_mode = "arithmetic";
defparam \sound_cnt[7] .output_mode = "reg_only";
defparam \sound_cnt[7] .register_cascade_mode = "off";
defparam \sound_cnt[7] .sum_lutc_input = "cin";
defparam \sound_cnt[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N6
maxii_lcell \Equal22~0 (
// Equation(s):
// \Equal22~0_combout  = (sound_cnt[7] & (sound_cnt[4] & (sound_cnt[6] & sound_cnt[5])))

	.clk(gnd),
	.dataa(sound_cnt[7]),
	.datab(sound_cnt[4]),
	.datac(sound_cnt[6]),
	.datad(sound_cnt[5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal22~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal22~0 .lut_mask = "8000";
defparam \Equal22~0 .operation_mode = "normal";
defparam \Equal22~0 .output_mode = "comb_only";
defparam \Equal22~0 .register_cascade_mode = "off";
defparam \Equal22~0 .sum_lutc_input = "datac";
defparam \Equal22~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N4
maxii_lcell \Equal21~0 (
// Equation(s):
// \Equal21~0_combout  = (sound_cnt[0] & (sound_cnt[2] & (sound_cnt[3] & sound_cnt[1])))

	.clk(gnd),
	.dataa(sound_cnt[0]),
	.datab(sound_cnt[2]),
	.datac(sound_cnt[3]),
	.datad(sound_cnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal21~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal21~0 .lut_mask = "8000";
defparam \Equal21~0 .operation_mode = "normal";
defparam \Equal21~0 .output_mode = "comb_only";
defparam \Equal21~0 .register_cascade_mode = "off";
defparam \Equal21~0 .sum_lutc_input = "datac";
defparam \Equal21~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N5
maxii_lcell \Equal22~1 (
// Equation(s):
// \Equal22~1_combout  = ((sound_cnt[8] & (\Equal22~0_combout  & \Equal21~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(sound_cnt[8]),
	.datac(\Equal22~0_combout ),
	.datad(\Equal21~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal22~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal22~1 .lut_mask = "c000";
defparam \Equal22~1 .operation_mode = "normal";
defparam \Equal22~1 .output_mode = "comb_only";
defparam \Equal22~1 .register_cascade_mode = "off";
defparam \Equal22~1 .sum_lutc_input = "datac";
defparam \Equal22~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y5_N7
maxii_lcell \snd_status[1]~6 (
// Equation(s):
// \snd_status[1]~6_combout  = (!\rst~combout  & (((\snd_status[1]~5_combout  & \Equal22~1_combout )) # (!\onride~combout )))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\rst~combout ),
	.datac(\snd_status[1]~5_combout ),
	.datad(\Equal22~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\snd_status[1]~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \snd_status[1]~6 .lut_mask = "3111";
defparam \snd_status[1]~6 .operation_mode = "normal";
defparam \snd_status[1]~6 .output_mode = "comb_only";
defparam \snd_status[1]~6 .register_cascade_mode = "off";
defparam \snd_status[1]~6 .sum_lutc_input = "datac";
defparam \snd_status[1]~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y5_N1
maxii_lcell \snd_status[0] (
// Equation(s):
// snd_status[0] = DFFEAS((\onride~combout  & (!snd_status[0] & ((\stop_cnt~regout ) # (!\Equal1~0_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \snd_status[1]~6_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\Equal1~0_combout ),
	.datab(\onride~combout ),
	.datac(snd_status[0]),
	.datad(\stop_cnt~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\snd_status[1]~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(snd_status[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \snd_status[0] .lut_mask = "0c04";
defparam \snd_status[0] .operation_mode = "normal";
defparam \snd_status[0] .output_mode = "reg_only";
defparam \snd_status[0] .register_cascade_mode = "off";
defparam \snd_status[0] .sum_lutc_input = "datac";
defparam \snd_status[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y5_N5
maxii_lcell \snd_status[1] (
// Equation(s):
// snd_status[1] = DFFEAS((\stop_cnt~regout  & (snd_status[1] $ ((!snd_status[0])))) # (!\stop_cnt~regout  & (!\Equal1~0_combout  & (snd_status[1] $ (snd_status[0])))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \snd_status[1]~6_combout , , , !\onride~combout 
// , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(snd_status[1]),
	.datab(snd_status[0]),
	.datac(\Equal1~0_combout ),
	.datad(\stop_cnt~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(!\onride~combout ),
	.sload(gnd),
	.ena(\snd_status[1]~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(snd_status[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \snd_status[1] .lut_mask = "9906";
defparam \snd_status[1] .operation_mode = "normal";
defparam \snd_status[1] .output_mode = "reg_only";
defparam \snd_status[1] .register_cascade_mode = "off";
defparam \snd_status[1] .sum_lutc_input = "datac";
defparam \snd_status[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y5_N4
maxii_lcell \LessThan0~0 (
// Equation(s):
// \LessThan0~0_combout  = (((!snd_status[2]) # (!snd_status[3])) # (!snd_status[0])) # (!snd_status[1])

	.clk(gnd),
	.dataa(snd_status[1]),
	.datab(snd_status[0]),
	.datac(snd_status[3]),
	.datad(snd_status[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LessThan0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LessThan0~0 .lut_mask = "7fff";
defparam \LessThan0~0 .operation_mode = "normal";
defparam \LessThan0~0 .output_mode = "comb_only";
defparam \LessThan0~0 .register_cascade_mode = "off";
defparam \LessThan0~0 .sum_lutc_input = "datac";
defparam \LessThan0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N2
maxii_lcell \sound_cnt[8]~18 (
// Equation(s):
// \sound_cnt[8]~18_combout  = (\onride~combout  & (\stop_cnt~regout  & (!\always1~0_combout  & \LessThan14~0_combout )))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\stop_cnt~regout ),
	.datac(\always1~0_combout ),
	.datad(\LessThan14~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\sound_cnt[8]~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sound_cnt[8]~18 .lut_mask = "0800";
defparam \sound_cnt[8]~18 .operation_mode = "normal";
defparam \sound_cnt[8]~18 .output_mode = "comb_only";
defparam \sound_cnt[8]~18 .register_cascade_mode = "off";
defparam \sound_cnt[8]~18 .sum_lutc_input = "datac";
defparam \sound_cnt[8]~18 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N9
maxii_lcell \sound_cnt[8]~19 (
// Equation(s):
// \sound_cnt[8]~19_combout  = (!\rst~combout  & ((\sound_cnt[8]~18_combout ) # ((\always1~0_combout  & \LessThan0~0_combout ))))

	.clk(gnd),
	.dataa(\rst~combout ),
	.datab(\always1~0_combout ),
	.datac(\LessThan0~0_combout ),
	.datad(\sound_cnt[8]~18_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\sound_cnt[8]~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sound_cnt[8]~19 .lut_mask = "5540";
defparam \sound_cnt[8]~19 .operation_mode = "normal";
defparam \sound_cnt[8]~19 .output_mode = "comb_only";
defparam \sound_cnt[8]~19 .register_cascade_mode = "off";
defparam \sound_cnt[8]~19 .sum_lutc_input = "datac";
defparam \sound_cnt[8]~19 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y3_N8
maxii_lcell \sound_cnt[8] (
// Equation(s):
// sound_cnt[8] = DFFEAS((((!\sound_cnt[4]~9  & \sound_cnt[7]~15 ) # (\sound_cnt[4]~9  & \sound_cnt[7]~15COUT1_27 ) $ (!sound_cnt[8]))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \sound_cnt[8]~19_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(sound_cnt[8]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\sound_cnt[8]~19_combout ),
	.cin(\sound_cnt[4]~9 ),
	.cin0(\sound_cnt[7]~15 ),
	.cin1(\sound_cnt[7]~15COUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(sound_cnt[8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sound_cnt[8] .cin0_used = "true";
defparam \sound_cnt[8] .cin1_used = "true";
defparam \sound_cnt[8] .cin_used = "true";
defparam \sound_cnt[8] .lut_mask = "f00f";
defparam \sound_cnt[8] .operation_mode = "normal";
defparam \sound_cnt[8] .output_mode = "reg_only";
defparam \sound_cnt[8] .register_cascade_mode = "off";
defparam \sound_cnt[8] .sum_lutc_input = "cin";
defparam \sound_cnt[8] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N3
maxii_lcell \Equal21~1 (
// Equation(s):
// \Equal21~1_combout  = (!sound_cnt[7] & (!sound_cnt[4] & (!sound_cnt[6] & !sound_cnt[5])))

	.clk(gnd),
	.dataa(sound_cnt[7]),
	.datab(sound_cnt[4]),
	.datac(sound_cnt[6]),
	.datad(sound_cnt[5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal21~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal21~1 .lut_mask = "0001";
defparam \Equal21~1 .operation_mode = "normal";
defparam \Equal21~1 .output_mode = "comb_only";
defparam \Equal21~1 .register_cascade_mode = "off";
defparam \Equal21~1 .sum_lutc_input = "datac";
defparam \Equal21~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N9
maxii_lcell \Equal21~2 (
// Equation(s):
// \Equal21~2_combout  = ((!sound_cnt[8] & (\Equal21~0_combout  & \Equal21~1_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(sound_cnt[8]),
	.datac(\Equal21~0_combout ),
	.datad(\Equal21~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal21~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal21~2 .lut_mask = "3000";
defparam \Equal21~2 .operation_mode = "normal";
defparam \Equal21~2 .output_mode = "comb_only";
defparam \Equal21~2 .register_cascade_mode = "off";
defparam \Equal21~2 .sum_lutc_input = "datac";
defparam \Equal21~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N0
maxii_lcell \sound_on~1 (
// Equation(s):
// \sound_on~1_combout  = (\LessThan0~0_combout  & ((\Equal21~2_combout ) # ((\sound_on~regout  & !\Equal22~1_combout ))))

	.clk(gnd),
	.dataa(\sound_on~regout ),
	.datab(\Equal21~2_combout ),
	.datac(\Equal22~1_combout ),
	.datad(\LessThan0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\sound_on~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sound_on~1 .lut_mask = "ce00";
defparam \sound_on~1 .operation_mode = "normal";
defparam \sound_on~1 .output_mode = "comb_only";
defparam \sound_on~1 .register_cascade_mode = "off";
defparam \sound_on~1 .sum_lutc_input = "datac";
defparam \sound_on~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N1
maxii_lcell \sound_on~0 (
// Equation(s):
// \sound_on~0_combout  = (\LessThan14~0_combout  & ((\Equal21~2_combout ) # ((\sound_on~regout  & !\Equal22~1_combout ))))

	.clk(gnd),
	.dataa(\sound_on~regout ),
	.datab(\LessThan14~0_combout ),
	.datac(\Equal22~1_combout ),
	.datad(\Equal21~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\sound_on~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \sound_on~0 .lut_mask = "cc08";
defparam \sound_on~0 .operation_mode = "normal";
defparam \sound_on~0 .output_mode = "comb_only";
defparam \sound_on~0 .register_cascade_mode = "off";
defparam \sound_on~0 .sum_lutc_input = "datac";
defparam \sound_on~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y3_N8
maxii_lcell sound_on(
// Equation(s):
// \sound_on~regout  = DFFEAS((\always1~16_combout  & (((\sound_on~0_combout )))) # (!\always1~16_combout  & (\sound_on~regout )), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , \sound_on~1_combout , , , \always1~0_combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\sound_on~regout ),
	.datab(\always1~16_combout ),
	.datac(\sound_on~1_combout ),
	.datad(\sound_on~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(\always1~0_combout ),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\sound_on~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam sound_on.lut_mask = "ee22";
defparam sound_on.operation_mode = "normal";
defparam sound_on.output_mode = "reg_only";
defparam sound_on.register_cascade_mode = "off";
defparam sound_on.sum_lutc_input = "datac";
defparam sound_on.synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y5_N9
maxii_lcell \soundBUZ|Mux3~0 (
// Equation(s):
// \soundBUZ|Mux3~0_combout  = (snd_status[2] & ((snd_status[3] & (snd_status[1])) # (!snd_status[3] & ((snd_status[0]))))) # (!snd_status[2] & (snd_status[1] & ((!snd_status[0]))))

	.clk(gnd),
	.dataa(snd_status[1]),
	.datab(snd_status[2]),
	.datac(snd_status[3]),
	.datad(snd_status[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux3~0 .lut_mask = "8ca2";
defparam \soundBUZ|Mux3~0 .operation_mode = "normal";
defparam \soundBUZ|Mux3~0 .output_mode = "comb_only";
defparam \soundBUZ|Mux3~0 .register_cascade_mode = "off";
defparam \soundBUZ|Mux3~0 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N2
maxii_lcell \soundBUZ|Mux4~0 (
// Equation(s):
// \soundBUZ|Mux4~0_combout  = ((snd_status[3] & (!snd_status[2] & !snd_status[1])) # (!snd_status[3] & (snd_status[2] $ (snd_status[1]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(snd_status[3]),
	.datac(snd_status[2]),
	.datad(snd_status[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux4~0 .lut_mask = "033c";
defparam \soundBUZ|Mux4~0 .operation_mode = "normal";
defparam \soundBUZ|Mux4~0 .output_mode = "comb_only";
defparam \soundBUZ|Mux4~0 .register_cascade_mode = "off";
defparam \soundBUZ|Mux4~0 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux4~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N0
maxii_lcell \soundBUZ|Mux12~0 (
// Equation(s):
// \soundBUZ|Mux12~0_combout  = (snd_status[1] & ((snd_status[0] & ((snd_status[2]))) # (!snd_status[0] & (snd_status[3]))))

	.clk(gnd),
	.dataa(snd_status[1]),
	.datab(snd_status[3]),
	.datac(snd_status[0]),
	.datad(snd_status[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux12~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux12~0 .lut_mask = "a808";
defparam \soundBUZ|Mux12~0 .operation_mode = "normal";
defparam \soundBUZ|Mux12~0 .output_mode = "comb_only";
defparam \soundBUZ|Mux12~0 .register_cascade_mode = "off";
defparam \soundBUZ|Mux12~0 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux12~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y5_N6
maxii_lcell \soundBUZ|Mux0~0 (
// Equation(s):
// \soundBUZ|Mux0~0_combout  = (!snd_status[3] & ((snd_status[1] & (!snd_status[2] & snd_status[0])) # (!snd_status[1] & (snd_status[2] & !snd_status[0]))))

	.clk(gnd),
	.dataa(snd_status[1]),
	.datab(snd_status[2]),
	.datac(snd_status[3]),
	.datad(snd_status[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux0~0 .lut_mask = "0204";
defparam \soundBUZ|Mux0~0 .operation_mode = "normal";
defparam \soundBUZ|Mux0~0 .output_mode = "comb_only";
defparam \soundBUZ|Mux0~0 .register_cascade_mode = "off";
defparam \soundBUZ|Mux0~0 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N1
maxii_lcell \soundBUZ|divideSOUND|Add0~92 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~92_cout0  = CARRY((!\soundBUZ|Mux3~0_combout ))
// \soundBUZ|divideSOUND|Add0~92COUT1_96  = CARRY((!\soundBUZ|Mux3~0_combout ))

	.clk(gnd),
	.dataa(\soundBUZ|Mux3~0_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~90 ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~92_cout0 ),
	.cout1(\soundBUZ|divideSOUND|Add0~92COUT1_96 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~92 .lut_mask = "ff55";
defparam \soundBUZ|divideSOUND|Add0~92 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~92 .output_mode = "none";
defparam \soundBUZ|divideSOUND|Add0~92 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~92 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Add0~92 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N2
maxii_lcell \soundBUZ|divideSOUND|Add0~0 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~0_combout  = (\soundBUZ|Mux0~0_combout  $ ((\soundBUZ|divideSOUND|Add0~92_cout0 )))
// \soundBUZ|divideSOUND|Add0~2  = CARRY(((\soundBUZ|Mux0~0_combout  & !\soundBUZ|divideSOUND|Add0~92_cout0 )))
// \soundBUZ|divideSOUND|Add0~2COUT1_97  = CARRY(((\soundBUZ|Mux0~0_combout  & !\soundBUZ|divideSOUND|Add0~92COUT1_96 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux0~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\soundBUZ|divideSOUND|Add0~92_cout0 ),
	.cin1(\soundBUZ|divideSOUND|Add0~92COUT1_96 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~0_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~2 ),
	.cout1(\soundBUZ|divideSOUND|Add0~2COUT1_97 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~0 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~0 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~0 .lut_mask = "3c0c";
defparam \soundBUZ|divideSOUND|Add0~0 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~0 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~0 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~0 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N3
maxii_lcell \soundBUZ|divideSOUND|Add0~5 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~5_combout  = (((\soundBUZ|divideSOUND|Add0~2 )))
// \soundBUZ|divideSOUND|Add0~7  = CARRY(((!\soundBUZ|divideSOUND|Add0~2 )))
// \soundBUZ|divideSOUND|Add0~7COUT1_98  = CARRY(((!\soundBUZ|divideSOUND|Add0~2COUT1_97 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\soundBUZ|divideSOUND|Add0~2 ),
	.cin1(\soundBUZ|divideSOUND|Add0~2COUT1_97 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~5_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~7 ),
	.cout1(\soundBUZ|divideSOUND|Add0~7COUT1_98 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~5 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~5 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~5 .lut_mask = "f00f";
defparam \soundBUZ|divideSOUND|Add0~5 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~5 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~5 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~5 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N4
maxii_lcell \soundBUZ|divideSOUND|Add0~10 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~10_combout  = (\soundBUZ|Mux12~0_combout  $ ((!\soundBUZ|divideSOUND|Add0~7 )))
// \soundBUZ|divideSOUND|Add0~12  = CARRY(((!\soundBUZ|Mux12~0_combout  & !\soundBUZ|divideSOUND|Add0~7COUT1_98 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux12~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\soundBUZ|divideSOUND|Add0~7 ),
	.cin1(\soundBUZ|divideSOUND|Add0~7COUT1_98 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~10_combout ),
	.regout(),
	.cout(\soundBUZ|divideSOUND|Add0~12 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~10 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~10 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~10 .lut_mask = "c303";
defparam \soundBUZ|divideSOUND|Add0~10 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~10 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~10 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~10 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y5_N3
maxii_lcell \soundBUZ|Mux10~0 (
// Equation(s):
// \soundBUZ|Mux10~0_combout  = (snd_status[1] & ((snd_status[2] & ((snd_status[3]) # (snd_status[0]))) # (!snd_status[2] & ((!snd_status[0]) # (!snd_status[3]))))) # (!snd_status[1] & (snd_status[2] & (!snd_status[3])))

	.clk(gnd),
	.dataa(snd_status[1]),
	.datab(snd_status[2]),
	.datac(snd_status[3]),
	.datad(snd_status[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux10~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux10~0 .lut_mask = "8ea6";
defparam \soundBUZ|Mux10~0 .operation_mode = "normal";
defparam \soundBUZ|Mux10~0 .output_mode = "comb_only";
defparam \soundBUZ|Mux10~0 .register_cascade_mode = "off";
defparam \soundBUZ|Mux10~0 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux10~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y7_N2
maxii_lcell \soundBUZ|Mux4~1 (
// Equation(s):
// \soundBUZ|Mux4~1_combout  = ((snd_status[1] $ (snd_status[2])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(snd_status[1]),
	.datad(snd_status[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux4~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux4~1 .lut_mask = "0ff0";
defparam \soundBUZ|Mux4~1 .operation_mode = "normal";
defparam \soundBUZ|Mux4~1 .output_mode = "comb_only";
defparam \soundBUZ|Mux4~1 .register_cascade_mode = "off";
defparam \soundBUZ|Mux4~1 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux4~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N5
maxii_lcell \soundBUZ|divideSOUND|Add0~15 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~15_combout  = (((\soundBUZ|divideSOUND|Add0~12 )))
// \soundBUZ|divideSOUND|Add0~17  = CARRY(((!\soundBUZ|divideSOUND|Add0~12 )))
// \soundBUZ|divideSOUND|Add0~17COUT1_99  = CARRY(((!\soundBUZ|divideSOUND|Add0~12 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~12 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~15_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~17 ),
	.cout1(\soundBUZ|divideSOUND|Add0~17COUT1_99 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~15 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~15 .lut_mask = "f00f";
defparam \soundBUZ|divideSOUND|Add0~15 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~15 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~15 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~15 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N6
maxii_lcell \soundBUZ|divideSOUND|Add0~20 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~20_combout  = (!\soundBUZ|divideSOUND|Add0~12  & \soundBUZ|divideSOUND|Add0~17 ) # (\soundBUZ|divideSOUND|Add0~12  & \soundBUZ|divideSOUND|Add0~17COUT1_99 ) $ (((snd_status[3]) # ((!\soundBUZ|Mux4~1_combout ))))
// \soundBUZ|divideSOUND|Add0~22  = CARRY((!\soundBUZ|divideSOUND|Add0~17  & ((snd_status[3]) # (!\soundBUZ|Mux4~1_combout ))))
// \soundBUZ|divideSOUND|Add0~22COUT1_100  = CARRY((!\soundBUZ|divideSOUND|Add0~17COUT1_99  & ((snd_status[3]) # (!\soundBUZ|Mux4~1_combout ))))

	.clk(gnd),
	.dataa(snd_status[3]),
	.datab(\soundBUZ|Mux4~1_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~12 ),
	.cin0(\soundBUZ|divideSOUND|Add0~17 ),
	.cin1(\soundBUZ|divideSOUND|Add0~17COUT1_99 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~20_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~22 ),
	.cout1(\soundBUZ|divideSOUND|Add0~22COUT1_100 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~20 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~20 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~20 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~20 .lut_mask = "4b0b";
defparam \soundBUZ|divideSOUND|Add0~20 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~20 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~20 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~20 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N7
maxii_lcell \soundBUZ|divideSOUND|Add0~30 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~30_combout  = (\soundBUZ|Mux10~0_combout  $ ((!(!\soundBUZ|divideSOUND|Add0~12  & \soundBUZ|divideSOUND|Add0~22 ) # (\soundBUZ|divideSOUND|Add0~12  & \soundBUZ|divideSOUND|Add0~22COUT1_100 ))))
// \soundBUZ|divideSOUND|Add0~32  = CARRY(((!\soundBUZ|divideSOUND|Add0~22 ) # (!\soundBUZ|Mux10~0_combout )))
// \soundBUZ|divideSOUND|Add0~32COUT1_101  = CARRY(((!\soundBUZ|divideSOUND|Add0~22COUT1_100 ) # (!\soundBUZ|Mux10~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux10~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~12 ),
	.cin0(\soundBUZ|divideSOUND|Add0~22 ),
	.cin1(\soundBUZ|divideSOUND|Add0~22COUT1_100 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~30_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~32 ),
	.cout1(\soundBUZ|divideSOUND|Add0~32COUT1_101 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~30 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~30 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~30 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~30 .lut_mask = "c33f";
defparam \soundBUZ|divideSOUND|Add0~30 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~30 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~30 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~30 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~30 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N8
maxii_lcell \soundBUZ|divideSOUND|Add0~25 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~25_combout  = \soundBUZ|Mux3~0_combout  $ ((((!(!\soundBUZ|divideSOUND|Add0~12  & \soundBUZ|divideSOUND|Add0~32 ) # (\soundBUZ|divideSOUND|Add0~12  & \soundBUZ|divideSOUND|Add0~32COUT1_101 )))))
// \soundBUZ|divideSOUND|Add0~27  = CARRY((!\soundBUZ|Mux3~0_combout  & ((!\soundBUZ|divideSOUND|Add0~32 ))))
// \soundBUZ|divideSOUND|Add0~27COUT1_102  = CARRY((!\soundBUZ|Mux3~0_combout  & ((!\soundBUZ|divideSOUND|Add0~32COUT1_101 ))))

	.clk(gnd),
	.dataa(\soundBUZ|Mux3~0_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~12 ),
	.cin0(\soundBUZ|divideSOUND|Add0~32 ),
	.cin1(\soundBUZ|divideSOUND|Add0~32COUT1_101 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~25_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~27 ),
	.cout1(\soundBUZ|divideSOUND|Add0~27COUT1_102 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~25 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~25 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~25 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~25 .lut_mask = "a505";
defparam \soundBUZ|divideSOUND|Add0~25 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~25 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~25 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~25 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y5_N9
maxii_lcell \soundBUZ|divideSOUND|Add0~40 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~40_combout  = (\soundBUZ|Mux4~0_combout  $ (((!\soundBUZ|divideSOUND|Add0~12  & \soundBUZ|divideSOUND|Add0~27 ) # (\soundBUZ|divideSOUND|Add0~12  & \soundBUZ|divideSOUND|Add0~27COUT1_102 ))))
// \soundBUZ|divideSOUND|Add0~42  = CARRY(((\soundBUZ|Mux4~0_combout ) # (!\soundBUZ|divideSOUND|Add0~27COUT1_102 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux4~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~12 ),
	.cin0(\soundBUZ|divideSOUND|Add0~27 ),
	.cin1(\soundBUZ|divideSOUND|Add0~27COUT1_102 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~40_combout ),
	.regout(),
	.cout(\soundBUZ|divideSOUND|Add0~42 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~40 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~40 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~40 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~40 .lut_mask = "3ccf";
defparam \soundBUZ|divideSOUND|Add0~40 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~40 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~40 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~40 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~40 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N3
maxii_lcell \soundBUZ|Mux5~0 (
// Equation(s):
// \soundBUZ|Mux5~0_combout  = (snd_status[0] & (!snd_status[1] & (snd_status[3] $ (snd_status[2])))) # (!snd_status[0] & (!snd_status[2] & (snd_status[3] $ (snd_status[1]))))

	.clk(gnd),
	.dataa(snd_status[0]),
	.datab(snd_status[3]),
	.datac(snd_status[2]),
	.datad(snd_status[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux5~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux5~0 .lut_mask = "012c";
defparam \soundBUZ|Mux5~0 .operation_mode = "normal";
defparam \soundBUZ|Mux5~0 .output_mode = "comb_only";
defparam \soundBUZ|Mux5~0 .register_cascade_mode = "off";
defparam \soundBUZ|Mux5~0 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux5~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N4
maxii_lcell \soundBUZ|Mux6~0 (
// Equation(s):
// \soundBUZ|Mux6~0_combout  = (snd_status[2] & ((snd_status[3] & ((snd_status[1]))) # (!snd_status[3] & (snd_status[0])))) # (!snd_status[2] & ((snd_status[1] & (!snd_status[0])) # (!snd_status[1] & ((snd_status[3])))))

	.clk(gnd),
	.dataa(snd_status[0]),
	.datab(snd_status[3]),
	.datac(snd_status[2]),
	.datad(snd_status[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux6~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux6~0 .lut_mask = "e52c";
defparam \soundBUZ|Mux6~0 .operation_mode = "normal";
defparam \soundBUZ|Mux6~0 .output_mode = "comb_only";
defparam \soundBUZ|Mux6~0 .register_cascade_mode = "off";
defparam \soundBUZ|Mux6~0 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux6~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N5
maxii_lcell \soundBUZ|Mux7~0 (
// Equation(s):
// \soundBUZ|Mux7~0_combout  = (!snd_status[3] & ((snd_status[0] & (snd_status[2] & !snd_status[1])) # (!snd_status[0] & (!snd_status[2] & snd_status[1]))))

	.clk(gnd),
	.dataa(snd_status[0]),
	.datab(snd_status[3]),
	.datac(snd_status[2]),
	.datad(snd_status[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux7~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux7~0 .lut_mask = "0120";
defparam \soundBUZ|Mux7~0 .operation_mode = "normal";
defparam \soundBUZ|Mux7~0 .output_mode = "comb_only";
defparam \soundBUZ|Mux7~0 .register_cascade_mode = "off";
defparam \soundBUZ|Mux7~0 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux7~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N0
maxii_lcell \soundBUZ|divideSOUND|Add0~35 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~35_combout  = (\soundBUZ|Mux7~0_combout  $ ((!\soundBUZ|divideSOUND|Add0~42 )))
// \soundBUZ|divideSOUND|Add0~37  = CARRY(((!\soundBUZ|Mux7~0_combout  & !\soundBUZ|divideSOUND|Add0~42 )))
// \soundBUZ|divideSOUND|Add0~37COUT1_103  = CARRY(((!\soundBUZ|Mux7~0_combout  & !\soundBUZ|divideSOUND|Add0~42 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux7~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~42 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~35_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~37 ),
	.cout1(\soundBUZ|divideSOUND|Add0~37COUT1_103 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~35 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~35 .lut_mask = "c303";
defparam \soundBUZ|divideSOUND|Add0~35 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~35 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~35 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~35 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~35 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N1
maxii_lcell \soundBUZ|divideSOUND|Add0~50 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~50_combout  = (\soundBUZ|Mux6~0_combout  $ (((!\soundBUZ|divideSOUND|Add0~42  & \soundBUZ|divideSOUND|Add0~37 ) # (\soundBUZ|divideSOUND|Add0~42  & \soundBUZ|divideSOUND|Add0~37COUT1_103 ))))
// \soundBUZ|divideSOUND|Add0~52  = CARRY(((\soundBUZ|Mux6~0_combout ) # (!\soundBUZ|divideSOUND|Add0~37 )))
// \soundBUZ|divideSOUND|Add0~52COUT1_104  = CARRY(((\soundBUZ|Mux6~0_combout ) # (!\soundBUZ|divideSOUND|Add0~37COUT1_103 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux6~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~42 ),
	.cin0(\soundBUZ|divideSOUND|Add0~37 ),
	.cin1(\soundBUZ|divideSOUND|Add0~37COUT1_103 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~50_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~52 ),
	.cout1(\soundBUZ|divideSOUND|Add0~52COUT1_104 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~50 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~50 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~50 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~50 .lut_mask = "3ccf";
defparam \soundBUZ|divideSOUND|Add0~50 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~50 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~50 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~50 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~50 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N2
maxii_lcell \soundBUZ|divideSOUND|Add0~45 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~45_combout  = (\soundBUZ|Mux5~0_combout  $ (((!\soundBUZ|divideSOUND|Add0~42  & \soundBUZ|divideSOUND|Add0~52 ) # (\soundBUZ|divideSOUND|Add0~42  & \soundBUZ|divideSOUND|Add0~52COUT1_104 ))))
// \soundBUZ|divideSOUND|Add0~47  = CARRY(((\soundBUZ|Mux5~0_combout  & !\soundBUZ|divideSOUND|Add0~52 )))
// \soundBUZ|divideSOUND|Add0~47COUT1_105  = CARRY(((\soundBUZ|Mux5~0_combout  & !\soundBUZ|divideSOUND|Add0~52COUT1_104 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux5~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~42 ),
	.cin0(\soundBUZ|divideSOUND|Add0~52 ),
	.cin1(\soundBUZ|divideSOUND|Add0~52COUT1_104 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~45_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~47 ),
	.cout1(\soundBUZ|divideSOUND|Add0~47COUT1_105 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~45 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~45 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~45 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~45 .lut_mask = "3c0c";
defparam \soundBUZ|divideSOUND|Add0~45 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~45 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~45 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~45 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~45 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N3
maxii_lcell \soundBUZ|divideSOUND|Add0~60 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~60_combout  = \soundBUZ|Mux4~0_combout  $ (((((!\soundBUZ|divideSOUND|Add0~42  & \soundBUZ|divideSOUND|Add0~47 ) # (\soundBUZ|divideSOUND|Add0~42  & \soundBUZ|divideSOUND|Add0~47COUT1_105 )))))
// \soundBUZ|divideSOUND|Add0~62  = CARRY((\soundBUZ|Mux4~0_combout ) # ((!\soundBUZ|divideSOUND|Add0~47 )))
// \soundBUZ|divideSOUND|Add0~62COUT1_106  = CARRY((\soundBUZ|Mux4~0_combout ) # ((!\soundBUZ|divideSOUND|Add0~47COUT1_105 )))

	.clk(gnd),
	.dataa(\soundBUZ|Mux4~0_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~42 ),
	.cin0(\soundBUZ|divideSOUND|Add0~47 ),
	.cin1(\soundBUZ|divideSOUND|Add0~47COUT1_105 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~60_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~62 ),
	.cout1(\soundBUZ|divideSOUND|Add0~62COUT1_106 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~60 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~60 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~60 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~60 .lut_mask = "5aaf";
defparam \soundBUZ|divideSOUND|Add0~60 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~60 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~60 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~60 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~60 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N4
maxii_lcell \soundBUZ|divideSOUND|Add0~55 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~55_combout  = \soundBUZ|Mux3~0_combout  $ (((((!\soundBUZ|divideSOUND|Add0~42  & \soundBUZ|divideSOUND|Add0~62 ) # (\soundBUZ|divideSOUND|Add0~42  & \soundBUZ|divideSOUND|Add0~62COUT1_106 )))))
// \soundBUZ|divideSOUND|Add0~57  = CARRY((\soundBUZ|Mux3~0_combout  & ((!\soundBUZ|divideSOUND|Add0~62COUT1_106 ))))

	.clk(gnd),
	.dataa(\soundBUZ|Mux3~0_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~42 ),
	.cin0(\soundBUZ|divideSOUND|Add0~62 ),
	.cin1(\soundBUZ|divideSOUND|Add0~62COUT1_106 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~55_combout ),
	.regout(),
	.cout(\soundBUZ|divideSOUND|Add0~57 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~55 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~55 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~55 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~55 .lut_mask = "5a0a";
defparam \soundBUZ|divideSOUND|Add0~55 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~55 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~55 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~55 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~55 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y5_N6
maxii_lcell \soundBUZ|Mux2~0 (
// Equation(s):
// \soundBUZ|Mux2~0_combout  = (snd_status[0] & (snd_status[1] $ (((snd_status[3] & !snd_status[2]))))) # (!snd_status[0] & (snd_status[3] $ (((snd_status[2] & !snd_status[1])))))

	.clk(gnd),
	.dataa(snd_status[0]),
	.datab(snd_status[3]),
	.datac(snd_status[2]),
	.datad(snd_status[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|Mux2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|Mux2~0 .lut_mask = "e61c";
defparam \soundBUZ|Mux2~0 .operation_mode = "normal";
defparam \soundBUZ|Mux2~0 .output_mode = "comb_only";
defparam \soundBUZ|Mux2~0 .register_cascade_mode = "off";
defparam \soundBUZ|Mux2~0 .sum_lutc_input = "datac";
defparam \soundBUZ|Mux2~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N5
maxii_lcell \soundBUZ|divideSOUND|Add0~70 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~70_combout  = (\soundBUZ|Mux2~0_combout  $ ((\soundBUZ|divideSOUND|Add0~57 )))
// \soundBUZ|divideSOUND|Add0~72  = CARRY(((\soundBUZ|Mux2~0_combout ) # (!\soundBUZ|divideSOUND|Add0~57 )))
// \soundBUZ|divideSOUND|Add0~72COUT1_107  = CARRY(((\soundBUZ|Mux2~0_combout ) # (!\soundBUZ|divideSOUND|Add0~57 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux2~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~57 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~70_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~72 ),
	.cout1(\soundBUZ|divideSOUND|Add0~72COUT1_107 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~70 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~70 .lut_mask = "3ccf";
defparam \soundBUZ|divideSOUND|Add0~70 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~70 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~70 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~70 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~70 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N6
maxii_lcell \soundBUZ|divideSOUND|Add0~65 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~65_combout  = (\soundBUZ|Mux0~0_combout  $ ((!(!\soundBUZ|divideSOUND|Add0~57  & \soundBUZ|divideSOUND|Add0~72 ) # (\soundBUZ|divideSOUND|Add0~57  & \soundBUZ|divideSOUND|Add0~72COUT1_107 ))))
// \soundBUZ|divideSOUND|Add0~67  = CARRY(((!\soundBUZ|Mux0~0_combout  & !\soundBUZ|divideSOUND|Add0~72 )))
// \soundBUZ|divideSOUND|Add0~67COUT1_108  = CARRY(((!\soundBUZ|Mux0~0_combout  & !\soundBUZ|divideSOUND|Add0~72COUT1_107 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux0~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~57 ),
	.cin0(\soundBUZ|divideSOUND|Add0~72 ),
	.cin1(\soundBUZ|divideSOUND|Add0~72COUT1_107 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~65_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~67 ),
	.cout1(\soundBUZ|divideSOUND|Add0~67COUT1_108 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~65 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~65 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~65 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~65 .lut_mask = "c303";
defparam \soundBUZ|divideSOUND|Add0~65 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~65 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~65 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~65 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~65 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N7
maxii_lcell \soundBUZ|divideSOUND|Add0~80 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~80_combout  = (\soundBUZ|Mux0~0_combout  $ ((!(!\soundBUZ|divideSOUND|Add0~57  & \soundBUZ|divideSOUND|Add0~67 ) # (\soundBUZ|divideSOUND|Add0~57  & \soundBUZ|divideSOUND|Add0~67COUT1_108 ))))
// \soundBUZ|divideSOUND|Add0~82  = CARRY(((!\soundBUZ|divideSOUND|Add0~67 ) # (!\soundBUZ|Mux0~0_combout )))
// \soundBUZ|divideSOUND|Add0~82COUT1_109  = CARRY(((!\soundBUZ|divideSOUND|Add0~67COUT1_108 ) # (!\soundBUZ|Mux0~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|Mux0~0_combout ),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~57 ),
	.cin0(\soundBUZ|divideSOUND|Add0~67 ),
	.cin1(\soundBUZ|divideSOUND|Add0~67COUT1_108 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~80_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~82 ),
	.cout1(\soundBUZ|divideSOUND|Add0~82COUT1_109 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~80 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~80 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~80 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~80 .lut_mask = "c33f";
defparam \soundBUZ|divideSOUND|Add0~80 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~80 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~80 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~80 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~80 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N8
maxii_lcell \soundBUZ|divideSOUND|Add0~75 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~75_combout  = (((!(!\soundBUZ|divideSOUND|Add0~57  & \soundBUZ|divideSOUND|Add0~82 ) # (\soundBUZ|divideSOUND|Add0~57  & \soundBUZ|divideSOUND|Add0~82COUT1_109 ))))
// \soundBUZ|divideSOUND|Add0~77  = CARRY(((!\soundBUZ|divideSOUND|Add0~82 )))
// \soundBUZ|divideSOUND|Add0~77COUT1_110  = CARRY(((!\soundBUZ|divideSOUND|Add0~82COUT1_109 )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~57 ),
	.cin0(\soundBUZ|divideSOUND|Add0~82 ),
	.cin1(\soundBUZ|divideSOUND|Add0~82COUT1_109 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~75_combout ),
	.regout(),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|Add0~77 ),
	.cout1(\soundBUZ|divideSOUND|Add0~77COUT1_110 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~75 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~75 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~75 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~75 .lut_mask = "0f0f";
defparam \soundBUZ|divideSOUND|Add0~75 .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|Add0~75 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~75 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~75 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~75 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y5_N9
maxii_lcell \soundBUZ|divideSOUND|Add0~85 (
// Equation(s):
// \soundBUZ|divideSOUND|Add0~85_combout  = ((((!\soundBUZ|divideSOUND|Add0~57  & \soundBUZ|divideSOUND|Add0~77 ) # (\soundBUZ|divideSOUND|Add0~57  & \soundBUZ|divideSOUND|Add0~77COUT1_110 ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|Add0~57 ),
	.cin0(\soundBUZ|divideSOUND|Add0~77 ),
	.cin1(\soundBUZ|divideSOUND|Add0~77COUT1_110 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Add0~85_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Add0~85 .cin0_used = "true";
defparam \soundBUZ|divideSOUND|Add0~85 .cin1_used = "true";
defparam \soundBUZ|divideSOUND|Add0~85 .cin_used = "true";
defparam \soundBUZ|divideSOUND|Add0~85 .lut_mask = "f0f0";
defparam \soundBUZ|divideSOUND|Add0~85 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Add0~85 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Add0~85 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Add0~85 .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|Add0~85 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y7_N4
maxii_lcell \soundBUZ|divideSOUND|cnt_p[0] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [0] = DFFEAS((!\soundBUZ|divideSOUND|cnt_p [0]), GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[0]~59  = CARRY((\soundBUZ|divideSOUND|cnt_p [0]))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [0]),
	.cout(\soundBUZ|divideSOUND|cnt_p[0]~59 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[0] .lut_mask = "55aa";
defparam \soundBUZ|divideSOUND|cnt_p[0] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[0] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[0] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[0] .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|cnt_p[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y7_N5
maxii_lcell \soundBUZ|divideSOUND|cnt_p[1] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [1] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [1] $ ((((\soundBUZ|divideSOUND|cnt_p[0]~59 )))), GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[1]~61  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[0]~59 )) # (!\soundBUZ|divideSOUND|cnt_p [1]))
// \soundBUZ|divideSOUND|cnt_p[1]~61COUT1_65  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[0]~59 )) # (!\soundBUZ|divideSOUND|cnt_p [1]))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[0]~59 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [1]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[1]~61 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[1]~61COUT1_65 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[1] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[1] .lut_mask = "5a5f";
defparam \soundBUZ|divideSOUND|cnt_p[1] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[1] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[1] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[1] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y7_N6
maxii_lcell \soundBUZ|divideSOUND|cnt_p[2] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [2] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [2] $ ((((!(!\soundBUZ|divideSOUND|cnt_p[0]~59  & \soundBUZ|divideSOUND|cnt_p[1]~61 ) # (\soundBUZ|divideSOUND|cnt_p[0]~59  & \soundBUZ|divideSOUND|cnt_p[1]~61COUT1_65 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[2]~63  = CARRY((\soundBUZ|divideSOUND|cnt_p [2] & ((!\soundBUZ|divideSOUND|cnt_p[1]~61 ))))
// \soundBUZ|divideSOUND|cnt_p[2]~63COUT1_66  = CARRY((\soundBUZ|divideSOUND|cnt_p [2] & ((!\soundBUZ|divideSOUND|cnt_p[1]~61COUT1_65 ))))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[0]~59 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[1]~61 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[1]~61COUT1_65 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [2]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[2]~63 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[2]~63COUT1_66 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[2] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[2] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[2] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[2] .lut_mask = "a50a";
defparam \soundBUZ|divideSOUND|cnt_p[2] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[2] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[2] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[2] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y7_N7
maxii_lcell \soundBUZ|divideSOUND|cnt_p[3] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [3] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [3] $ (((!\soundBUZ|divideSOUND|cnt_p[0]~59  & \soundBUZ|divideSOUND|cnt_p[2]~63 ) # (\soundBUZ|divideSOUND|cnt_p[0]~59  & \soundBUZ|divideSOUND|cnt_p[2]~63COUT1_66 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[3]~57  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[2]~63 ) # (!\soundBUZ|divideSOUND|cnt_p [3])))
// \soundBUZ|divideSOUND|cnt_p[3]~57COUT1_67  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[2]~63COUT1_66 ) # (!\soundBUZ|divideSOUND|cnt_p [3])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[0]~59 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[2]~63 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[2]~63COUT1_66 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [3]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[3]~57 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[3]~57COUT1_67 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[3] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[3] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[3] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[3] .lut_mask = "3c3f";
defparam \soundBUZ|divideSOUND|cnt_p[3] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[3] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[3] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[3] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y7_N8
maxii_lcell \soundBUZ|divideSOUND|cnt_p[4] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [4] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [4] $ ((((!(!\soundBUZ|divideSOUND|cnt_p[0]~59  & \soundBUZ|divideSOUND|cnt_p[3]~57 ) # (\soundBUZ|divideSOUND|cnt_p[0]~59  & \soundBUZ|divideSOUND|cnt_p[3]~57COUT1_67 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[4]~55  = CARRY((\soundBUZ|divideSOUND|cnt_p [4] & ((!\soundBUZ|divideSOUND|cnt_p[3]~57 ))))
// \soundBUZ|divideSOUND|cnt_p[4]~55COUT1_68  = CARRY((\soundBUZ|divideSOUND|cnt_p [4] & ((!\soundBUZ|divideSOUND|cnt_p[3]~57COUT1_67 ))))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[0]~59 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[3]~57 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[3]~57COUT1_67 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [4]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[4]~55 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[4]~55COUT1_68 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[4] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[4] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[4] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[4] .lut_mask = "a50a";
defparam \soundBUZ|divideSOUND|cnt_p[4] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[4] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[4] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[4] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X13_Y7_N9
maxii_lcell \soundBUZ|divideSOUND|cnt_p[5] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [5] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [5] $ (((!\soundBUZ|divideSOUND|cnt_p[0]~59  & \soundBUZ|divideSOUND|cnt_p[4]~55 ) # (\soundBUZ|divideSOUND|cnt_p[0]~59  & \soundBUZ|divideSOUND|cnt_p[4]~55COUT1_68 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[5]~53  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[4]~55COUT1_68 ) # (!\soundBUZ|divideSOUND|cnt_p [5])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[0]~59 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[4]~55 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[4]~55COUT1_68 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [5]),
	.cout(\soundBUZ|divideSOUND|cnt_p[5]~53 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[5] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[5] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[5] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[5] .lut_mask = "3c3f";
defparam \soundBUZ|divideSOUND|cnt_p[5] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[5] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[5] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[5] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N0
maxii_lcell \soundBUZ|divideSOUND|cnt_p[6] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [6] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [6] $ ((!\soundBUZ|divideSOUND|cnt_p[5]~53 ))), GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[6]~49  = CARRY(((\soundBUZ|divideSOUND|cnt_p [6] & !\soundBUZ|divideSOUND|cnt_p[5]~53 )))
// \soundBUZ|divideSOUND|cnt_p[6]~49COUT1_69  = CARRY(((\soundBUZ|divideSOUND|cnt_p [6] & !\soundBUZ|divideSOUND|cnt_p[5]~53 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[5]~53 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [6]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[6]~49 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[6]~49COUT1_69 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[6] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[6] .lut_mask = "c30c";
defparam \soundBUZ|divideSOUND|cnt_p[6] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[6] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[6] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[6] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N1
maxii_lcell \soundBUZ|divideSOUND|cnt_p[7] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [7] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [7] $ (((!\soundBUZ|divideSOUND|cnt_p[5]~53  & \soundBUZ|divideSOUND|cnt_p[6]~49 ) # (\soundBUZ|divideSOUND|cnt_p[5]~53  & \soundBUZ|divideSOUND|cnt_p[6]~49COUT1_69 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[7]~51  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[6]~49 ) # (!\soundBUZ|divideSOUND|cnt_p [7])))
// \soundBUZ|divideSOUND|cnt_p[7]~51COUT1_70  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[6]~49COUT1_69 ) # (!\soundBUZ|divideSOUND|cnt_p [7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[5]~53 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[6]~49 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[6]~49COUT1_69 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [7]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[7]~51 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[7]~51COUT1_70 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[7] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[7] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[7] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[7] .lut_mask = "3c3f";
defparam \soundBUZ|divideSOUND|cnt_p[7] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[7] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[7] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[7] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N2
maxii_lcell \soundBUZ|divideSOUND|cnt_p[8] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [8] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [8] $ ((!(!\soundBUZ|divideSOUND|cnt_p[5]~53  & \soundBUZ|divideSOUND|cnt_p[7]~51 ) # (\soundBUZ|divideSOUND|cnt_p[5]~53  & \soundBUZ|divideSOUND|cnt_p[7]~51COUT1_70 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[8]~45  = CARRY(((\soundBUZ|divideSOUND|cnt_p [8] & !\soundBUZ|divideSOUND|cnt_p[7]~51 )))
// \soundBUZ|divideSOUND|cnt_p[8]~45COUT1_71  = CARRY(((\soundBUZ|divideSOUND|cnt_p [8] & !\soundBUZ|divideSOUND|cnt_p[7]~51COUT1_70 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[5]~53 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[7]~51 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[7]~51COUT1_70 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [8]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[8]~45 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[8]~45COUT1_71 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[8] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[8] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[8] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[8] .lut_mask = "c30c";
defparam \soundBUZ|divideSOUND|cnt_p[8] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[8] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[8] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[8] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N3
maxii_lcell \soundBUZ|divideSOUND|cnt_p[9] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [9] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [9] $ (((((!\soundBUZ|divideSOUND|cnt_p[5]~53  & \soundBUZ|divideSOUND|cnt_p[8]~45 ) # (\soundBUZ|divideSOUND|cnt_p[5]~53  & \soundBUZ|divideSOUND|cnt_p[8]~45COUT1_71 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[9]~47  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[8]~45 )) # (!\soundBUZ|divideSOUND|cnt_p [9]))
// \soundBUZ|divideSOUND|cnt_p[9]~47COUT1_72  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[8]~45COUT1_71 )) # (!\soundBUZ|divideSOUND|cnt_p [9]))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[5]~53 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[8]~45 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[8]~45COUT1_71 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [9]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[9]~47 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[9]~47COUT1_72 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[9] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[9] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[9] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[9] .lut_mask = "5a5f";
defparam \soundBUZ|divideSOUND|cnt_p[9] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[9] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[9] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[9] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N4
maxii_lcell \soundBUZ|divideSOUND|cnt_p[10] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [10] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [10] $ ((((!(!\soundBUZ|divideSOUND|cnt_p[5]~53  & \soundBUZ|divideSOUND|cnt_p[9]~47 ) # (\soundBUZ|divideSOUND|cnt_p[5]~53  & \soundBUZ|divideSOUND|cnt_p[9]~47COUT1_72 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[10]~43  = CARRY((\soundBUZ|divideSOUND|cnt_p [10] & ((!\soundBUZ|divideSOUND|cnt_p[9]~47COUT1_72 ))))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[5]~53 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[9]~47 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[9]~47COUT1_72 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [10]),
	.cout(\soundBUZ|divideSOUND|cnt_p[10]~43 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[10] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[10] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[10] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[10] .lut_mask = "a50a";
defparam \soundBUZ|divideSOUND|cnt_p[10] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[10] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[10] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[10] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N5
maxii_lcell \soundBUZ|divideSOUND|cnt_p[11] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [11] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [11] $ ((((\soundBUZ|divideSOUND|cnt_p[10]~43 )))), GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[11]~41  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[10]~43 )) # (!\soundBUZ|divideSOUND|cnt_p [11]))
// \soundBUZ|divideSOUND|cnt_p[11]~41COUT1_73  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[10]~43 )) # (!\soundBUZ|divideSOUND|cnt_p [11]))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[10]~43 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [11]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[11]~41 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[11]~41COUT1_73 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[11] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[11] .lut_mask = "5a5f";
defparam \soundBUZ|divideSOUND|cnt_p[11] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[11] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[11] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[11] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N6
maxii_lcell \soundBUZ|divideSOUND|cnt_p[12] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [12] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [12] $ ((((!(!\soundBUZ|divideSOUND|cnt_p[10]~43  & \soundBUZ|divideSOUND|cnt_p[11]~41 ) # (\soundBUZ|divideSOUND|cnt_p[10]~43  & \soundBUZ|divideSOUND|cnt_p[11]~41COUT1_73 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[12]~39  = CARRY((\soundBUZ|divideSOUND|cnt_p [12] & ((!\soundBUZ|divideSOUND|cnt_p[11]~41 ))))
// \soundBUZ|divideSOUND|cnt_p[12]~39COUT1_74  = CARRY((\soundBUZ|divideSOUND|cnt_p [12] & ((!\soundBUZ|divideSOUND|cnt_p[11]~41COUT1_73 ))))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[10]~43 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[11]~41 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[11]~41COUT1_73 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [12]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[12]~39 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[12]~39COUT1_74 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[12] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[12] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[12] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[12] .lut_mask = "a50a";
defparam \soundBUZ|divideSOUND|cnt_p[12] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[12] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[12] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[12] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N7
maxii_lcell \soundBUZ|divideSOUND|cnt_p[13] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [13] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [13] $ (((!\soundBUZ|divideSOUND|cnt_p[10]~43  & \soundBUZ|divideSOUND|cnt_p[12]~39 ) # (\soundBUZ|divideSOUND|cnt_p[10]~43  & \soundBUZ|divideSOUND|cnt_p[12]~39COUT1_74 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[13]~37  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[12]~39 ) # (!\soundBUZ|divideSOUND|cnt_p [13])))
// \soundBUZ|divideSOUND|cnt_p[13]~37COUT1_75  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[12]~39COUT1_74 ) # (!\soundBUZ|divideSOUND|cnt_p [13])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [13]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[10]~43 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[12]~39 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[12]~39COUT1_74 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [13]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[13]~37 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[13]~37COUT1_75 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[13] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[13] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[13] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[13] .lut_mask = "3c3f";
defparam \soundBUZ|divideSOUND|cnt_p[13] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[13] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[13] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[13] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N8
maxii_lcell \soundBUZ|divideSOUND|cnt_p[14] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [14] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [14] $ ((((!(!\soundBUZ|divideSOUND|cnt_p[10]~43  & \soundBUZ|divideSOUND|cnt_p[13]~37 ) # (\soundBUZ|divideSOUND|cnt_p[10]~43  & \soundBUZ|divideSOUND|cnt_p[13]~37COUT1_75 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[14]~35  = CARRY((\soundBUZ|divideSOUND|cnt_p [14] & ((!\soundBUZ|divideSOUND|cnt_p[13]~37 ))))
// \soundBUZ|divideSOUND|cnt_p[14]~35COUT1_76  = CARRY((\soundBUZ|divideSOUND|cnt_p [14] & ((!\soundBUZ|divideSOUND|cnt_p[13]~37COUT1_75 ))))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[10]~43 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[13]~37 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[13]~37COUT1_75 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [14]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[14]~35 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[14]~35COUT1_76 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[14] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[14] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[14] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[14] .lut_mask = "a50a";
defparam \soundBUZ|divideSOUND|cnt_p[14] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[14] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[14] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[14] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X14_Y7_N9
maxii_lcell \soundBUZ|divideSOUND|cnt_p[15] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [15] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [15] $ (((!\soundBUZ|divideSOUND|cnt_p[10]~43  & \soundBUZ|divideSOUND|cnt_p[14]~35 ) # (\soundBUZ|divideSOUND|cnt_p[10]~43  & \soundBUZ|divideSOUND|cnt_p[14]~35COUT1_76 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[15]~31  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[14]~35COUT1_76 ) # (!\soundBUZ|divideSOUND|cnt_p [15])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [15]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[10]~43 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[14]~35 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[14]~35COUT1_76 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [15]),
	.cout(\soundBUZ|divideSOUND|cnt_p[15]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[15] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[15] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[15] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[15] .lut_mask = "3c3f";
defparam \soundBUZ|divideSOUND|cnt_p[15] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[15] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[15] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[15] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N0
maxii_lcell \soundBUZ|divideSOUND|cnt_p[16] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [16] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [16] $ ((!\soundBUZ|divideSOUND|cnt_p[15]~31 ))), GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[16]~33  = CARRY(((\soundBUZ|divideSOUND|cnt_p [16] & !\soundBUZ|divideSOUND|cnt_p[15]~31 )))
// \soundBUZ|divideSOUND|cnt_p[16]~33COUT1_77  = CARRY(((\soundBUZ|divideSOUND|cnt_p [16] & !\soundBUZ|divideSOUND|cnt_p[15]~31 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[15]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [16]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[16]~33 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[16]~33COUT1_77 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[16] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[16] .lut_mask = "c30c";
defparam \soundBUZ|divideSOUND|cnt_p[16] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[16] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[16] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[16] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N1
maxii_lcell \soundBUZ|divideSOUND|cnt_p[17] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [17] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [17] $ (((!\soundBUZ|divideSOUND|cnt_p[15]~31  & \soundBUZ|divideSOUND|cnt_p[16]~33 ) # (\soundBUZ|divideSOUND|cnt_p[15]~31  & \soundBUZ|divideSOUND|cnt_p[16]~33COUT1_77 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[17]~1  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[16]~33 ) # (!\soundBUZ|divideSOUND|cnt_p [17])))
// \soundBUZ|divideSOUND|cnt_p[17]~1COUT1_78  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[16]~33COUT1_77 ) # (!\soundBUZ|divideSOUND|cnt_p [17])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[15]~31 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[16]~33 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[16]~33COUT1_77 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [17]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[17]~1 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[17]~1COUT1_78 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[17] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[17] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[17] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[17] .lut_mask = "3c3f";
defparam \soundBUZ|divideSOUND|cnt_p[17] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[17] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[17] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[17] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N2
maxii_lcell \soundBUZ|divideSOUND|cnt_p[18] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [18] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [18] $ ((!(!\soundBUZ|divideSOUND|cnt_p[15]~31  & \soundBUZ|divideSOUND|cnt_p[17]~1 ) # (\soundBUZ|divideSOUND|cnt_p[15]~31  & \soundBUZ|divideSOUND|cnt_p[17]~1COUT1_78 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[18]~3  = CARRY(((\soundBUZ|divideSOUND|cnt_p [18] & !\soundBUZ|divideSOUND|cnt_p[17]~1 )))
// \soundBUZ|divideSOUND|cnt_p[18]~3COUT1_79  = CARRY(((\soundBUZ|divideSOUND|cnt_p [18] & !\soundBUZ|divideSOUND|cnt_p[17]~1COUT1_78 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[15]~31 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[17]~1 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[17]~1COUT1_78 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [18]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[18]~3 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[18]~3COUT1_79 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[18] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[18] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[18] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[18] .lut_mask = "c30c";
defparam \soundBUZ|divideSOUND|cnt_p[18] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[18] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[18] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[18] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N3
maxii_lcell \soundBUZ|divideSOUND|cnt_p[19] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [19] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [19] $ (((((!\soundBUZ|divideSOUND|cnt_p[15]~31  & \soundBUZ|divideSOUND|cnt_p[18]~3 ) # (\soundBUZ|divideSOUND|cnt_p[15]~31  & \soundBUZ|divideSOUND|cnt_p[18]~3COUT1_79 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[19]~5  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[18]~3 )) # (!\soundBUZ|divideSOUND|cnt_p [19]))
// \soundBUZ|divideSOUND|cnt_p[19]~5COUT1_80  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[18]~3COUT1_79 )) # (!\soundBUZ|divideSOUND|cnt_p [19]))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [19]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[15]~31 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[18]~3 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[18]~3COUT1_79 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [19]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[19]~5 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[19]~5COUT1_80 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[19] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[19] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[19] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[19] .lut_mask = "5a5f";
defparam \soundBUZ|divideSOUND|cnt_p[19] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[19] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[19] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[19] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N4
maxii_lcell \soundBUZ|divideSOUND|cnt_p[20] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [20] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [20] $ ((((!(!\soundBUZ|divideSOUND|cnt_p[15]~31  & \soundBUZ|divideSOUND|cnt_p[19]~5 ) # (\soundBUZ|divideSOUND|cnt_p[15]~31  & \soundBUZ|divideSOUND|cnt_p[19]~5COUT1_80 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[20]~7  = CARRY((\soundBUZ|divideSOUND|cnt_p [20] & ((!\soundBUZ|divideSOUND|cnt_p[19]~5COUT1_80 ))))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [20]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[15]~31 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[19]~5 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[19]~5COUT1_80 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [20]),
	.cout(\soundBUZ|divideSOUND|cnt_p[20]~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[20] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[20] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[20] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[20] .lut_mask = "a50a";
defparam \soundBUZ|divideSOUND|cnt_p[20] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[20] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[20] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[20] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N5
maxii_lcell \soundBUZ|divideSOUND|cnt_p[21] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [21] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [21] $ ((((\soundBUZ|divideSOUND|cnt_p[20]~7 )))), GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[21]~9  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[20]~7 )) # (!\soundBUZ|divideSOUND|cnt_p [21]))
// \soundBUZ|divideSOUND|cnt_p[21]~9COUT1_81  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[20]~7 )) # (!\soundBUZ|divideSOUND|cnt_p [21]))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [21]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[20]~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [21]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[21]~9 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[21]~9COUT1_81 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[21] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[21] .lut_mask = "5a5f";
defparam \soundBUZ|divideSOUND|cnt_p[21] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[21] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[21] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[21] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[21] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N6
maxii_lcell \soundBUZ|divideSOUND|cnt_p[22] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [22] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [22] $ ((((!(!\soundBUZ|divideSOUND|cnt_p[20]~7  & \soundBUZ|divideSOUND|cnt_p[21]~9 ) # (\soundBUZ|divideSOUND|cnt_p[20]~7  & \soundBUZ|divideSOUND|cnt_p[21]~9COUT1_81 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[22]~11  = CARRY((\soundBUZ|divideSOUND|cnt_p [22] & ((!\soundBUZ|divideSOUND|cnt_p[21]~9 ))))
// \soundBUZ|divideSOUND|cnt_p[22]~11COUT1_82  = CARRY((\soundBUZ|divideSOUND|cnt_p [22] & ((!\soundBUZ|divideSOUND|cnt_p[21]~9COUT1_81 ))))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [22]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[20]~7 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[21]~9 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[21]~9COUT1_81 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [22]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[22]~11 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[22]~11COUT1_82 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[22] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[22] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[22] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[22] .lut_mask = "a50a";
defparam \soundBUZ|divideSOUND|cnt_p[22] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[22] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[22] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[22] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[22] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N7
maxii_lcell \soundBUZ|divideSOUND|cnt_p[23] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [23] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [23] $ (((!\soundBUZ|divideSOUND|cnt_p[20]~7  & \soundBUZ|divideSOUND|cnt_p[22]~11 ) # (\soundBUZ|divideSOUND|cnt_p[20]~7  & \soundBUZ|divideSOUND|cnt_p[22]~11COUT1_82 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[23]~13  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[22]~11 ) # (!\soundBUZ|divideSOUND|cnt_p [23])))
// \soundBUZ|divideSOUND|cnt_p[23]~13COUT1_83  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[22]~11COUT1_82 ) # (!\soundBUZ|divideSOUND|cnt_p [23])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [23]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[20]~7 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[22]~11 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[22]~11COUT1_82 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [23]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[23]~13 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[23]~13COUT1_83 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[23] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[23] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[23] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[23] .lut_mask = "3c3f";
defparam \soundBUZ|divideSOUND|cnt_p[23] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[23] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[23] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[23] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[23] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N8
maxii_lcell \soundBUZ|divideSOUND|cnt_p[24] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [24] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [24] $ ((((!(!\soundBUZ|divideSOUND|cnt_p[20]~7  & \soundBUZ|divideSOUND|cnt_p[23]~13 ) # (\soundBUZ|divideSOUND|cnt_p[20]~7  & \soundBUZ|divideSOUND|cnt_p[23]~13COUT1_83 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[24]~15  = CARRY((\soundBUZ|divideSOUND|cnt_p [24] & ((!\soundBUZ|divideSOUND|cnt_p[23]~13 ))))
// \soundBUZ|divideSOUND|cnt_p[24]~15COUT1_84  = CARRY((\soundBUZ|divideSOUND|cnt_p [24] & ((!\soundBUZ|divideSOUND|cnt_p[23]~13COUT1_83 ))))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [24]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[20]~7 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[23]~13 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[23]~13COUT1_83 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [24]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[24]~15 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[24]~15COUT1_84 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[24] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[24] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[24] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[24] .lut_mask = "a50a";
defparam \soundBUZ|divideSOUND|cnt_p[24] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[24] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[24] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[24] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[24] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y7_N9
maxii_lcell \soundBUZ|divideSOUND|cnt_p[25] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [25] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [25] $ (((!\soundBUZ|divideSOUND|cnt_p[20]~7  & \soundBUZ|divideSOUND|cnt_p[24]~15 ) # (\soundBUZ|divideSOUND|cnt_p[20]~7  & \soundBUZ|divideSOUND|cnt_p[24]~15COUT1_84 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[25]~17  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[24]~15COUT1_84 ) # (!\soundBUZ|divideSOUND|cnt_p [25])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [25]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[20]~7 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[24]~15 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[24]~15COUT1_84 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [25]),
	.cout(\soundBUZ|divideSOUND|cnt_p[25]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[25] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[25] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[25] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[25] .lut_mask = "3c3f";
defparam \soundBUZ|divideSOUND|cnt_p[25] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[25] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[25] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[25] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[25] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X16_Y7_N0
maxii_lcell \soundBUZ|divideSOUND|cnt_p[26] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [26] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [26] $ ((!\soundBUZ|divideSOUND|cnt_p[25]~17 ))), GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[26]~19  = CARRY(((\soundBUZ|divideSOUND|cnt_p [26] & !\soundBUZ|divideSOUND|cnt_p[25]~17 )))
// \soundBUZ|divideSOUND|cnt_p[26]~19COUT1_85  = CARRY(((\soundBUZ|divideSOUND|cnt_p [26] & !\soundBUZ|divideSOUND|cnt_p[25]~17 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [26]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[25]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [26]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[26]~19 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[26]~19COUT1_85 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[26] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[26] .lut_mask = "c30c";
defparam \soundBUZ|divideSOUND|cnt_p[26] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[26] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[26] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[26] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[26] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X16_Y7_N1
maxii_lcell \soundBUZ|divideSOUND|cnt_p[27] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [27] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [27] $ (((!\soundBUZ|divideSOUND|cnt_p[25]~17  & \soundBUZ|divideSOUND|cnt_p[26]~19 ) # (\soundBUZ|divideSOUND|cnt_p[25]~17  & \soundBUZ|divideSOUND|cnt_p[26]~19COUT1_85 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[27]~21  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[26]~19 ) # (!\soundBUZ|divideSOUND|cnt_p [27])))
// \soundBUZ|divideSOUND|cnt_p[27]~21COUT1_86  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[26]~19COUT1_85 ) # (!\soundBUZ|divideSOUND|cnt_p [27])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [27]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[25]~17 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[26]~19 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[26]~19COUT1_85 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [27]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[27]~21 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[27]~21COUT1_86 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[27] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[27] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[27] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[27] .lut_mask = "3c3f";
defparam \soundBUZ|divideSOUND|cnt_p[27] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[27] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[27] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[27] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[27] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X16_Y7_N2
maxii_lcell \soundBUZ|divideSOUND|cnt_p[28] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [28] = DFFEAS((\soundBUZ|divideSOUND|cnt_p [28] $ ((!(!\soundBUZ|divideSOUND|cnt_p[25]~17  & \soundBUZ|divideSOUND|cnt_p[27]~21 ) # (\soundBUZ|divideSOUND|cnt_p[25]~17  & \soundBUZ|divideSOUND|cnt_p[27]~21COUT1_86 )))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[28]~23  = CARRY(((\soundBUZ|divideSOUND|cnt_p [28] & !\soundBUZ|divideSOUND|cnt_p[27]~21 )))
// \soundBUZ|divideSOUND|cnt_p[28]~23COUT1_87  = CARRY(((\soundBUZ|divideSOUND|cnt_p [28] & !\soundBUZ|divideSOUND|cnt_p[27]~21COUT1_86 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [28]),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[25]~17 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[27]~21 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[27]~21COUT1_86 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [28]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[28]~23 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[28]~23COUT1_87 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[28] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[28] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[28] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[28] .lut_mask = "c30c";
defparam \soundBUZ|divideSOUND|cnt_p[28] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[28] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[28] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[28] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[28] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X16_Y7_N3
maxii_lcell \soundBUZ|divideSOUND|cnt_p[29] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [29] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [29] $ (((((!\soundBUZ|divideSOUND|cnt_p[25]~17  & \soundBUZ|divideSOUND|cnt_p[28]~23 ) # (\soundBUZ|divideSOUND|cnt_p[25]~17  & \soundBUZ|divideSOUND|cnt_p[28]~23COUT1_87 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[29]~25  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[28]~23 )) # (!\soundBUZ|divideSOUND|cnt_p [29]))
// \soundBUZ|divideSOUND|cnt_p[29]~25COUT1_88  = CARRY(((!\soundBUZ|divideSOUND|cnt_p[28]~23COUT1_87 )) # (!\soundBUZ|divideSOUND|cnt_p [29]))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [29]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[25]~17 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[28]~23 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[28]~23COUT1_87 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [29]),
	.cout(),
	.cout0(\soundBUZ|divideSOUND|cnt_p[29]~25 ),
	.cout1(\soundBUZ|divideSOUND|cnt_p[29]~25COUT1_88 ));
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[29] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[29] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[29] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[29] .lut_mask = "5a5f";
defparam \soundBUZ|divideSOUND|cnt_p[29] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[29] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[29] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[29] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[29] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X16_Y7_N4
maxii_lcell \soundBUZ|divideSOUND|cnt_p[30] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [30] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [30] $ ((((!(!\soundBUZ|divideSOUND|cnt_p[25]~17  & \soundBUZ|divideSOUND|cnt_p[29]~25 ) # (\soundBUZ|divideSOUND|cnt_p[25]~17  & \soundBUZ|divideSOUND|cnt_p[29]~25COUT1_88 ))))), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )
// \soundBUZ|divideSOUND|cnt_p[30]~27  = CARRY((\soundBUZ|divideSOUND|cnt_p [30] & ((!\soundBUZ|divideSOUND|cnt_p[29]~25COUT1_88 ))))

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [30]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[25]~17 ),
	.cin0(\soundBUZ|divideSOUND|cnt_p[29]~25 ),
	.cin1(\soundBUZ|divideSOUND|cnt_p[29]~25COUT1_88 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [30]),
	.cout(\soundBUZ|divideSOUND|cnt_p[30]~27 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[30] .cin0_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[30] .cin1_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[30] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[30] .lut_mask = "a50a";
defparam \soundBUZ|divideSOUND|cnt_p[30] .operation_mode = "arithmetic";
defparam \soundBUZ|divideSOUND|cnt_p[30] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[30] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[30] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[30] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X16_Y7_N5
maxii_lcell \soundBUZ|divideSOUND|cnt_p[31] (
// Equation(s):
// \soundBUZ|divideSOUND|cnt_p [31] = DFFEAS(\soundBUZ|divideSOUND|cnt_p [31] $ ((((\soundBUZ|divideSOUND|cnt_p[30]~27 )))), GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , \soundBUZ|divideSOUND|Equal0~17_combout , )

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|cnt_p [31]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\soundBUZ|divideSOUND|cnt_p[30]~27 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|cnt_p [31]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|cnt_p[31] .cin_used = "true";
defparam \soundBUZ|divideSOUND|cnt_p[31] .lut_mask = "5a5a";
defparam \soundBUZ|divideSOUND|cnt_p[31] .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|cnt_p[31] .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|cnt_p[31] .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|cnt_p[31] .sum_lutc_input = "cin";
defparam \soundBUZ|divideSOUND|cnt_p[31] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X15_Y8_N9
maxii_lcell \soundBUZ|divideSOUND|Equal0~15 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~15_combout  = (\soundBUZ|divideSOUND|cnt_p [30] & (\soundBUZ|divideSOUND|cnt_p [28] & (\soundBUZ|divideSOUND|cnt_p [29] & \soundBUZ|divideSOUND|Add0~85_combout ))) # (!\soundBUZ|divideSOUND|cnt_p [30] & 
// (!\soundBUZ|divideSOUND|cnt_p [28] & (!\soundBUZ|divideSOUND|cnt_p [29] & !\soundBUZ|divideSOUND|Add0~85_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [30]),
	.datab(\soundBUZ|divideSOUND|cnt_p [28]),
	.datac(\soundBUZ|divideSOUND|cnt_p [29]),
	.datad(\soundBUZ|divideSOUND|Add0~85_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~15 .lut_mask = "8001";
defparam \soundBUZ|divideSOUND|Equal0~15 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~15 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~15 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~15 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y8_N8
maxii_lcell \soundBUZ|divideSOUND|Equal0~16 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~16_combout  = (\soundBUZ|divideSOUND|cnt_p [0] & (\soundBUZ|divideSOUND|Equal0~15_combout  & (\soundBUZ|divideSOUND|Add0~85_combout  $ (!\soundBUZ|divideSOUND|cnt_p [31]))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|Add0~85_combout ),
	.datab(\soundBUZ|divideSOUND|cnt_p [0]),
	.datac(\soundBUZ|divideSOUND|cnt_p [31]),
	.datad(\soundBUZ|divideSOUND|Equal0~15_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~16 .lut_mask = "8400";
defparam \soundBUZ|divideSOUND|Equal0~16 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~16 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~16 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~16 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y8_N3
maxii_lcell \soundBUZ|divideSOUND|Equal0~0 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~0_combout  = (\soundBUZ|Mux3~0_combout  & (\soundBUZ|divideSOUND|cnt_p [1] & (\soundBUZ|divideSOUND|cnt_p [2] $ (!\soundBUZ|divideSOUND|Add0~0_combout )))) # (!\soundBUZ|Mux3~0_combout  & (!\soundBUZ|divideSOUND|cnt_p [1] & 
// (\soundBUZ|divideSOUND|cnt_p [2] $ (!\soundBUZ|divideSOUND|Add0~0_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|Mux3~0_combout ),
	.datab(\soundBUZ|divideSOUND|cnt_p [2]),
	.datac(\soundBUZ|divideSOUND|Add0~0_combout ),
	.datad(\soundBUZ|divideSOUND|cnt_p [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~0 .lut_mask = "8241";
defparam \soundBUZ|divideSOUND|Equal0~0 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~0 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~0 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~0 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y8_N7
maxii_lcell \soundBUZ|divideSOUND|Equal0~1 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~1_combout  = (\soundBUZ|divideSOUND|Add0~10_combout  & (\soundBUZ|divideSOUND|cnt_p [4] & (\soundBUZ|divideSOUND|Add0~5_combout  $ (!\soundBUZ|divideSOUND|cnt_p [3])))) # (!\soundBUZ|divideSOUND|Add0~10_combout  & 
// (!\soundBUZ|divideSOUND|cnt_p [4] & (\soundBUZ|divideSOUND|Add0~5_combout  $ (!\soundBUZ|divideSOUND|cnt_p [3]))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|Add0~10_combout ),
	.datab(\soundBUZ|divideSOUND|Add0~5_combout ),
	.datac(\soundBUZ|divideSOUND|cnt_p [3]),
	.datad(\soundBUZ|divideSOUND|cnt_p [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~1 .lut_mask = "8241";
defparam \soundBUZ|divideSOUND|Equal0~1 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~1 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~1 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~1 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y8_N4
maxii_lcell \soundBUZ|divideSOUND|Equal0~3 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~3_combout  = (\soundBUZ|divideSOUND|Add0~25_combout  & (\soundBUZ|divideSOUND|cnt_p [8] & (\soundBUZ|divideSOUND|Add0~30_combout  $ (!\soundBUZ|divideSOUND|cnt_p [7])))) # (!\soundBUZ|divideSOUND|Add0~25_combout  & 
// (!\soundBUZ|divideSOUND|cnt_p [8] & (\soundBUZ|divideSOUND|Add0~30_combout  $ (!\soundBUZ|divideSOUND|cnt_p [7]))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|Add0~25_combout ),
	.datab(\soundBUZ|divideSOUND|Add0~30_combout ),
	.datac(\soundBUZ|divideSOUND|cnt_p [7]),
	.datad(\soundBUZ|divideSOUND|cnt_p [8]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~3 .lut_mask = "8241";
defparam \soundBUZ|divideSOUND|Equal0~3 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~3 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~3 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~3 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y8_N5
maxii_lcell \soundBUZ|divideSOUND|Equal0~2 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~2_combout  = (\soundBUZ|divideSOUND|Add0~15_combout  & (\soundBUZ|divideSOUND|cnt_p [5] & (\soundBUZ|divideSOUND|Add0~20_combout  $ (!\soundBUZ|divideSOUND|cnt_p [6])))) # (!\soundBUZ|divideSOUND|Add0~15_combout  & 
// (!\soundBUZ|divideSOUND|cnt_p [5] & (\soundBUZ|divideSOUND|Add0~20_combout  $ (!\soundBUZ|divideSOUND|cnt_p [6]))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|Add0~15_combout ),
	.datab(\soundBUZ|divideSOUND|Add0~20_combout ),
	.datac(\soundBUZ|divideSOUND|cnt_p [6]),
	.datad(\soundBUZ|divideSOUND|cnt_p [5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~2 .lut_mask = "8241";
defparam \soundBUZ|divideSOUND|Equal0~2 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~2 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~2 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~2 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y8_N6
maxii_lcell \soundBUZ|divideSOUND|Equal0~4 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~4_combout  = (\soundBUZ|divideSOUND|Equal0~0_combout  & (\soundBUZ|divideSOUND|Equal0~1_combout  & (\soundBUZ|divideSOUND|Equal0~3_combout  & \soundBUZ|divideSOUND|Equal0~2_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|Equal0~0_combout ),
	.datab(\soundBUZ|divideSOUND|Equal0~1_combout ),
	.datac(\soundBUZ|divideSOUND|Equal0~3_combout ),
	.datad(\soundBUZ|divideSOUND|Equal0~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~4 .lut_mask = "8000";
defparam \soundBUZ|divideSOUND|Equal0~4 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~4 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~4 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~4 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N5
maxii_lcell \soundBUZ|divideSOUND|Equal0~5 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~5_combout  = (\soundBUZ|divideSOUND|cnt_p [9] & (\soundBUZ|divideSOUND|Add0~40_combout  & (\soundBUZ|divideSOUND|cnt_p [10] $ (!\soundBUZ|divideSOUND|Add0~35_combout )))) # (!\soundBUZ|divideSOUND|cnt_p [9] & 
// (!\soundBUZ|divideSOUND|Add0~40_combout  & (\soundBUZ|divideSOUND|cnt_p [10] $ (!\soundBUZ|divideSOUND|Add0~35_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [9]),
	.datab(\soundBUZ|divideSOUND|cnt_p [10]),
	.datac(\soundBUZ|divideSOUND|Add0~40_combout ),
	.datad(\soundBUZ|divideSOUND|Add0~35_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~5 .lut_mask = "8421";
defparam \soundBUZ|divideSOUND|Equal0~5 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~5 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~5 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~5 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N0
maxii_lcell \soundBUZ|divideSOUND|Equal0~8 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~8_combout  = (\soundBUZ|divideSOUND|cnt_p [15] & (\soundBUZ|divideSOUND|Add0~70_combout  & (\soundBUZ|divideSOUND|cnt_p [16] $ (!\soundBUZ|divideSOUND|Add0~65_combout )))) # (!\soundBUZ|divideSOUND|cnt_p [15] & 
// (!\soundBUZ|divideSOUND|Add0~70_combout  & (\soundBUZ|divideSOUND|cnt_p [16] $ (!\soundBUZ|divideSOUND|Add0~65_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [15]),
	.datab(\soundBUZ|divideSOUND|Add0~70_combout ),
	.datac(\soundBUZ|divideSOUND|cnt_p [16]),
	.datad(\soundBUZ|divideSOUND|Add0~65_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~8 .lut_mask = "9009";
defparam \soundBUZ|divideSOUND|Equal0~8 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~8 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~8 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~8 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N4
maxii_lcell \soundBUZ|divideSOUND|Equal0~6 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~6_combout  = (\soundBUZ|divideSOUND|cnt_p [11] & (\soundBUZ|divideSOUND|Add0~50_combout  & (\soundBUZ|divideSOUND|Add0~45_combout  $ (!\soundBUZ|divideSOUND|cnt_p [12])))) # (!\soundBUZ|divideSOUND|cnt_p [11] & 
// (!\soundBUZ|divideSOUND|Add0~50_combout  & (\soundBUZ|divideSOUND|Add0~45_combout  $ (!\soundBUZ|divideSOUND|cnt_p [12]))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [11]),
	.datab(\soundBUZ|divideSOUND|Add0~50_combout ),
	.datac(\soundBUZ|divideSOUND|Add0~45_combout ),
	.datad(\soundBUZ|divideSOUND|cnt_p [12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~6 .lut_mask = "9009";
defparam \soundBUZ|divideSOUND|Equal0~6 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~6 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~6 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~6 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N8
maxii_lcell \soundBUZ|divideSOUND|Equal0~7 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~7_combout  = (\soundBUZ|divideSOUND|cnt_p [13] & (\soundBUZ|divideSOUND|Add0~60_combout  & (\soundBUZ|divideSOUND|cnt_p [14] $ (!\soundBUZ|divideSOUND|Add0~55_combout )))) # (!\soundBUZ|divideSOUND|cnt_p [13] & 
// (!\soundBUZ|divideSOUND|Add0~60_combout  & (\soundBUZ|divideSOUND|cnt_p [14] $ (!\soundBUZ|divideSOUND|Add0~55_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [13]),
	.datab(\soundBUZ|divideSOUND|cnt_p [14]),
	.datac(\soundBUZ|divideSOUND|Add0~60_combout ),
	.datad(\soundBUZ|divideSOUND|Add0~55_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~7 .lut_mask = "8421";
defparam \soundBUZ|divideSOUND|Equal0~7 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~7 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~7 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~7 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N9
maxii_lcell \soundBUZ|divideSOUND|Equal0~9 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~9_combout  = (\soundBUZ|divideSOUND|Equal0~5_combout  & (\soundBUZ|divideSOUND|Equal0~8_combout  & (\soundBUZ|divideSOUND|Equal0~6_combout  & \soundBUZ|divideSOUND|Equal0~7_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|Equal0~5_combout ),
	.datab(\soundBUZ|divideSOUND|Equal0~8_combout ),
	.datac(\soundBUZ|divideSOUND|Equal0~6_combout ),
	.datad(\soundBUZ|divideSOUND|Equal0~7_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~9 .lut_mask = "8000";
defparam \soundBUZ|divideSOUND|Equal0~9 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~9 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~9 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~9 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y8_N3
maxii_lcell \soundBUZ|divideSOUND|Equal0~12 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~12_combout  = (\soundBUZ|divideSOUND|cnt_p [22] & (\soundBUZ|divideSOUND|cnt_p [23] & (\soundBUZ|divideSOUND|cnt_p [24] & \soundBUZ|divideSOUND|Add0~85_combout ))) # (!\soundBUZ|divideSOUND|cnt_p [22] & 
// (!\soundBUZ|divideSOUND|cnt_p [23] & (!\soundBUZ|divideSOUND|cnt_p [24] & !\soundBUZ|divideSOUND|Add0~85_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [22]),
	.datab(\soundBUZ|divideSOUND|cnt_p [23]),
	.datac(\soundBUZ|divideSOUND|cnt_p [24]),
	.datad(\soundBUZ|divideSOUND|Add0~85_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~12 .lut_mask = "8001";
defparam \soundBUZ|divideSOUND|Equal0~12 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~12 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~12 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~12 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y8_N7
maxii_lcell \soundBUZ|divideSOUND|Equal0~13 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~13_combout  = (\soundBUZ|divideSOUND|cnt_p [25] & (\soundBUZ|divideSOUND|cnt_p [26] & (\soundBUZ|divideSOUND|cnt_p [27] & \soundBUZ|divideSOUND|Add0~85_combout ))) # (!\soundBUZ|divideSOUND|cnt_p [25] & 
// (!\soundBUZ|divideSOUND|cnt_p [26] & (!\soundBUZ|divideSOUND|cnt_p [27] & !\soundBUZ|divideSOUND|Add0~85_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [25]),
	.datab(\soundBUZ|divideSOUND|cnt_p [26]),
	.datac(\soundBUZ|divideSOUND|cnt_p [27]),
	.datad(\soundBUZ|divideSOUND|Add0~85_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~13 .lut_mask = "8001";
defparam \soundBUZ|divideSOUND|Equal0~13 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~13 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~13 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~13 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y8_N4
maxii_lcell \soundBUZ|divideSOUND|Equal0~10 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~10_combout  = (\soundBUZ|divideSOUND|cnt_p [17] & (\soundBUZ|divideSOUND|Add0~80_combout  & (\soundBUZ|divideSOUND|cnt_p [18] $ (!\soundBUZ|divideSOUND|Add0~75_combout )))) # (!\soundBUZ|divideSOUND|cnt_p [17] & 
// (!\soundBUZ|divideSOUND|Add0~80_combout  & (\soundBUZ|divideSOUND|cnt_p [18] $ (!\soundBUZ|divideSOUND|Add0~75_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [17]),
	.datab(\soundBUZ|divideSOUND|Add0~80_combout ),
	.datac(\soundBUZ|divideSOUND|cnt_p [18]),
	.datad(\soundBUZ|divideSOUND|Add0~75_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~10 .lut_mask = "9009";
defparam \soundBUZ|divideSOUND|Equal0~10 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~10 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~10 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~10 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y8_N1
maxii_lcell \soundBUZ|divideSOUND|Equal0~11 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~11_combout  = (\soundBUZ|divideSOUND|cnt_p [19] & (\soundBUZ|divideSOUND|cnt_p [21] & (\soundBUZ|divideSOUND|cnt_p [20] & \soundBUZ|divideSOUND|Add0~85_combout ))) # (!\soundBUZ|divideSOUND|cnt_p [19] & 
// (!\soundBUZ|divideSOUND|cnt_p [21] & (!\soundBUZ|divideSOUND|cnt_p [20] & !\soundBUZ|divideSOUND|Add0~85_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [19]),
	.datab(\soundBUZ|divideSOUND|cnt_p [21]),
	.datac(\soundBUZ|divideSOUND|cnt_p [20]),
	.datad(\soundBUZ|divideSOUND|Add0~85_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~11 .lut_mask = "8001";
defparam \soundBUZ|divideSOUND|Equal0~11 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~11 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~11 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~11 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y8_N2
maxii_lcell \soundBUZ|divideSOUND|Equal0~14 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~14_combout  = (\soundBUZ|divideSOUND|Equal0~12_combout  & (\soundBUZ|divideSOUND|Equal0~13_combout  & (\soundBUZ|divideSOUND|Equal0~10_combout  & \soundBUZ|divideSOUND|Equal0~11_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|Equal0~12_combout ),
	.datab(\soundBUZ|divideSOUND|Equal0~13_combout ),
	.datac(\soundBUZ|divideSOUND|Equal0~10_combout ),
	.datad(\soundBUZ|divideSOUND|Equal0~11_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~14 .lut_mask = "8000";
defparam \soundBUZ|divideSOUND|Equal0~14 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~14 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~14 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~14 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y8_N5
maxii_lcell \soundBUZ|divideSOUND|Equal0~17 (
// Equation(s):
// \soundBUZ|divideSOUND|Equal0~17_combout  = (\soundBUZ|divideSOUND|Equal0~16_combout  & (\soundBUZ|divideSOUND|Equal0~4_combout  & (\soundBUZ|divideSOUND|Equal0~9_combout  & \soundBUZ|divideSOUND|Equal0~14_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|Equal0~16_combout ),
	.datab(\soundBUZ|divideSOUND|Equal0~4_combout ),
	.datac(\soundBUZ|divideSOUND|Equal0~9_combout ),
	.datad(\soundBUZ|divideSOUND|Equal0~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|Equal0~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|Equal0~17 .lut_mask = "8000";
defparam \soundBUZ|divideSOUND|Equal0~17 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|Equal0~17 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|Equal0~17 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|Equal0~17 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|Equal0~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N1
maxii_lcell \soundBUZ|divideSOUND|LessThan0~17 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~17_combout  = (\soundBUZ|divideSOUND|cnt_p [16] & (!\soundBUZ|divideSOUND|cnt_p [15] & ((!\soundBUZ|Mux0~0_combout )))) # (!\soundBUZ|divideSOUND|cnt_p [16] & (\soundBUZ|divideSOUND|cnt_p [15] & ((\soundBUZ|Mux0~0_combout 
// ))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [16]),
	.datab(\soundBUZ|divideSOUND|cnt_p [15]),
	.datac(vcc),
	.datad(\soundBUZ|Mux0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~17 .lut_mask = "4422";
defparam \soundBUZ|divideSOUND|LessThan0~17 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~17 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~17 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~17 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N6
maxii_lcell \soundBUZ|divideSOUND|LessThan0~18 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~18_combout  = ((\soundBUZ|divideSOUND|LessThan0~17_combout  & (\soundBUZ|divideSOUND|cnt_p [14] $ (!\soundBUZ|Mux2~0_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [14]),
	.datac(\soundBUZ|Mux2~0_combout ),
	.datad(\soundBUZ|divideSOUND|LessThan0~17_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~18 .lut_mask = "c300";
defparam \soundBUZ|divideSOUND|LessThan0~18 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~18 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~18 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~18 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~18 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y8_N2
maxii_lcell \soundBUZ|divideSOUND|LessThan0~5 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~5_combout  = (\soundBUZ|Mux2~0_combout  & (((!\soundBUZ|divideSOUND|cnt_p [14]))))

	.clk(gnd),
	.dataa(\soundBUZ|Mux2~0_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\soundBUZ|divideSOUND|cnt_p [14]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~5 .lut_mask = "00aa";
defparam \soundBUZ|divideSOUND|LessThan0~5 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~5 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~5 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~5 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N7
maxii_lcell \soundBUZ|divideSOUND|LessThan0~6 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~6_combout  = (\soundBUZ|divideSOUND|cnt_p [16] & (!\soundBUZ|divideSOUND|cnt_p [15] & (\soundBUZ|divideSOUND|LessThan0~5_combout  & !\soundBUZ|Mux0~0_combout ))) # (!\soundBUZ|divideSOUND|cnt_p [16] & 
// (((\soundBUZ|divideSOUND|LessThan0~5_combout ) # (!\soundBUZ|Mux0~0_combout )) # (!\soundBUZ|divideSOUND|cnt_p [15])))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [16]),
	.datab(\soundBUZ|divideSOUND|cnt_p [15]),
	.datac(\soundBUZ|divideSOUND|LessThan0~5_combout ),
	.datad(\soundBUZ|Mux0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~6 .lut_mask = "5175";
defparam \soundBUZ|divideSOUND|LessThan0~6 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~6 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~6 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~6 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y7_N8
maxii_lcell \soundBUZ|divideSOUND|LessThan0~3 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~3_combout  = (!\soundBUZ|divideSOUND|cnt_p [31] & (((!\soundBUZ|divideSOUND|cnt_p [30] & !\soundBUZ|divideSOUND|cnt_p [29]))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [31]),
	.datab(vcc),
	.datac(\soundBUZ|divideSOUND|cnt_p [30]),
	.datad(\soundBUZ|divideSOUND|cnt_p [29]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~3 .lut_mask = "0005";
defparam \soundBUZ|divideSOUND|LessThan0~3 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~3 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~3 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~3 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y7_N9
maxii_lcell \soundBUZ|divideSOUND|LessThan0~2 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~2_combout  = (!\soundBUZ|divideSOUND|cnt_p [25] & (!\soundBUZ|divideSOUND|cnt_p [28] & (!\soundBUZ|divideSOUND|cnt_p [26] & !\soundBUZ|divideSOUND|cnt_p [27])))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [25]),
	.datab(\soundBUZ|divideSOUND|cnt_p [28]),
	.datac(\soundBUZ|divideSOUND|cnt_p [26]),
	.datad(\soundBUZ|divideSOUND|cnt_p [27]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~2 .lut_mask = "0001";
defparam \soundBUZ|divideSOUND|LessThan0~2 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~2 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~2 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~2 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y8_N6
maxii_lcell \soundBUZ|divideSOUND|LessThan0~1 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~1_combout  = (!\soundBUZ|divideSOUND|cnt_p [22] & (!\soundBUZ|divideSOUND|cnt_p [21] & (!\soundBUZ|divideSOUND|cnt_p [24] & !\soundBUZ|divideSOUND|cnt_p [23])))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [22]),
	.datab(\soundBUZ|divideSOUND|cnt_p [21]),
	.datac(\soundBUZ|divideSOUND|cnt_p [24]),
	.datad(\soundBUZ|divideSOUND|cnt_p [23]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~1 .lut_mask = "0001";
defparam \soundBUZ|divideSOUND|LessThan0~1 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~1 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~1 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~1 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X15_Y8_N0
maxii_lcell \soundBUZ|divideSOUND|LessThan0~0 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~0_combout  = (!\soundBUZ|divideSOUND|cnt_p [19] & (!\soundBUZ|divideSOUND|cnt_p [18] & (!\soundBUZ|divideSOUND|cnt_p [20] & !\soundBUZ|divideSOUND|cnt_p [17])))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [19]),
	.datab(\soundBUZ|divideSOUND|cnt_p [18]),
	.datac(\soundBUZ|divideSOUND|cnt_p [20]),
	.datad(\soundBUZ|divideSOUND|cnt_p [17]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~0 .lut_mask = "0001";
defparam \soundBUZ|divideSOUND|LessThan0~0 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~0 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~0 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~0 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X16_Y7_N7
maxii_lcell \soundBUZ|divideSOUND|LessThan0~4 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~4_combout  = (\soundBUZ|divideSOUND|LessThan0~3_combout  & (\soundBUZ|divideSOUND|LessThan0~2_combout  & (\soundBUZ|divideSOUND|LessThan0~1_combout  & \soundBUZ|divideSOUND|LessThan0~0_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|LessThan0~3_combout ),
	.datab(\soundBUZ|divideSOUND|LessThan0~2_combout ),
	.datac(\soundBUZ|divideSOUND|LessThan0~1_combout ),
	.datad(\soundBUZ|divideSOUND|LessThan0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~4 .lut_mask = "8000";
defparam \soundBUZ|divideSOUND|LessThan0~4 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~4 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~4 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~4 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y8_N8
maxii_lcell \soundBUZ|divideSOUND|LessThan0~7 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~7_combout  = (((!\soundBUZ|divideSOUND|cnt_p [6] & !\soundBUZ|Mux10~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\soundBUZ|divideSOUND|cnt_p [6]),
	.datad(\soundBUZ|Mux10~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~7 .lut_mask = "000f";
defparam \soundBUZ|divideSOUND|LessThan0~7 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~7 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~7 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~7 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y7_N0
maxii_lcell \soundBUZ|divideSOUND|LessThan0~8 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~8_combout  = (!snd_status[3] & (!\soundBUZ|divideSOUND|cnt_p [5] & (snd_status[1] $ (snd_status[2]))))

	.clk(gnd),
	.dataa(snd_status[1]),
	.datab(snd_status[2]),
	.datac(snd_status[3]),
	.datad(\soundBUZ|divideSOUND|cnt_p [5]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~8 .lut_mask = "0006";
defparam \soundBUZ|divideSOUND|LessThan0~8 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~8 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~8 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~8 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y7_N3
maxii_lcell \soundBUZ|divideSOUND|LessThan0~9 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~9_combout  = (!\soundBUZ|divideSOUND|cnt_p [4] & (\soundBUZ|divideSOUND|cnt_p [5] $ (((snd_status[3]) # (!\soundBUZ|Mux4~1_combout )))))

	.clk(gnd),
	.dataa(\soundBUZ|Mux4~1_combout ),
	.datab(\soundBUZ|divideSOUND|cnt_p [5]),
	.datac(snd_status[3]),
	.datad(\soundBUZ|divideSOUND|cnt_p [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~9 .lut_mask = "0039";
defparam \soundBUZ|divideSOUND|LessThan0~9 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~9 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~9 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~9 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N6
maxii_lcell \soundBUZ|divideSOUND|LessThan0~11 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~11_combout  = ((\soundBUZ|Mux10~0_combout  $ (\soundBUZ|divideSOUND|cnt_p [6])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\soundBUZ|Mux10~0_combout ),
	.datad(\soundBUZ|divideSOUND|cnt_p [6]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~11 .lut_mask = "0ff0";
defparam \soundBUZ|divideSOUND|LessThan0~11 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~11 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~11 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~11 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N7
maxii_lcell \soundBUZ|divideSOUND|LessThan0~10 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~10_combout  = (\soundBUZ|Mux0~0_combout  & (!\soundBUZ|divideSOUND|cnt_p [1] & (!\soundBUZ|Mux3~0_combout  & !\soundBUZ|divideSOUND|cnt_p [0]))) # (!\soundBUZ|Mux0~0_combout  & (((!\soundBUZ|Mux3~0_combout  & 
// !\soundBUZ|divideSOUND|cnt_p [0])) # (!\soundBUZ|divideSOUND|cnt_p [1])))

	.clk(gnd),
	.dataa(\soundBUZ|Mux0~0_combout ),
	.datab(\soundBUZ|divideSOUND|cnt_p [1]),
	.datac(\soundBUZ|Mux3~0_combout ),
	.datad(\soundBUZ|divideSOUND|cnt_p [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~10 .lut_mask = "1117";
defparam \soundBUZ|divideSOUND|LessThan0~10 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~10 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~10 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~10 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N8
maxii_lcell \soundBUZ|divideSOUND|LessThan0~22 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~22_combout  = (\soundBUZ|Mux12~0_combout  & (((!\soundBUZ|divideSOUND|cnt_p [2] & \soundBUZ|divideSOUND|LessThan0~10_combout )) # (!\soundBUZ|divideSOUND|cnt_p [3]))) # (!\soundBUZ|Mux12~0_combout  & 
// (!\soundBUZ|divideSOUND|cnt_p [3] & (!\soundBUZ|divideSOUND|cnt_p [2] & \soundBUZ|divideSOUND|LessThan0~10_combout )))

	.clk(gnd),
	.dataa(\soundBUZ|Mux12~0_combout ),
	.datab(\soundBUZ|divideSOUND|cnt_p [3]),
	.datac(\soundBUZ|divideSOUND|cnt_p [2]),
	.datad(\soundBUZ|divideSOUND|LessThan0~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~22_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~22 .lut_mask = "2b22";
defparam \soundBUZ|divideSOUND|LessThan0~22 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~22 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~22 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~22 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N9
maxii_lcell \soundBUZ|divideSOUND|LessThan0~23 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~23_combout  = (\soundBUZ|divideSOUND|LessThan0~11_combout  & ((\soundBUZ|divideSOUND|LessThan0~8_combout ) # ((\soundBUZ|divideSOUND|LessThan0~9_combout  & \soundBUZ|divideSOUND|LessThan0~22_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|LessThan0~8_combout ),
	.datab(\soundBUZ|divideSOUND|LessThan0~9_combout ),
	.datac(\soundBUZ|divideSOUND|LessThan0~11_combout ),
	.datad(\soundBUZ|divideSOUND|LessThan0~22_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~23_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~23 .lut_mask = "e0a0";
defparam \soundBUZ|divideSOUND|LessThan0~23 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~23 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~23 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~23 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~23 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N0
maxii_lcell \soundBUZ|divideSOUND|LessThan0~12 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~12_combout  = (\soundBUZ|divideSOUND|cnt_p [7] & (\soundBUZ|Mux3~0_combout  & ((\soundBUZ|divideSOUND|LessThan0~7_combout ) # (\soundBUZ|divideSOUND|LessThan0~23_combout )))) # (!\soundBUZ|divideSOUND|cnt_p [7] & 
// ((\soundBUZ|Mux3~0_combout ) # ((\soundBUZ|divideSOUND|LessThan0~7_combout ) # (\soundBUZ|divideSOUND|LessThan0~23_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [7]),
	.datab(\soundBUZ|Mux3~0_combout ),
	.datac(\soundBUZ|divideSOUND|LessThan0~7_combout ),
	.datad(\soundBUZ|divideSOUND|LessThan0~23_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~12 .lut_mask = "ddd4";
defparam \soundBUZ|divideSOUND|LessThan0~12 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~12 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~12 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~12 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N1
maxii_lcell \soundBUZ|divideSOUND|LessThan0~20 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~20_combout  = (\soundBUZ|Mux4~0_combout  & (((\soundBUZ|divideSOUND|LessThan0~12_combout ) # (!\soundBUZ|divideSOUND|cnt_p [8])))) # (!\soundBUZ|Mux4~0_combout  & (((!\soundBUZ|divideSOUND|cnt_p [8] & 
// \soundBUZ|divideSOUND|LessThan0~12_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|Mux4~0_combout ),
	.datab(vcc),
	.datac(\soundBUZ|divideSOUND|cnt_p [8]),
	.datad(\soundBUZ|divideSOUND|LessThan0~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~20 .lut_mask = "af0a";
defparam \soundBUZ|divideSOUND|LessThan0~20 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~20 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~20 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~20 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N2
maxii_lcell \soundBUZ|divideSOUND|LessThan0~21 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~21_combout  = ((\soundBUZ|divideSOUND|cnt_p [9] & (\soundBUZ|Mux7~0_combout  & \soundBUZ|divideSOUND|LessThan0~20_combout )) # (!\soundBUZ|divideSOUND|cnt_p [9] & ((\soundBUZ|Mux7~0_combout ) # 
// (\soundBUZ|divideSOUND|LessThan0~20_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [9]),
	.datac(\soundBUZ|Mux7~0_combout ),
	.datad(\soundBUZ|divideSOUND|LessThan0~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~21 .lut_mask = "f330";
defparam \soundBUZ|divideSOUND|LessThan0~21 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~21 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~21 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~21 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N3
maxii_lcell \soundBUZ|divideSOUND|LessThan0~13 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~13_combout  = (\soundBUZ|Mux6~0_combout  & (((\soundBUZ|divideSOUND|LessThan0~21_combout )) # (!\soundBUZ|divideSOUND|cnt_p [10]))) # (!\soundBUZ|Mux6~0_combout  & (!\soundBUZ|divideSOUND|cnt_p [10] & 
// ((\soundBUZ|divideSOUND|LessThan0~21_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|Mux6~0_combout ),
	.datab(\soundBUZ|divideSOUND|cnt_p [10]),
	.datac(vcc),
	.datad(\soundBUZ|divideSOUND|LessThan0~21_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~13 .lut_mask = "bb22";
defparam \soundBUZ|divideSOUND|LessThan0~13 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~13 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~13 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~13 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N4
maxii_lcell \soundBUZ|divideSOUND|LessThan0~14 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~14_combout  = ((\soundBUZ|divideSOUND|cnt_p [11] & ((\soundBUZ|Mux5~0_combout ) # (!\soundBUZ|divideSOUND|LessThan0~13_combout ))) # (!\soundBUZ|divideSOUND|cnt_p [11] & (\soundBUZ|Mux5~0_combout  & 
// !\soundBUZ|divideSOUND|LessThan0~13_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\soundBUZ|divideSOUND|cnt_p [11]),
	.datac(\soundBUZ|Mux5~0_combout ),
	.datad(\soundBUZ|divideSOUND|LessThan0~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~14 .lut_mask = "c0fc";
defparam \soundBUZ|divideSOUND|LessThan0~14 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~14 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~14 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~14 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X13_Y8_N5
maxii_lcell \soundBUZ|divideSOUND|LessThan0~15 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~15_combout  = (\soundBUZ|divideSOUND|cnt_p [12] & (((\soundBUZ|divideSOUND|LessThan0~14_combout ) # (!\soundBUZ|Mux4~0_combout )))) # (!\soundBUZ|divideSOUND|cnt_p [12] & (((!\soundBUZ|Mux4~0_combout  & 
// \soundBUZ|divideSOUND|LessThan0~14_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [12]),
	.datab(vcc),
	.datac(\soundBUZ|Mux4~0_combout ),
	.datad(\soundBUZ|divideSOUND|LessThan0~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~15 .lut_mask = "af0a";
defparam \soundBUZ|divideSOUND|LessThan0~15 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~15 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~15 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~15 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N2
maxii_lcell \soundBUZ|divideSOUND|LessThan0~16 (
// Equation(s):
// \soundBUZ|divideSOUND|LessThan0~16_combout  = (\soundBUZ|divideSOUND|cnt_p [13] & (((!\soundBUZ|Mux3~0_combout  & !\soundBUZ|divideSOUND|LessThan0~15_combout )))) # (!\soundBUZ|divideSOUND|cnt_p [13] & (((!\soundBUZ|divideSOUND|LessThan0~15_combout ) # 
// (!\soundBUZ|Mux3~0_combout ))))

	.clk(gnd),
	.dataa(\soundBUZ|divideSOUND|cnt_p [13]),
	.datab(vcc),
	.datac(\soundBUZ|Mux3~0_combout ),
	.datad(\soundBUZ|divideSOUND|LessThan0~15_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|divideSOUND|LessThan0~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|LessThan0~16 .lut_mask = "055f";
defparam \soundBUZ|divideSOUND|LessThan0~16 .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|LessThan0~16 .output_mode = "comb_only";
defparam \soundBUZ|divideSOUND|LessThan0~16 .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|LessThan0~16 .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|LessThan0~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y8_N3
maxii_lcell \soundBUZ|divideSOUND|clk_p (
// Equation(s):
// \soundBUZ|divideSOUND|clk_p~regout  = DFFEAS(((!\soundBUZ|divideSOUND|LessThan0~6_combout  & ((!\soundBUZ|divideSOUND|LessThan0~16_combout ) # (!\soundBUZ|divideSOUND|LessThan0~18_combout )))) # (!\soundBUZ|divideSOUND|LessThan0~4_combout ), 
// GLOBAL(\clk~combout ), GLOBAL(\sound_on~regout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\soundBUZ|divideSOUND|LessThan0~18_combout ),
	.datab(\soundBUZ|divideSOUND|LessThan0~6_combout ),
	.datac(\soundBUZ|divideSOUND|LessThan0~4_combout ),
	.datad(\soundBUZ|divideSOUND|LessThan0~16_combout ),
	.aclr(!\sound_on~regout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\soundBUZ|divideSOUND|clk_p~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|divideSOUND|clk_p .lut_mask = "1f3f";
defparam \soundBUZ|divideSOUND|clk_p .operation_mode = "normal";
defparam \soundBUZ|divideSOUND|clk_p .output_mode = "reg_only";
defparam \soundBUZ|divideSOUND|clk_p .register_cascade_mode = "off";
defparam \soundBUZ|divideSOUND|clk_p .sum_lutc_input = "datac";
defparam \soundBUZ|divideSOUND|clk_p .synch_mode = "off";
// synopsys translate_on

// Location: LC_X14_Y3_N2
maxii_lcell \soundBUZ|buz_sound~0 (
// Equation(s):
// \soundBUZ|buz_sound~0_combout  = (((\sound_on~regout  & \soundBUZ|divideSOUND|clk_p~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\sound_on~regout ),
	.datad(\soundBUZ|divideSOUND|clk_p~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\soundBUZ|buz_sound~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \soundBUZ|buz_sound~0 .lut_mask = "f000";
defparam \soundBUZ|buz_sound~0 .operation_mode = "normal";
defparam \soundBUZ|buz_sound~0 .output_mode = "comb_only";
defparam \soundBUZ|buz_sound~0 .register_cascade_mode = "off";
defparam \soundBUZ|buz_sound~0 .sum_lutc_input = "datac";
defparam \soundBUZ|buz_sound~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N9
maxii_lcell \lat_Vcnt[0] (
// Equation(s):
// lat_Vcnt[0] = DFFEAS((((!lat_Vcnt[0]))), GLOBAL(\divide1000|clk_p~regout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(lat_Vcnt[0]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Vcnt[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Vcnt[0] .lut_mask = "00ff";
defparam \lat_Vcnt[0] .operation_mode = "normal";
defparam \lat_Vcnt[0] .output_mode = "reg_only";
defparam \lat_Vcnt[0] .register_cascade_mode = "off";
defparam \lat_Vcnt[0] .sum_lutc_input = "datac";
defparam \lat_Vcnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N3
maxii_lcell \lat_Vcnt[1] (
// Equation(s):
// lat_Vcnt[1] = DFFEAS((lat_Vcnt[0] $ (((lat_Vcnt[1])))), GLOBAL(\divide1000|clk_p~regout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(lat_Vcnt[0]),
	.datac(vcc),
	.datad(lat_Vcnt[1]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Vcnt[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Vcnt[1] .lut_mask = "33cc";
defparam \lat_Vcnt[1] .operation_mode = "normal";
defparam \lat_Vcnt[1] .output_mode = "reg_only";
defparam \lat_Vcnt[1] .register_cascade_mode = "off";
defparam \lat_Vcnt[1] .sum_lutc_input = "datac";
defparam \lat_Vcnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N1
maxii_lcell \lat_Vcnt[2] (
// Equation(s):
// lat_Vcnt[2] = DFFEAS((lat_Vcnt[2] $ (((lat_Vcnt[1] & lat_Vcnt[0])))), GLOBAL(\divide1000|clk_p~regout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Vcnt[0]),
	.datac(vcc),
	.datad(lat_Vcnt[2]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Vcnt[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Vcnt[2] .lut_mask = "7788";
defparam \lat_Vcnt[2] .operation_mode = "normal";
defparam \lat_Vcnt[2] .output_mode = "reg_only";
defparam \lat_Vcnt[2] .register_cascade_mode = "off";
defparam \lat_Vcnt[2] .sum_lutc_input = "datac";
defparam \lat_Vcnt[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N4
maxii_lcell \lattice_row[0]~reg0 (
// Equation(s):
// \lattice_row[0]~reg0_regout  = DFFEAS((lat_Vcnt[1] & (\lattice_row[0]~reg0_regout  & ((!lat_Vcnt[2]) # (!lat_Vcnt[0])))) # (!lat_Vcnt[1] & ((\lattice_row[0]~reg0_regout ) # ((!lat_Vcnt[0] & !lat_Vcnt[2])))), GLOBAL(\divide1000|clk_p~regout ), VCC, , 
// !\rst~combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Vcnt[0]),
	.datac(\lattice_row[0]~reg0_regout ),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lattice_row[0]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_row[0]~reg0 .lut_mask = "70f1";
defparam \lattice_row[0]~reg0 .operation_mode = "normal";
defparam \lattice_row[0]~reg0 .output_mode = "reg_only";
defparam \lattice_row[0]~reg0 .register_cascade_mode = "off";
defparam \lattice_row[0]~reg0 .sum_lutc_input = "datac";
defparam \lattice_row[0]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N2
maxii_lcell \lattice_row[1]~reg0 (
// Equation(s):
// \lattice_row[1]~reg0_regout  = DFFEAS((lat_Vcnt[1] & (((\lattice_row[1]~reg0_regout )))) # (!lat_Vcnt[1] & ((lat_Vcnt[2] & (\lattice_row[1]~reg0_regout )) # (!lat_Vcnt[2] & ((lat_Vcnt[0]))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , 
// , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Vcnt[2]),
	.datac(\lattice_row[1]~reg0_regout ),
	.datad(lat_Vcnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lattice_row[1]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_row[1]~reg0 .lut_mask = "f1e0";
defparam \lattice_row[1]~reg0 .operation_mode = "normal";
defparam \lattice_row[1]~reg0 .output_mode = "reg_only";
defparam \lattice_row[1]~reg0 .register_cascade_mode = "off";
defparam \lattice_row[1]~reg0 .sum_lutc_input = "datac";
defparam \lattice_row[1]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N0
maxii_lcell \lattice_row[2]~reg0 (
// Equation(s):
// \lattice_row[2]~reg0_regout  = DFFEAS((lat_Vcnt[1] & ((\lattice_row[2]~reg0_regout ) # ((!lat_Vcnt[0] & !lat_Vcnt[2])))) # (!lat_Vcnt[1] & (\lattice_row[2]~reg0_regout  & ((lat_Vcnt[2]) # (!lat_Vcnt[0])))), GLOBAL(\divide1000|clk_p~regout ), VCC, , 
// !\rst~combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Vcnt[0]),
	.datac(\lattice_row[2]~reg0_regout ),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lattice_row[2]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_row[2]~reg0 .lut_mask = "f0b2";
defparam \lattice_row[2]~reg0 .operation_mode = "normal";
defparam \lattice_row[2]~reg0 .output_mode = "reg_only";
defparam \lattice_row[2]~reg0 .register_cascade_mode = "off";
defparam \lattice_row[2]~reg0 .sum_lutc_input = "datac";
defparam \lattice_row[2]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N7
maxii_lcell \lattice_row[3]~reg0 (
// Equation(s):
// \lattice_row[3]~reg0_regout  = DFFEAS((lat_Vcnt[1] & ((lat_Vcnt[2] & ((\lattice_row[3]~reg0_regout ))) # (!lat_Vcnt[2] & (lat_Vcnt[0])))) # (!lat_Vcnt[1] & (((\lattice_row[3]~reg0_regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , 
// , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Vcnt[0]),
	.datac(\lattice_row[3]~reg0_regout ),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lattice_row[3]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_row[3]~reg0 .lut_mask = "f0d8";
defparam \lattice_row[3]~reg0 .operation_mode = "normal";
defparam \lattice_row[3]~reg0 .output_mode = "reg_only";
defparam \lattice_row[3]~reg0 .register_cascade_mode = "off";
defparam \lattice_row[3]~reg0 .sum_lutc_input = "datac";
defparam \lattice_row[3]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N8
maxii_lcell \lattice_row[4]~reg0 (
// Equation(s):
// \lattice_row[4]~reg0_regout  = DFFEAS((\lattice_row[4]~reg0_regout  & ((lat_Vcnt[2]) # ((!lat_Vcnt[1]) # (!lat_Vcnt[0])))) # (!\lattice_row[4]~reg0_regout  & (lat_Vcnt[2] & (!lat_Vcnt[0] & !lat_Vcnt[1]))), GLOBAL(\divide1000|clk_p~regout ), VCC, , 
// !\rst~combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\lattice_row[4]~reg0_regout ),
	.datab(lat_Vcnt[2]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Vcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lattice_row[4]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_row[4]~reg0 .lut_mask = "8aae";
defparam \lattice_row[4]~reg0 .operation_mode = "normal";
defparam \lattice_row[4]~reg0 .output_mode = "reg_only";
defparam \lattice_row[4]~reg0 .register_cascade_mode = "off";
defparam \lattice_row[4]~reg0 .sum_lutc_input = "datac";
defparam \lattice_row[4]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N7
maxii_lcell \lattice_row[5]~reg0 (
// Equation(s):
// \lattice_row[5]~reg0_regout  = DFFEAS((lat_Vcnt[2] & ((lat_Vcnt[1] & ((\lattice_row[5]~reg0_regout ))) # (!lat_Vcnt[1] & (lat_Vcnt[0])))) # (!lat_Vcnt[2] & (((\lattice_row[5]~reg0_regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , 
// , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Vcnt[0]),
	.datab(\lattice_row[5]~reg0_regout ),
	.datac(lat_Vcnt[2]),
	.datad(lat_Vcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lattice_row[5]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_row[5]~reg0 .lut_mask = "ccac";
defparam \lattice_row[5]~reg0 .operation_mode = "normal";
defparam \lattice_row[5]~reg0 .output_mode = "reg_only";
defparam \lattice_row[5]~reg0 .register_cascade_mode = "off";
defparam \lattice_row[5]~reg0 .sum_lutc_input = "datac";
defparam \lattice_row[5]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N6
maxii_lcell \lattice_row[6]~reg0 (
// Equation(s):
// \lattice_row[6]~reg0_regout  = DFFEAS((lat_Vcnt[1] & ((\lattice_row[6]~reg0_regout ) # ((lat_Vcnt[2] & !lat_Vcnt[0])))) # (!lat_Vcnt[1] & (\lattice_row[6]~reg0_regout  & ((!lat_Vcnt[0]) # (!lat_Vcnt[2])))), GLOBAL(\divide1000|clk_p~regout ), VCC, , 
// !\rst~combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Vcnt[2]),
	.datac(\lattice_row[6]~reg0_regout ),
	.datad(lat_Vcnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lattice_row[6]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_row[6]~reg0 .lut_mask = "b0f8";
defparam \lattice_row[6]~reg0 .operation_mode = "normal";
defparam \lattice_row[6]~reg0 .output_mode = "reg_only";
defparam \lattice_row[6]~reg0 .register_cascade_mode = "off";
defparam \lattice_row[6]~reg0 .sum_lutc_input = "datac";
defparam \lattice_row[6]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y10_N5
maxii_lcell \lattice_row[7]~reg0 (
// Equation(s):
// \lattice_row[7]~reg0_regout  = DFFEAS((lat_Vcnt[1] & ((lat_Vcnt[2] & ((lat_Vcnt[0]))) # (!lat_Vcnt[2] & (\lattice_row[7]~reg0_regout )))) # (!lat_Vcnt[1] & (((\lattice_row[7]~reg0_regout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , 
// , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Vcnt[2]),
	.datac(\lattice_row[7]~reg0_regout ),
	.datad(lat_Vcnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\lattice_row[7]~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_row[7]~reg0 .lut_mask = "f870";
defparam \lattice_row[7]~reg0 .operation_mode = "normal";
defparam \lattice_row[7]~reg0 .output_mode = "reg_only";
defparam \lattice_row[7]~reg0 .register_cascade_mode = "off";
defparam \lattice_row[7]~reg0 .sum_lutc_input = "datac";
defparam \lattice_row[7]~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N8
maxii_lcell \lat_Htimer[0] (
// Equation(s):
// lat_Htimer[0] = DFFEAS((((!lat_Htimer[0]))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(lat_Htimer[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Htimer[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Htimer[0] .lut_mask = "00ff";
defparam \lat_Htimer[0] .operation_mode = "normal";
defparam \lat_Htimer[0] .output_mode = "reg_only";
defparam \lat_Htimer[0] .register_cascade_mode = "off";
defparam \lat_Htimer[0] .sum_lutc_input = "datac";
defparam \lat_Htimer[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y8_N0
maxii_lcell \lat_Htimer[1] (
// Equation(s):
// lat_Htimer[1] = DFFEAS(lat_Htimer[0] $ ((lat_Htimer[1])), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )
// \lat_Htimer[1]~1  = CARRY((lat_Htimer[0] & (lat_Htimer[1])))
// \lat_Htimer[1]~1COUT1_18  = CARRY((lat_Htimer[0] & (lat_Htimer[1])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Htimer[0]),
	.datab(lat_Htimer[1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Htimer[1]),
	.cout(),
	.cout0(\lat_Htimer[1]~1 ),
	.cout1(\lat_Htimer[1]~1COUT1_18 ));
// synopsys translate_off
defparam \lat_Htimer[1] .lut_mask = "6688";
defparam \lat_Htimer[1] .operation_mode = "arithmetic";
defparam \lat_Htimer[1] .output_mode = "reg_only";
defparam \lat_Htimer[1] .register_cascade_mode = "off";
defparam \lat_Htimer[1] .sum_lutc_input = "datac";
defparam \lat_Htimer[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y8_N1
maxii_lcell \lat_Htimer[2] (
// Equation(s):
// lat_Htimer[2] = DFFEAS((lat_Htimer[2] $ ((\lat_Htimer[1]~1 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )
// \lat_Htimer[2]~3  = CARRY(((!\lat_Htimer[1]~1 ) # (!lat_Htimer[2])))
// \lat_Htimer[2]~3COUT1_19  = CARRY(((!\lat_Htimer[1]~1COUT1_18 ) # (!lat_Htimer[2])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(lat_Htimer[2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(\lat_Htimer[1]~1 ),
	.cin1(\lat_Htimer[1]~1COUT1_18 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Htimer[2]),
	.cout(),
	.cout0(\lat_Htimer[2]~3 ),
	.cout1(\lat_Htimer[2]~3COUT1_19 ));
// synopsys translate_off
defparam \lat_Htimer[2] .cin0_used = "true";
defparam \lat_Htimer[2] .cin1_used = "true";
defparam \lat_Htimer[2] .lut_mask = "3c3f";
defparam \lat_Htimer[2] .operation_mode = "arithmetic";
defparam \lat_Htimer[2] .output_mode = "reg_only";
defparam \lat_Htimer[2] .register_cascade_mode = "off";
defparam \lat_Htimer[2] .sum_lutc_input = "cin";
defparam \lat_Htimer[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y8_N2
maxii_lcell \lat_Htimer[3] (
// Equation(s):
// lat_Htimer[3] = DFFEAS((lat_Htimer[3] $ ((!\lat_Htimer[2]~3 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )
// \lat_Htimer[3]~5  = CARRY(((lat_Htimer[3] & !\lat_Htimer[2]~3 )))
// \lat_Htimer[3]~5COUT1_20  = CARRY(((lat_Htimer[3] & !\lat_Htimer[2]~3COUT1_19 )))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(lat_Htimer[3]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(\lat_Htimer[2]~3 ),
	.cin1(\lat_Htimer[2]~3COUT1_19 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Htimer[3]),
	.cout(),
	.cout0(\lat_Htimer[3]~5 ),
	.cout1(\lat_Htimer[3]~5COUT1_20 ));
// synopsys translate_off
defparam \lat_Htimer[3] .cin0_used = "true";
defparam \lat_Htimer[3] .cin1_used = "true";
defparam \lat_Htimer[3] .lut_mask = "c30c";
defparam \lat_Htimer[3] .operation_mode = "arithmetic";
defparam \lat_Htimer[3] .output_mode = "reg_only";
defparam \lat_Htimer[3] .register_cascade_mode = "off";
defparam \lat_Htimer[3] .sum_lutc_input = "cin";
defparam \lat_Htimer[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y8_N3
maxii_lcell \lat_Htimer[4] (
// Equation(s):
// lat_Htimer[4] = DFFEAS(lat_Htimer[4] $ ((((\lat_Htimer[3]~5 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )
// \lat_Htimer[4]~7  = CARRY(((!\lat_Htimer[3]~5 )) # (!lat_Htimer[4]))
// \lat_Htimer[4]~7COUT1_21  = CARRY(((!\lat_Htimer[3]~5COUT1_20 )) # (!lat_Htimer[4]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Htimer[4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(\lat_Htimer[3]~5 ),
	.cin1(\lat_Htimer[3]~5COUT1_20 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Htimer[4]),
	.cout(),
	.cout0(\lat_Htimer[4]~7 ),
	.cout1(\lat_Htimer[4]~7COUT1_21 ));
// synopsys translate_off
defparam \lat_Htimer[4] .cin0_used = "true";
defparam \lat_Htimer[4] .cin1_used = "true";
defparam \lat_Htimer[4] .lut_mask = "5a5f";
defparam \lat_Htimer[4] .operation_mode = "arithmetic";
defparam \lat_Htimer[4] .output_mode = "reg_only";
defparam \lat_Htimer[4] .register_cascade_mode = "off";
defparam \lat_Htimer[4] .sum_lutc_input = "cin";
defparam \lat_Htimer[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y8_N4
maxii_lcell \lat_Htimer[5] (
// Equation(s):
// lat_Htimer[5] = DFFEAS((lat_Htimer[5] $ ((!\lat_Htimer[4]~7 ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )
// \lat_Htimer[5]~9  = CARRY(((lat_Htimer[5] & !\lat_Htimer[4]~7COUT1_21 )))

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(lat_Htimer[5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(gnd),
	.cin0(\lat_Htimer[4]~7 ),
	.cin1(\lat_Htimer[4]~7COUT1_21 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Htimer[5]),
	.cout(\lat_Htimer[5]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Htimer[5] .cin0_used = "true";
defparam \lat_Htimer[5] .cin1_used = "true";
defparam \lat_Htimer[5] .lut_mask = "c30c";
defparam \lat_Htimer[5] .operation_mode = "arithmetic";
defparam \lat_Htimer[5] .output_mode = "reg_only";
defparam \lat_Htimer[5] .register_cascade_mode = "off";
defparam \lat_Htimer[5] .sum_lutc_input = "cin";
defparam \lat_Htimer[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y8_N5
maxii_lcell \lat_Htimer[6] (
// Equation(s):
// lat_Htimer[6] = DFFEAS(lat_Htimer[6] $ ((((\lat_Htimer[5]~9 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )
// \lat_Htimer[6]~11  = CARRY(((!\lat_Htimer[5]~9 )) # (!lat_Htimer[6]))
// \lat_Htimer[6]~11COUT1_22  = CARRY(((!\lat_Htimer[5]~9 )) # (!lat_Htimer[6]))

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Htimer[6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(\lat_Htimer[5]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Htimer[6]),
	.cout(),
	.cout0(\lat_Htimer[6]~11 ),
	.cout1(\lat_Htimer[6]~11COUT1_22 ));
// synopsys translate_off
defparam \lat_Htimer[6] .cin_used = "true";
defparam \lat_Htimer[6] .lut_mask = "5a5f";
defparam \lat_Htimer[6] .operation_mode = "arithmetic";
defparam \lat_Htimer[6] .output_mode = "reg_only";
defparam \lat_Htimer[6] .register_cascade_mode = "off";
defparam \lat_Htimer[6] .sum_lutc_input = "cin";
defparam \lat_Htimer[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y8_N6
maxii_lcell \lat_Htimer[7] (
// Equation(s):
// lat_Htimer[7] = DFFEAS(lat_Htimer[7] $ ((((!(!\lat_Htimer[5]~9  & \lat_Htimer[6]~11 ) # (\lat_Htimer[5]~9  & \lat_Htimer[6]~11COUT1_22 ))))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )
// \lat_Htimer[7]~13  = CARRY((lat_Htimer[7] & ((!\lat_Htimer[6]~11 ))))
// \lat_Htimer[7]~13COUT1_23  = CARRY((lat_Htimer[7] & ((!\lat_Htimer[6]~11COUT1_22 ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Htimer[7]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(\lat_Htimer[5]~9 ),
	.cin0(\lat_Htimer[6]~11 ),
	.cin1(\lat_Htimer[6]~11COUT1_22 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Htimer[7]),
	.cout(),
	.cout0(\lat_Htimer[7]~13 ),
	.cout1(\lat_Htimer[7]~13COUT1_23 ));
// synopsys translate_off
defparam \lat_Htimer[7] .cin0_used = "true";
defparam \lat_Htimer[7] .cin1_used = "true";
defparam \lat_Htimer[7] .cin_used = "true";
defparam \lat_Htimer[7] .lut_mask = "a50a";
defparam \lat_Htimer[7] .operation_mode = "arithmetic";
defparam \lat_Htimer[7] .output_mode = "reg_only";
defparam \lat_Htimer[7] .register_cascade_mode = "off";
defparam \lat_Htimer[7] .sum_lutc_input = "cin";
defparam \lat_Htimer[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y8_N7
maxii_lcell \lat_Htimer[8] (
// Equation(s):
// lat_Htimer[8] = DFFEAS((lat_Htimer[8] $ (((!\lat_Htimer[5]~9  & \lat_Htimer[7]~13 ) # (\lat_Htimer[5]~9  & \lat_Htimer[7]~13COUT1_23 )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , !\rst~combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(lat_Htimer[8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(!\rst~combout ),
	.cin(\lat_Htimer[5]~9 ),
	.cin0(\lat_Htimer[7]~13 ),
	.cin1(\lat_Htimer[7]~13COUT1_23 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Htimer[8]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Htimer[8] .cin0_used = "true";
defparam \lat_Htimer[8] .cin1_used = "true";
defparam \lat_Htimer[8] .cin_used = "true";
defparam \lat_Htimer[8] .lut_mask = "3c3c";
defparam \lat_Htimer[8] .operation_mode = "normal";
defparam \lat_Htimer[8] .output_mode = "reg_only";
defparam \lat_Htimer[8] .register_cascade_mode = "off";
defparam \lat_Htimer[8] .sum_lutc_input = "cin";
defparam \lat_Htimer[8] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N0
maxii_lcell \lat_Hcnt[3]~0 (
// Equation(s):
// \lat_Hcnt[3]~0_combout  = (lat_Htimer[0] & (!\rst~combout  & (lat_Htimer[1] & lat_Htimer[2])))

	.clk(gnd),
	.dataa(lat_Htimer[0]),
	.datab(\rst~combout ),
	.datac(lat_Htimer[1]),
	.datad(lat_Htimer[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lat_Hcnt[3]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Hcnt[3]~0 .lut_mask = "2000";
defparam \lat_Hcnt[3]~0 .operation_mode = "normal";
defparam \lat_Hcnt[3]~0 .output_mode = "comb_only";
defparam \lat_Hcnt[3]~0 .register_cascade_mode = "off";
defparam \lat_Hcnt[3]~0 .sum_lutc_input = "datac";
defparam \lat_Hcnt[3]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y8_N8
maxii_lcell \lat_Hcnt[3]~1 (
// Equation(s):
// \lat_Hcnt[3]~1_combout  = (lat_Htimer[6] & (lat_Htimer[3] & (lat_Htimer[5] & lat_Htimer[4])))

	.clk(gnd),
	.dataa(lat_Htimer[6]),
	.datab(lat_Htimer[3]),
	.datac(lat_Htimer[5]),
	.datad(lat_Htimer[4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lat_Hcnt[3]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Hcnt[3]~1 .lut_mask = "8000";
defparam \lat_Hcnt[3]~1 .operation_mode = "normal";
defparam \lat_Hcnt[3]~1 .output_mode = "comb_only";
defparam \lat_Hcnt[3]~1 .register_cascade_mode = "off";
defparam \lat_Hcnt[3]~1 .sum_lutc_input = "datac";
defparam \lat_Hcnt[3]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N1
maxii_lcell \lat_Hcnt[3]~2 (
// Equation(s):
// \lat_Hcnt[3]~2_combout  = (lat_Htimer[7] & (lat_Htimer[8] & (\lat_Hcnt[3]~0_combout  & \lat_Hcnt[3]~1_combout )))

	.clk(gnd),
	.dataa(lat_Htimer[7]),
	.datab(lat_Htimer[8]),
	.datac(\lat_Hcnt[3]~0_combout ),
	.datad(\lat_Hcnt[3]~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lat_Hcnt[3]~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Hcnt[3]~2 .lut_mask = "8000";
defparam \lat_Hcnt[3]~2 .operation_mode = "normal";
defparam \lat_Hcnt[3]~2 .output_mode = "comb_only";
defparam \lat_Hcnt[3]~2 .register_cascade_mode = "off";
defparam \lat_Hcnt[3]~2 .sum_lutc_input = "datac";
defparam \lat_Hcnt[3]~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N5
maxii_lcell \lat_Hcnt[0] (
// Equation(s):
// lat_Hcnt[0] = DFFEAS(((lat_Hcnt[0] $ (\lat_Hcnt[3]~2_combout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(lat_Hcnt[0]),
	.datad(\lat_Hcnt[3]~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Hcnt[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Hcnt[0] .lut_mask = "0ff0";
defparam \lat_Hcnt[0] .operation_mode = "normal";
defparam \lat_Hcnt[0] .output_mode = "reg_only";
defparam \lat_Hcnt[0] .register_cascade_mode = "off";
defparam \lat_Hcnt[0] .sum_lutc_input = "datac";
defparam \lat_Hcnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N9
maxii_lcell \lat_Hcnt[1] (
// Equation(s):
// lat_Hcnt[1] = DFFEAS((lat_Hcnt[1] $ (((lat_Hcnt[0] & \lat_Hcnt[3]~2_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(lat_Hcnt[1]),
	.datac(lat_Hcnt[0]),
	.datad(\lat_Hcnt[3]~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Hcnt[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Hcnt[1] .lut_mask = "3ccc";
defparam \lat_Hcnt[1] .operation_mode = "normal";
defparam \lat_Hcnt[1] .output_mode = "reg_only";
defparam \lat_Hcnt[1] .register_cascade_mode = "off";
defparam \lat_Hcnt[1] .sum_lutc_input = "datac";
defparam \lat_Hcnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N4
maxii_lcell \lat_Hcnt[2] (
// Equation(s):
// lat_Hcnt[2] = DFFEAS(lat_Hcnt[2] $ (((lat_Hcnt[0] & (lat_Hcnt[1] & \lat_Hcnt[3]~2_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Hcnt[0]),
	.datab(lat_Hcnt[1]),
	.datac(lat_Hcnt[2]),
	.datad(\lat_Hcnt[3]~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Hcnt[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Hcnt[2] .lut_mask = "78f0";
defparam \lat_Hcnt[2] .operation_mode = "normal";
defparam \lat_Hcnt[2] .output_mode = "reg_only";
defparam \lat_Hcnt[2] .register_cascade_mode = "off";
defparam \lat_Hcnt[2] .sum_lutc_input = "datac";
defparam \lat_Hcnt[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N2
maxii_lcell \lat_Hcnt[1]~3 (
// Equation(s):
// \lat_Hcnt[1]~3_combout  = (((lat_Hcnt[0] & \lat_Hcnt[3]~2_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(lat_Hcnt[0]),
	.datad(\lat_Hcnt[3]~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lat_Hcnt[1]~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Hcnt[1]~3 .lut_mask = "f000";
defparam \lat_Hcnt[1]~3 .operation_mode = "normal";
defparam \lat_Hcnt[1]~3 .output_mode = "comb_only";
defparam \lat_Hcnt[1]~3 .register_cascade_mode = "off";
defparam \lat_Hcnt[1]~3 .sum_lutc_input = "datac";
defparam \lat_Hcnt[1]~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N3
maxii_lcell \lat_Hcnt[3] (
// Equation(s):
// lat_Hcnt[3] = DFFEAS(lat_Hcnt[3] $ (((lat_Hcnt[1] & (lat_Hcnt[2] & \lat_Hcnt[1]~3_combout )))), GLOBAL(\divide1000|clk_p~regout ), VCC, , , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(lat_Hcnt[3]),
	.datab(lat_Hcnt[1]),
	.datac(lat_Hcnt[2]),
	.datad(\lat_Hcnt[1]~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(lat_Hcnt[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lat_Hcnt[3] .lut_mask = "6aaa";
defparam \lat_Hcnt[3] .operation_mode = "normal";
defparam \lat_Hcnt[3] .output_mode = "reg_only";
defparam \lat_Hcnt[3] .register_cascade_mode = "off";
defparam \lat_Hcnt[3] .sum_lutc_input = "datac";
defparam \lat_Hcnt[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N9
maxii_lcell \Decoder3~0 (
// Equation(s):
// \Decoder3~0_combout  = ((lat_Vcnt[1] & ((!lat_Vcnt[2]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Vcnt[1]),
	.datac(vcc),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Decoder3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Decoder3~0 .lut_mask = "00cc";
defparam \Decoder3~0 .operation_mode = "normal";
defparam \Decoder3~0 .output_mode = "comb_only";
defparam \Decoder3~0 .register_cascade_mode = "off";
defparam \Decoder3~0 .sum_lutc_input = "datac";
defparam \Decoder3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N4
maxii_lcell \EMPTY|Mux15~8 (
// Equation(s):
// \EMPTY|Mux15~8_combout  = (!lat_Hcnt[2] & (((lat_Hcnt[3] & lat_Vcnt[0])) # (!\Decoder3~0_combout )))

	.clk(gnd),
	.dataa(lat_Hcnt[3]),
	.datab(\Decoder3~0_combout ),
	.datac(lat_Vcnt[0]),
	.datad(lat_Hcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~8 .lut_mask = "00b3";
defparam \EMPTY|Mux15~8 .operation_mode = "normal";
defparam \EMPTY|Mux15~8 .output_mode = "comb_only";
defparam \EMPTY|Mux15~8 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~8 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N9
maxii_lcell \EMPTY|Mux15~7 (
// Equation(s):
// \EMPTY|Mux15~7_combout  = ((lat_Hcnt[2]) # ((lat_Hcnt[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[2]),
	.datac(vcc),
	.datad(lat_Hcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~7 .lut_mask = "ffcc";
defparam \EMPTY|Mux15~7 .operation_mode = "normal";
defparam \EMPTY|Mux15~7 .output_mode = "comb_only";
defparam \EMPTY|Mux15~7 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~7 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N7
maxii_lcell \EMPTY|Mux15~3 (
// Equation(s):
// \EMPTY|Mux15~3_combout  = lat_Vcnt[0] $ (((lat_Vcnt[2] & ((lat_Hcnt[3]) # (!lat_Vcnt[1])))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~3 .lut_mask = "66c6";
defparam \EMPTY|Mux15~3 .operation_mode = "normal";
defparam \EMPTY|Mux15~3 .output_mode = "comb_only";
defparam \EMPTY|Mux15~3 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~3 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N0
maxii_lcell \EMPTY|Mux15~33 (
// Equation(s):
// \EMPTY|Mux15~33_combout  = ((lat_Hcnt[1]) # ((!lat_Hcnt[2] & \EMPTY|Mux15~3_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[2]),
	.datac(\EMPTY|Mux15~3_combout ),
	.datad(lat_Hcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~33_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~33 .lut_mask = "ff30";
defparam \EMPTY|Mux15~33 .operation_mode = "normal";
defparam \EMPTY|Mux15~33 .output_mode = "comb_only";
defparam \EMPTY|Mux15~33 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~33 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~33 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N2
maxii_lcell \EMPTY|Mux15~6 (
// Equation(s):
// \EMPTY|Mux15~6_combout  = (lat_Vcnt[2] & (lat_Vcnt[0] $ (((lat_Hcnt[3]) # (!lat_Vcnt[1]))))) # (!lat_Vcnt[2] & (lat_Vcnt[0] & ((!lat_Hcnt[3]) # (!lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~6 .lut_mask = "26c6";
defparam \EMPTY|Mux15~6 .operation_mode = "normal";
defparam \EMPTY|Mux15~6 .output_mode = "comb_only";
defparam \EMPTY|Mux15~6 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~6 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N8
maxii_lcell \EMPTY|Mux15~9 (
// Equation(s):
// \EMPTY|Mux15~9_combout  = (\EMPTY|Mux15~7_combout  & ((\EMPTY|Mux15~33_combout  & (\EMPTY|Mux15~8_combout )) # (!\EMPTY|Mux15~33_combout  & ((\EMPTY|Mux15~6_combout ))))) # (!\EMPTY|Mux15~7_combout  & (((\EMPTY|Mux15~33_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~8_combout ),
	.datab(\EMPTY|Mux15~7_combout ),
	.datac(\EMPTY|Mux15~33_combout ),
	.datad(\EMPTY|Mux15~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~9 .lut_mask = "bcb0";
defparam \EMPTY|Mux15~9 .operation_mode = "normal";
defparam \EMPTY|Mux15~9 .output_mode = "comb_only";
defparam \EMPTY|Mux15~9 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~9 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N4
maxii_lcell \EMPTY|Mux15~10 (
// Equation(s):
// \EMPTY|Mux15~10_combout  = (lat_Vcnt[2] & (lat_Vcnt[1] & (lat_Vcnt[0] $ (lat_Hcnt[3])))) # (!lat_Vcnt[2] & (!lat_Hcnt[3] & (lat_Vcnt[0] $ (lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~10 .lut_mask = "2094";
defparam \EMPTY|Mux15~10 .operation_mode = "normal";
defparam \EMPTY|Mux15~10 .output_mode = "comb_only";
defparam \EMPTY|Mux15~10 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~10 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N0
maxii_lcell \EMPTY|Mux15~11 (
// Equation(s):
// \EMPTY|Mux15~11_combout  = lat_Vcnt[0] $ (((lat_Vcnt[1] & ((lat_Hcnt[3]) # (!lat_Vcnt[2]))) # (!lat_Vcnt[1] & ((lat_Vcnt[2])))))

	.clk(gnd),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Hcnt[3]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~11 .lut_mask = "2d5a";
defparam \EMPTY|Mux15~11 .operation_mode = "normal";
defparam \EMPTY|Mux15~11 .output_mode = "comb_only";
defparam \EMPTY|Mux15~11 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~11 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N3
maxii_lcell \EMPTY|Mux15~12 (
// Equation(s):
// \EMPTY|Mux15~12_combout  = (lat_Hcnt[2] & (\EMPTY|Mux15~10_combout )) # (!lat_Hcnt[2] & (((\EMPTY|Mux15~11_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~10_combout ),
	.datab(lat_Hcnt[2]),
	.datac(\EMPTY|Mux15~11_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~12 .lut_mask = "b8b8";
defparam \EMPTY|Mux15~12 .operation_mode = "normal";
defparam \EMPTY|Mux15~12 .output_mode = "comb_only";
defparam \EMPTY|Mux15~12 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~12 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N5
maxii_lcell \lattice_Rcol~0 (
// Equation(s):
// \lattice_Rcol~0_combout  = (lat_Vcnt[1] & ((lat_Hcnt[3] & (!lat_Vcnt[0] & lat_Vcnt[2])) # (!lat_Hcnt[3] & (lat_Vcnt[0] $ (!lat_Vcnt[2]))))) # (!lat_Vcnt[1] & ((lat_Vcnt[0] $ (lat_Vcnt[2]))))

	.clk(gnd),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Hcnt[3]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~0 .lut_mask = "2d52";
defparam \lattice_Rcol~0 .operation_mode = "normal";
defparam \lattice_Rcol~0 .output_mode = "comb_only";
defparam \lattice_Rcol~0 .register_cascade_mode = "off";
defparam \lattice_Rcol~0 .sum_lutc_input = "datac";
defparam \lattice_Rcol~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N6
maxii_lcell \lattice_Rcol~1 (
// Equation(s):
// \lattice_Rcol~1_combout  = (lat_Hcnt[3] & (((!lat_Vcnt[0] & lat_Vcnt[2])))) # (!lat_Hcnt[3] & ((lat_Vcnt[1] & (lat_Vcnt[0] $ (!lat_Vcnt[2]))) # (!lat_Vcnt[1] & (lat_Vcnt[0] & !lat_Vcnt[2]))))

	.clk(gnd),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Hcnt[3]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~1 .lut_mask = "2c12";
defparam \lattice_Rcol~1 .operation_mode = "normal";
defparam \lattice_Rcol~1 .output_mode = "comb_only";
defparam \lattice_Rcol~1 .register_cascade_mode = "off";
defparam \lattice_Rcol~1 .sum_lutc_input = "datac";
defparam \lattice_Rcol~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N8
maxii_lcell \lattice_Rcol~2 (
// Equation(s):
// \lattice_Rcol~2_combout  = ((lat_Hcnt[2] & (\lattice_Rcol~0_combout )) # (!lat_Hcnt[2] & ((\lattice_Rcol~1_combout ))))

	.clk(gnd),
	.dataa(\lattice_Rcol~0_combout ),
	.datab(vcc),
	.datac(\lattice_Rcol~1_combout ),
	.datad(lat_Hcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~2 .lut_mask = "aaf0";
defparam \lattice_Rcol~2 .operation_mode = "normal";
defparam \lattice_Rcol~2 .output_mode = "comb_only";
defparam \lattice_Rcol~2 .register_cascade_mode = "off";
defparam \lattice_Rcol~2 .sum_lutc_input = "datac";
defparam \lattice_Rcol~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N1
maxii_lcell \lattice_Rcol~3 (
// Equation(s):
// \lattice_Rcol~3_combout  = ((lat_Hcnt[1] & (\EMPTY|Mux15~12_combout )) # (!lat_Hcnt[1] & ((\lattice_Rcol~2_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~12_combout ),
	.datab(vcc),
	.datac(lat_Hcnt[1]),
	.datad(\lattice_Rcol~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~3 .lut_mask = "afa0";
defparam \lattice_Rcol~3 .operation_mode = "normal";
defparam \lattice_Rcol~3 .output_mode = "comb_only";
defparam \lattice_Rcol~3 .register_cascade_mode = "off";
defparam \lattice_Rcol~3 .sum_lutc_input = "datac";
defparam \lattice_Rcol~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N2
maxii_lcell \lattice_Rcol~4 (
// Equation(s):
// \lattice_Rcol~4_combout  = (!\onride~combout  & ((lat_Hcnt[0] & (\EMPTY|Mux15~9_combout )) # (!lat_Hcnt[0] & ((\lattice_Rcol~3_combout )))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\EMPTY|Mux15~9_combout ),
	.datac(lat_Hcnt[0]),
	.datad(\lattice_Rcol~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~4 .lut_mask = "4540";
defparam \lattice_Rcol~4 .operation_mode = "normal";
defparam \lattice_Rcol~4 .output_mode = "comb_only";
defparam \lattice_Rcol~4 .register_cascade_mode = "off";
defparam \lattice_Rcol~4 .sum_lutc_input = "datac";
defparam \lattice_Rcol~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N9
maxii_lcell \EMPTY|Mux15~13 (
// Equation(s):
// \EMPTY|Mux15~13_combout  = (lat_Hcnt[3] & ((lat_Vcnt[1] & (lat_Vcnt[0] $ (!lat_Vcnt[2]))) # (!lat_Vcnt[1] & (lat_Vcnt[0] & !lat_Vcnt[2])))) # (!lat_Hcnt[3] & (((!lat_Vcnt[0] & lat_Vcnt[2]))))

	.clk(gnd),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Hcnt[3]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~13 .lut_mask = "8348";
defparam \EMPTY|Mux15~13 .operation_mode = "normal";
defparam \EMPTY|Mux15~13 .output_mode = "comb_only";
defparam \EMPTY|Mux15~13 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~13 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N2
maxii_lcell \EMPTY|Mux15~14 (
// Equation(s):
// \EMPTY|Mux15~14_combout  = ((lat_Hcnt[2] & (\EMPTY|Mux15~13_combout )) # (!lat_Hcnt[2] & ((\lattice_Rcol~0_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\EMPTY|Mux15~13_combout ),
	.datac(\lattice_Rcol~0_combout ),
	.datad(lat_Hcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~14 .lut_mask = "ccf0";
defparam \EMPTY|Mux15~14 .operation_mode = "normal";
defparam \EMPTY|Mux15~14 .output_mode = "comb_only";
defparam \EMPTY|Mux15~14 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~14 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N4
maxii_lcell \lattice_Rcol~5 (
// Equation(s):
// \lattice_Rcol~5_combout  = (lat_Hcnt[1] & (((\EMPTY|Mux15~14_combout )))) # (!lat_Hcnt[1] & (\EMPTY|Mux15~12_combout ))

	.clk(gnd),
	.dataa(lat_Hcnt[1]),
	.datab(\EMPTY|Mux15~12_combout ),
	.datac(\EMPTY|Mux15~14_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~5 .lut_mask = "e4e4";
defparam \lattice_Rcol~5 .operation_mode = "normal";
defparam \lattice_Rcol~5 .output_mode = "comb_only";
defparam \lattice_Rcol~5 .register_cascade_mode = "off";
defparam \lattice_Rcol~5 .sum_lutc_input = "datac";
defparam \lattice_Rcol~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N9
maxii_lcell \lattice_Rcol~6 (
// Equation(s):
// \lattice_Rcol~6_combout  = (!\onride~combout  & ((lat_Hcnt[0] & (\lattice_Rcol~5_combout )) # (!lat_Hcnt[0] & ((\EMPTY|Mux15~9_combout )))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(lat_Hcnt[0]),
	.datac(\lattice_Rcol~5_combout ),
	.datad(\EMPTY|Mux15~9_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~6 .lut_mask = "5140";
defparam \lattice_Rcol~6 .operation_mode = "normal";
defparam \lattice_Rcol~6 .output_mode = "comb_only";
defparam \lattice_Rcol~6 .register_cascade_mode = "off";
defparam \lattice_Rcol~6 .sum_lutc_input = "datac";
defparam \lattice_Rcol~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N3
maxii_lcell \EMPTY|lat_data_R~0 (
// Equation(s):
// \EMPTY|lat_data_R~0_combout  = (lat_Vcnt[0] $ (((lat_Vcnt[2] & !lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(vcc),
	.datac(lat_Vcnt[0]),
	.datad(lat_Vcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|lat_data_R~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|lat_data_R~0 .lut_mask = "f05a";
defparam \EMPTY|lat_data_R~0 .operation_mode = "normal";
defparam \EMPTY|lat_data_R~0 .output_mode = "comb_only";
defparam \EMPTY|lat_data_R~0 .register_cascade_mode = "off";
defparam \EMPTY|lat_data_R~0 .sum_lutc_input = "datac";
defparam \EMPTY|lat_data_R~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N0
maxii_lcell \EMPTY|Mux15~15 (
// Equation(s):
// \EMPTY|Mux15~15_combout  = (lat_Vcnt[2] & (((!lat_Vcnt[0])))) # (!lat_Vcnt[2] & (lat_Vcnt[0] & ((lat_Hcnt[2]) # (!lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[1]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Hcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~15 .lut_mask = "5a1a";
defparam \EMPTY|Mux15~15 .operation_mode = "normal";
defparam \EMPTY|Mux15~15 .output_mode = "comb_only";
defparam \EMPTY|Mux15~15 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~15 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N7
maxii_lcell \EMPTY|Mux15~16 (
// Equation(s):
// \EMPTY|Mux15~16_combout  = (\EMPTY|lat_data_R~0_combout  & ((\EMPTY|Mux15~15_combout ) # (lat_Hcnt[3] $ (!lat_Hcnt[2])))) # (!\EMPTY|lat_data_R~0_combout  & (\EMPTY|Mux15~15_combout  & (lat_Hcnt[3] $ (lat_Hcnt[2]))))

	.clk(gnd),
	.dataa(\EMPTY|lat_data_R~0_combout ),
	.datab(lat_Hcnt[3]),
	.datac(\EMPTY|Mux15~15_combout ),
	.datad(lat_Hcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~16 .lut_mask = "b8e2";
defparam \EMPTY|Mux15~16 .operation_mode = "normal";
defparam \EMPTY|Mux15~16 .output_mode = "comb_only";
defparam \EMPTY|Mux15~16 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~16 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N5
maxii_lcell \lattice_Rcol~7 (
// Equation(s):
// \lattice_Rcol~7_combout  = ((lat_Hcnt[0] & ((\EMPTY|Mux15~16_combout ))) # (!lat_Hcnt[0] & (\EMPTY|Mux15~14_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[0]),
	.datac(\EMPTY|Mux15~14_combout ),
	.datad(\EMPTY|Mux15~16_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~7 .lut_mask = "fc30";
defparam \lattice_Rcol~7 .operation_mode = "normal";
defparam \lattice_Rcol~7 .output_mode = "comb_only";
defparam \lattice_Rcol~7 .register_cascade_mode = "off";
defparam \lattice_Rcol~7 .sum_lutc_input = "datac";
defparam \lattice_Rcol~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N1
maxii_lcell \lattice_Rcol~8 (
// Equation(s):
// \lattice_Rcol~8_combout  = ((lat_Hcnt[0] & (\EMPTY|Mux15~8_combout )) # (!lat_Hcnt[0] & ((\EMPTY|Mux15~12_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[0]),
	.datac(\EMPTY|Mux15~8_combout ),
	.datad(\EMPTY|Mux15~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~8 .lut_mask = "f3c0";
defparam \lattice_Rcol~8 .operation_mode = "normal";
defparam \lattice_Rcol~8 .output_mode = "comb_only";
defparam \lattice_Rcol~8 .register_cascade_mode = "off";
defparam \lattice_Rcol~8 .sum_lutc_input = "datac";
defparam \lattice_Rcol~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N3
maxii_lcell \lattice_Rcol~9 (
// Equation(s):
// \lattice_Rcol~9_combout  = (!\onride~combout  & ((lat_Hcnt[1] & (\lattice_Rcol~7_combout )) # (!lat_Hcnt[1] & ((\lattice_Rcol~8_combout )))))

	.clk(gnd),
	.dataa(\lattice_Rcol~7_combout ),
	.datab(lat_Hcnt[1]),
	.datac(\onride~combout ),
	.datad(\lattice_Rcol~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~9 .lut_mask = "0b08";
defparam \lattice_Rcol~9 .operation_mode = "normal";
defparam \lattice_Rcol~9 .output_mode = "comb_only";
defparam \lattice_Rcol~9 .register_cascade_mode = "off";
defparam \lattice_Rcol~9 .sum_lutc_input = "datac";
defparam \lattice_Rcol~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N7
maxii_lcell \lattice_Rcol~11 (
// Equation(s):
// \lattice_Rcol~11_combout  = ((lat_Hcnt[0] & ((\EMPTY|Mux15~14_combout ))) # (!lat_Hcnt[0] & (\EMPTY|Mux15~8_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[0]),
	.datac(\EMPTY|Mux15~8_combout ),
	.datad(\EMPTY|Mux15~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~11 .lut_mask = "fc30";
defparam \lattice_Rcol~11 .operation_mode = "normal";
defparam \lattice_Rcol~11 .output_mode = "comb_only";
defparam \lattice_Rcol~11 .register_cascade_mode = "off";
defparam \lattice_Rcol~11 .sum_lutc_input = "datac";
defparam \lattice_Rcol~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N5
maxii_lcell \EMPTY|Mux15~17 (
// Equation(s):
// \EMPTY|Mux15~17_combout  = lat_Vcnt[0] $ (((lat_Vcnt[2] & ((!lat_Hcnt[3]) # (!lat_Vcnt[1]))) # (!lat_Vcnt[2] & (lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~17 .lut_mask = "9636";
defparam \EMPTY|Mux15~17 .operation_mode = "normal";
defparam \EMPTY|Mux15~17 .output_mode = "comb_only";
defparam \EMPTY|Mux15~17 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~17 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N6
maxii_lcell \EMPTY|Mux15~18 (
// Equation(s):
// \EMPTY|Mux15~18_combout  = (lat_Hcnt[2] & (((\EMPTY|Mux15~17_combout )))) # (!lat_Hcnt[2] & (\EMPTY|Mux15~10_combout ))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~10_combout ),
	.datab(lat_Hcnt[2]),
	.datac(\EMPTY|Mux15~17_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~18 .lut_mask = "e2e2";
defparam \EMPTY|Mux15~18 .operation_mode = "normal";
defparam \EMPTY|Mux15~18 .output_mode = "comb_only";
defparam \EMPTY|Mux15~18 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~18 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~18 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N6
maxii_lcell \lattice_Rcol~10 (
// Equation(s):
// \lattice_Rcol~10_combout  = ((lat_Hcnt[0] & (\EMPTY|Mux15~18_combout )) # (!lat_Hcnt[0] & ((\EMPTY|Mux15~16_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\EMPTY|Mux15~18_combout ),
	.datac(lat_Hcnt[0]),
	.datad(\EMPTY|Mux15~16_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~10 .lut_mask = "cfc0";
defparam \lattice_Rcol~10 .operation_mode = "normal";
defparam \lattice_Rcol~10 .output_mode = "comb_only";
defparam \lattice_Rcol~10 .register_cascade_mode = "off";
defparam \lattice_Rcol~10 .sum_lutc_input = "datac";
defparam \lattice_Rcol~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N8
maxii_lcell \lattice_Rcol~12 (
// Equation(s):
// \lattice_Rcol~12_combout  = (!\onride~combout  & ((lat_Hcnt[1] & ((\lattice_Rcol~10_combout ))) # (!lat_Hcnt[1] & (\lattice_Rcol~11_combout ))))

	.clk(gnd),
	.dataa(lat_Hcnt[1]),
	.datab(\lattice_Rcol~11_combout ),
	.datac(\onride~combout ),
	.datad(\lattice_Rcol~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~12 .lut_mask = "0e04";
defparam \lattice_Rcol~12 .operation_mode = "normal";
defparam \lattice_Rcol~12 .output_mode = "comb_only";
defparam \lattice_Rcol~12 .register_cascade_mode = "off";
defparam \lattice_Rcol~12 .sum_lutc_input = "datac";
defparam \lattice_Rcol~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N1
maxii_lcell \EMPTY|Mux15~19 (
// Equation(s):
// \EMPTY|Mux15~19_combout  = (lat_Hcnt[2] & (((!lat_Hcnt[3] & lat_Vcnt[0])) # (!\Decoder3~0_combout )))

	.clk(gnd),
	.dataa(lat_Hcnt[3]),
	.datab(\Decoder3~0_combout ),
	.datac(lat_Vcnt[0]),
	.datad(lat_Hcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~19 .lut_mask = "7300";
defparam \EMPTY|Mux15~19 .operation_mode = "normal";
defparam \EMPTY|Mux15~19 .output_mode = "comb_only";
defparam \EMPTY|Mux15~19 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~19 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~19 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N0
maxii_lcell \lattice_Rcol~13 (
// Equation(s):
// \lattice_Rcol~13_combout  = ((lat_Hcnt[0] & (\EMPTY|Mux15~19_combout )) # (!lat_Hcnt[0] & ((\EMPTY|Mux15~18_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~19_combout ),
	.datab(vcc),
	.datac(\EMPTY|Mux15~18_combout ),
	.datad(lat_Hcnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~13 .lut_mask = "aaf0";
defparam \lattice_Rcol~13 .operation_mode = "normal";
defparam \lattice_Rcol~13 .output_mode = "comb_only";
defparam \lattice_Rcol~13 .register_cascade_mode = "off";
defparam \lattice_Rcol~13 .sum_lutc_input = "datac";
defparam \lattice_Rcol~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N0
maxii_lcell \lattice_Rcol~14 (
// Equation(s):
// \lattice_Rcol~14_combout  = (!\onride~combout  & ((lat_Hcnt[1] & (\lattice_Rcol~13_combout )) # (!lat_Hcnt[1] & ((\lattice_Rcol~7_combout )))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\lattice_Rcol~13_combout ),
	.datac(\lattice_Rcol~7_combout ),
	.datad(lat_Hcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~14 .lut_mask = "4450";
defparam \lattice_Rcol~14 .operation_mode = "normal";
defparam \lattice_Rcol~14 .output_mode = "comb_only";
defparam \lattice_Rcol~14 .register_cascade_mode = "off";
defparam \lattice_Rcol~14 .sum_lutc_input = "datac";
defparam \lattice_Rcol~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N7
maxii_lcell \EMPTY|Mux15~20 (
// Equation(s):
// \EMPTY|Mux15~20_combout  = (lat_Vcnt[1] & ((lat_Hcnt[3] & (lat_Vcnt[0] $ (!lat_Vcnt[2]))) # (!lat_Hcnt[3] & (!lat_Vcnt[0] & lat_Vcnt[2])))) # (!lat_Vcnt[1] & ((lat_Vcnt[0] $ (lat_Vcnt[2]))))

	.clk(gnd),
	.dataa(lat_Vcnt[1]),
	.datab(lat_Hcnt[3]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~20 .lut_mask = "8758";
defparam \EMPTY|Mux15~20 .operation_mode = "normal";
defparam \EMPTY|Mux15~20 .output_mode = "comb_only";
defparam \EMPTY|Mux15~20 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~20 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y9_N4
maxii_lcell \EMPTY|Mux15~21 (
// Equation(s):
// \EMPTY|Mux15~21_combout  = ((lat_Hcnt[2] & ((\EMPTY|Mux15~20_combout ))) # (!lat_Hcnt[2] & (\EMPTY|Mux15~13_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\EMPTY|Mux15~13_combout ),
	.datac(\EMPTY|Mux15~20_combout ),
	.datad(lat_Hcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~21 .lut_mask = "f0cc";
defparam \EMPTY|Mux15~21 .operation_mode = "normal";
defparam \EMPTY|Mux15~21 .output_mode = "comb_only";
defparam \EMPTY|Mux15~21 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~21 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N9
maxii_lcell \lattice_Rcol~15 (
// Equation(s):
// \lattice_Rcol~15_combout  = ((lat_Hcnt[0] & ((\EMPTY|Mux15~21_combout ))) # (!lat_Hcnt[0] & (\EMPTY|Mux15~19_combout )))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~19_combout ),
	.datab(\EMPTY|Mux15~21_combout ),
	.datac(vcc),
	.datad(lat_Hcnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~15 .lut_mask = "ccaa";
defparam \lattice_Rcol~15 .operation_mode = "normal";
defparam \lattice_Rcol~15 .output_mode = "comb_only";
defparam \lattice_Rcol~15 .register_cascade_mode = "off";
defparam \lattice_Rcol~15 .sum_lutc_input = "datac";
defparam \lattice_Rcol~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y8_N6
maxii_lcell \lattice_Rcol~16 (
// Equation(s):
// \lattice_Rcol~16_combout  = (!\onride~combout  & ((lat_Hcnt[1] & (\lattice_Rcol~15_combout )) # (!lat_Hcnt[1] & ((\lattice_Rcol~10_combout )))))

	.clk(gnd),
	.dataa(lat_Hcnt[1]),
	.datab(\lattice_Rcol~15_combout ),
	.datac(\onride~combout ),
	.datad(\lattice_Rcol~10_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~16 .lut_mask = "0d08";
defparam \lattice_Rcol~16 .operation_mode = "normal";
defparam \lattice_Rcol~16 .output_mode = "comb_only";
defparam \lattice_Rcol~16 .register_cascade_mode = "off";
defparam \lattice_Rcol~16 .sum_lutc_input = "datac";
defparam \lattice_Rcol~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N4
maxii_lcell \EMPTY|lat_data_R~1 (
// Equation(s):
// \EMPTY|lat_data_R~1_combout  = ((lat_Vcnt[0] & (!lat_Vcnt[1] & !lat_Vcnt[2])) # (!lat_Vcnt[0] & ((lat_Vcnt[2]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|lat_data_R~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|lat_data_R~1 .lut_mask = "330c";
defparam \EMPTY|lat_data_R~1 .operation_mode = "normal";
defparam \EMPTY|lat_data_R~1 .output_mode = "comb_only";
defparam \EMPTY|lat_data_R~1 .register_cascade_mode = "off";
defparam \EMPTY|lat_data_R~1 .sum_lutc_input = "datac";
defparam \EMPTY|lat_data_R~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N8
maxii_lcell \EMPTY|Mux15~23 (
// Equation(s):
// \EMPTY|Mux15~23_combout  = (lat_Hcnt[1] & (((lat_Hcnt[3])) # (!lat_Hcnt[2])))

	.clk(gnd),
	.dataa(lat_Hcnt[2]),
	.datab(lat_Hcnt[1]),
	.datac(lat_Hcnt[3]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~23_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~23 .lut_mask = "c4c4";
defparam \EMPTY|Mux15~23 .operation_mode = "normal";
defparam \EMPTY|Mux15~23 .output_mode = "comb_only";
defparam \EMPTY|Mux15~23 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~23 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~23 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y8_N7
maxii_lcell \EMPTY|Mux15~24 (
// Equation(s):
// \EMPTY|Mux15~24_combout  = (((lat_Hcnt[2] & lat_Hcnt[1])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(lat_Hcnt[2]),
	.datad(lat_Hcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~24_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~24 .lut_mask = "f000";
defparam \EMPTY|Mux15~24 .operation_mode = "normal";
defparam \EMPTY|Mux15~24 .output_mode = "comb_only";
defparam \EMPTY|Mux15~24 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~24 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~24 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N7
maxii_lcell \EMPTY|Mux15~25 (
// Equation(s):
// \EMPTY|Mux15~25_combout  = (\EMPTY|Mux15~23_combout  & (((\EMPTY|Mux15~24_combout )))) # (!\EMPTY|Mux15~23_combout  & ((\EMPTY|Mux15~24_combout  & (\EMPTY|lat_data_R~1_combout )) # (!\EMPTY|Mux15~24_combout  & ((\EMPTY|Mux15~19_combout )))))

	.clk(gnd),
	.dataa(\EMPTY|lat_data_R~1_combout ),
	.datab(\EMPTY|Mux15~23_combout ),
	.datac(\EMPTY|Mux15~24_combout ),
	.datad(\EMPTY|Mux15~19_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~25_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~25 .lut_mask = "e3e0";
defparam \EMPTY|Mux15~25 .operation_mode = "normal";
defparam \EMPTY|Mux15~25 .output_mode = "comb_only";
defparam \EMPTY|Mux15~25 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~25 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~25 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N1
maxii_lcell \EMPTY|Mux15~22 (
// Equation(s):
// \EMPTY|Mux15~22_combout  = lat_Vcnt[0] $ (((lat_Vcnt[2] & ((!lat_Vcnt[1]) # (!lat_Hcnt[3])))))

	.clk(gnd),
	.dataa(lat_Hcnt[3]),
	.datab(lat_Vcnt[1]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~22_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~22 .lut_mask = "87f0";
defparam \EMPTY|Mux15~22 .operation_mode = "normal";
defparam \EMPTY|Mux15~22 .output_mode = "comb_only";
defparam \EMPTY|Mux15~22 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~22 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N3
maxii_lcell \EMPTY|Mux15~26 (
// Equation(s):
// \EMPTY|Mux15~26_combout  = (\EMPTY|Mux15~25_combout  & ((\EMPTY|lat_data_R~0_combout ) # ((!\EMPTY|Mux15~23_combout )))) # (!\EMPTY|Mux15~25_combout  & (((\EMPTY|Mux15~23_combout  & \EMPTY|Mux15~22_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|lat_data_R~0_combout ),
	.datab(\EMPTY|Mux15~25_combout ),
	.datac(\EMPTY|Mux15~23_combout ),
	.datad(\EMPTY|Mux15~22_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~26_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~26 .lut_mask = "bc8c";
defparam \EMPTY|Mux15~26 .operation_mode = "normal";
defparam \EMPTY|Mux15~26 .output_mode = "comb_only";
defparam \EMPTY|Mux15~26 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~26 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~26 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N5
maxii_lcell \lattice_Rcol~17 (
// Equation(s):
// \lattice_Rcol~17_combout  = (lat_Hcnt[1] & (((\EMPTY|Mux15~21_combout )))) # (!lat_Hcnt[1] & (\EMPTY|Mux15~18_combout ))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~18_combout ),
	.datab(\EMPTY|Mux15~21_combout ),
	.datac(lat_Hcnt[1]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~17 .lut_mask = "caca";
defparam \lattice_Rcol~17 .operation_mode = "normal";
defparam \lattice_Rcol~17 .output_mode = "comb_only";
defparam \lattice_Rcol~17 .register_cascade_mode = "off";
defparam \lattice_Rcol~17 .sum_lutc_input = "datac";
defparam \lattice_Rcol~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N8
maxii_lcell \lattice_Rcol~18 (
// Equation(s):
// \lattice_Rcol~18_combout  = (!\onride~combout  & ((lat_Hcnt[0] & (\EMPTY|Mux15~26_combout )) # (!lat_Hcnt[0] & ((\lattice_Rcol~17_combout )))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~26_combout ),
	.datab(lat_Hcnt[0]),
	.datac(\lattice_Rcol~17_combout ),
	.datad(\onride~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~18 .lut_mask = "00b8";
defparam \lattice_Rcol~18 .operation_mode = "normal";
defparam \lattice_Rcol~18 .output_mode = "comb_only";
defparam \lattice_Rcol~18 .register_cascade_mode = "off";
defparam \lattice_Rcol~18 .sum_lutc_input = "datac";
defparam \lattice_Rcol~18 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N9
maxii_lcell \lattice_Rcol~19 (
// Equation(s):
// \lattice_Rcol~19_combout  = (lat_Vcnt[2] & (lat_Vcnt[1] & (lat_Vcnt[0] $ (!lat_Hcnt[3])))) # (!lat_Vcnt[2] & (lat_Hcnt[3] & (lat_Vcnt[0] $ (lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~19 .lut_mask = "9420";
defparam \lattice_Rcol~19 .operation_mode = "normal";
defparam \lattice_Rcol~19 .output_mode = "comb_only";
defparam \lattice_Rcol~19 .register_cascade_mode = "off";
defparam \lattice_Rcol~19 .sum_lutc_input = "datac";
defparam \lattice_Rcol~19 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N8
maxii_lcell \lattice_Rcol~20 (
// Equation(s):
// \lattice_Rcol~20_combout  = ((lat_Hcnt[2] & ((\lattice_Rcol~19_combout ))) # (!lat_Hcnt[2] & (\EMPTY|Mux15~17_combout )))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~17_combout ),
	.datab(vcc),
	.datac(lat_Hcnt[2]),
	.datad(\lattice_Rcol~19_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~20 .lut_mask = "fa0a";
defparam \lattice_Rcol~20 .operation_mode = "normal";
defparam \lattice_Rcol~20 .output_mode = "comb_only";
defparam \lattice_Rcol~20 .register_cascade_mode = "off";
defparam \lattice_Rcol~20 .sum_lutc_input = "datac";
defparam \lattice_Rcol~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N6
maxii_lcell \lattice_Rcol~21 (
// Equation(s):
// \lattice_Rcol~21_combout  = ((lat_Hcnt[1] & ((\lattice_Rcol~20_combout ))) # (!lat_Hcnt[1] & (\EMPTY|Mux15~21_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\EMPTY|Mux15~21_combout ),
	.datac(lat_Hcnt[1]),
	.datad(\lattice_Rcol~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~21 .lut_mask = "fc0c";
defparam \lattice_Rcol~21 .operation_mode = "normal";
defparam \lattice_Rcol~21 .output_mode = "comb_only";
defparam \lattice_Rcol~21 .register_cascade_mode = "off";
defparam \lattice_Rcol~21 .sum_lutc_input = "datac";
defparam \lattice_Rcol~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y9_N2
maxii_lcell \lattice_Rcol~22 (
// Equation(s):
// \lattice_Rcol~22_combout  = (!\onride~combout  & ((lat_Hcnt[0] & ((\lattice_Rcol~21_combout ))) # (!lat_Hcnt[0] & (\EMPTY|Mux15~26_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~26_combout ),
	.datab(lat_Hcnt[0]),
	.datac(\lattice_Rcol~21_combout ),
	.datad(\onride~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Rcol~22_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Rcol~22 .lut_mask = "00e2";
defparam \lattice_Rcol~22 .operation_mode = "normal";
defparam \lattice_Rcol~22 .output_mode = "comb_only";
defparam \lattice_Rcol~22 .register_cascade_mode = "off";
defparam \lattice_Rcol~22 .sum_lutc_input = "datac";
defparam \lattice_Rcol~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N2
maxii_lcell \EMPTY|Mux15~30 (
// Equation(s):
// \EMPTY|Mux15~30_combout  = (lat_Vcnt[1] & (lat_Vcnt[2] & (lat_Vcnt[0]))) # (!lat_Vcnt[1] & ((lat_Vcnt[0] & (!lat_Vcnt[2] & !lat_Hcnt[3])) # (!lat_Vcnt[0] & ((lat_Hcnt[3])))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[1]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~30_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~30 .lut_mask = "8390";
defparam \EMPTY|Mux15~30 .operation_mode = "normal";
defparam \EMPTY|Mux15~30 .output_mode = "comb_only";
defparam \EMPTY|Mux15~30 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~30 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~30 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N1
maxii_lcell \lattice_Gcol~0 (
// Equation(s):
// \lattice_Gcol~0_combout  = (lat_Vcnt[2] & (lat_Vcnt[1] & (lat_Vcnt[0] $ (!lat_Hcnt[3])))) # (!lat_Vcnt[2] & ((lat_Hcnt[3] & (!lat_Vcnt[0])) # (!lat_Hcnt[3] & ((lat_Vcnt[1])))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~0 .lut_mask = "9170";
defparam \lattice_Gcol~0 .operation_mode = "normal";
defparam \lattice_Gcol~0 .output_mode = "comb_only";
defparam \lattice_Gcol~0 .register_cascade_mode = "off";
defparam \lattice_Gcol~0 .sum_lutc_input = "datac";
defparam \lattice_Gcol~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N0
maxii_lcell \lattice_Gcol~1 (
// Equation(s):
// \lattice_Gcol~1_combout  = (lat_Hcnt[2] & (\EMPTY|Mux15~30_combout )) # (!lat_Hcnt[2] & (((\lattice_Gcol~0_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~30_combout ),
	.datab(lat_Hcnt[2]),
	.datac(\lattice_Gcol~0_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~1 .lut_mask = "b8b8";
defparam \lattice_Gcol~1 .operation_mode = "normal";
defparam \lattice_Gcol~1 .output_mode = "comb_only";
defparam \lattice_Gcol~1 .register_cascade_mode = "off";
defparam \lattice_Gcol~1 .sum_lutc_input = "datac";
defparam \lattice_Gcol~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N3
maxii_lcell \WELCOME|Mux0~6 (
// Equation(s):
// \WELCOME|Mux0~6_combout  = (lat_Vcnt[0] & (lat_Vcnt[2] & (lat_Vcnt[1] $ (!lat_Hcnt[3])))) # (!lat_Vcnt[0] & (!lat_Hcnt[3] & (lat_Vcnt[2] $ (lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~6 .lut_mask = "801a";
defparam \WELCOME|Mux0~6 .operation_mode = "normal";
defparam \WELCOME|Mux0~6 .output_mode = "comb_only";
defparam \WELCOME|Mux0~6 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~6 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N1
maxii_lcell \EMPTY|Mux15~29 (
// Equation(s):
// \EMPTY|Mux15~29_combout  = (lat_Vcnt[2] & (lat_Vcnt[0] & (lat_Vcnt[1]))) # (!lat_Vcnt[2] & ((lat_Vcnt[0] & ((lat_Hcnt[3]) # (!lat_Vcnt[1]))) # (!lat_Vcnt[0] & (lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~29_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~29 .lut_mask = "d494";
defparam \EMPTY|Mux15~29 .operation_mode = "normal";
defparam \EMPTY|Mux15~29 .output_mode = "comb_only";
defparam \EMPTY|Mux15~29 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~29 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~29 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N0
maxii_lcell \WELCOME|Mux0~7 (
// Equation(s):
// \WELCOME|Mux0~7_combout  = ((lat_Hcnt[2] & ((\EMPTY|Mux15~29_combout ))) # (!lat_Hcnt[2] & (\WELCOME|Mux0~6_combout )))

	.clk(gnd),
	.dataa(\WELCOME|Mux0~6_combout ),
	.datab(vcc),
	.datac(lat_Hcnt[2]),
	.datad(\EMPTY|Mux15~29_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~7 .lut_mask = "fa0a";
defparam \WELCOME|Mux0~7 .operation_mode = "normal";
defparam \WELCOME|Mux0~7 .output_mode = "comb_only";
defparam \WELCOME|Mux0~7 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~7 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N3
maxii_lcell \lattice_Gcol~2 (
// Equation(s):
// \lattice_Gcol~2_combout  = ((lat_Hcnt[1] & ((\WELCOME|Mux0~7_combout ))) # (!lat_Hcnt[1] & (\lattice_Gcol~1_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\lattice_Gcol~1_combout ),
	.datac(\WELCOME|Mux0~7_combout ),
	.datad(lat_Hcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~2 .lut_mask = "f0cc";
defparam \lattice_Gcol~2 .operation_mode = "normal";
defparam \lattice_Gcol~2 .output_mode = "comb_only";
defparam \lattice_Gcol~2 .register_cascade_mode = "off";
defparam \lattice_Gcol~2 .sum_lutc_input = "datac";
defparam \lattice_Gcol~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N6
maxii_lcell \WELCOME|Mux0~21 (
// Equation(s):
// \WELCOME|Mux0~21_combout  = (lat_Vcnt[2] & (((!lat_Vcnt[0] & lat_Hcnt[3])) # (!lat_Vcnt[1]))) # (!lat_Vcnt[2] & ((lat_Hcnt[3]) # ((!lat_Vcnt[0] & lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~21_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~21 .lut_mask = "7f1a";
defparam \WELCOME|Mux0~21 .operation_mode = "normal";
defparam \WELCOME|Mux0~21 .output_mode = "comb_only";
defparam \WELCOME|Mux0~21 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~21 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~21 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N3
maxii_lcell \WELCOME|Mux0~22 (
// Equation(s):
// \WELCOME|Mux0~22_combout  = ((lat_Hcnt[1]) # ((!lat_Hcnt[2] & \WELCOME|Mux0~21_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[2]),
	.datac(\WELCOME|Mux0~21_combout ),
	.datad(lat_Hcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~22_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~22 .lut_mask = "ff30";
defparam \WELCOME|Mux0~22 .operation_mode = "normal";
defparam \WELCOME|Mux0~22 .output_mode = "comb_only";
defparam \WELCOME|Mux0~22 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~22 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~22 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N4
maxii_lcell \EMPTY|Mux15~27 (
// Equation(s):
// \EMPTY|Mux15~27_combout  = (lat_Vcnt[1] & (lat_Hcnt[3] $ (((lat_Vcnt[2] & !lat_Vcnt[0]))))) # (!lat_Vcnt[1] & ((lat_Vcnt[2]) # ((lat_Vcnt[0]) # (!lat_Hcnt[3]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~27_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~27 .lut_mask = "de2f";
defparam \EMPTY|Mux15~27 .operation_mode = "normal";
defparam \EMPTY|Mux15~27 .output_mode = "comb_only";
defparam \EMPTY|Mux15~27 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~27 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~27 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N0
maxii_lcell \EMPTY|Mux15~28 (
// Equation(s):
// \EMPTY|Mux15~28_combout  = ((lat_Vcnt[1] & ((!lat_Vcnt[2]) # (!lat_Vcnt[0]))))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~28_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~28 .lut_mask = "30f0";
defparam \EMPTY|Mux15~28 .operation_mode = "normal";
defparam \EMPTY|Mux15~28 .output_mode = "comb_only";
defparam \EMPTY|Mux15~28 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~28 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~28 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N4
maxii_lcell \WELCOME|lat_data_G~0 (
// Equation(s):
// \WELCOME|lat_data_G~0_combout  = ((lat_Vcnt[0]) # (lat_Vcnt[1] $ (lat_Vcnt[2])))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|lat_data_G~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|lat_data_G~0 .lut_mask = "cffc";
defparam \WELCOME|lat_data_G~0 .operation_mode = "normal";
defparam \WELCOME|lat_data_G~0 .output_mode = "comb_only";
defparam \WELCOME|lat_data_G~0 .register_cascade_mode = "off";
defparam \WELCOME|lat_data_G~0 .sum_lutc_input = "datac";
defparam \WELCOME|lat_data_G~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N5
maxii_lcell \WELCOME|Mux0~4 (
// Equation(s):
// \WELCOME|Mux0~4_combout  = (!lat_Hcnt[2] & ((lat_Hcnt[3] & ((\WELCOME|lat_data_G~0_combout ))) # (!lat_Hcnt[3] & (\EMPTY|Mux15~28_combout ))))

	.clk(gnd),
	.dataa(lat_Hcnt[3]),
	.datab(\EMPTY|Mux15~28_combout ),
	.datac(lat_Hcnt[2]),
	.datad(\WELCOME|lat_data_G~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~4 .lut_mask = "0e04";
defparam \WELCOME|Mux0~4 .operation_mode = "normal";
defparam \WELCOME|Mux0~4 .output_mode = "comb_only";
defparam \WELCOME|Mux0~4 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~4 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X1_Y7_N5
maxii_lcell \WELCOME|Mux0~5 (
// Equation(s):
// \WELCOME|Mux0~5_combout  = (\WELCOME|Mux0~22_combout  & (((\WELCOME|Mux0~4_combout )) # (!\EMPTY|Mux15~7_combout ))) # (!\WELCOME|Mux0~22_combout  & (\EMPTY|Mux15~7_combout  & (\EMPTY|Mux15~27_combout )))

	.clk(gnd),
	.dataa(\WELCOME|Mux0~22_combout ),
	.datab(\EMPTY|Mux15~7_combout ),
	.datac(\EMPTY|Mux15~27_combout ),
	.datad(\WELCOME|Mux0~4_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~5 .lut_mask = "ea62";
defparam \WELCOME|Mux0~5 .operation_mode = "normal";
defparam \WELCOME|Mux0~5 .output_mode = "comb_only";
defparam \WELCOME|Mux0~5 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~5 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N0
maxii_lcell \lattice_Gcol~3 (
// Equation(s):
// \lattice_Gcol~3_combout  = (\onride~combout  & ((lat_Hcnt[0] & ((\WELCOME|Mux0~5_combout ))) # (!lat_Hcnt[0] & (\lattice_Gcol~2_combout ))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\lattice_Gcol~2_combout ),
	.datac(\WELCOME|Mux0~5_combout ),
	.datad(lat_Hcnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~3 .lut_mask = "a088";
defparam \lattice_Gcol~3 .operation_mode = "normal";
defparam \lattice_Gcol~3 .output_mode = "comb_only";
defparam \lattice_Gcol~3 .register_cascade_mode = "off";
defparam \lattice_Gcol~3 .sum_lutc_input = "datac";
defparam \lattice_Gcol~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y10_N2
maxii_lcell \EMPTY|Mux15~31 (
// Equation(s):
// \EMPTY|Mux15~31_combout  = (lat_Vcnt[2] & (lat_Vcnt[1] & (lat_Vcnt[0] $ (lat_Hcnt[3])))) # (!lat_Vcnt[2] & ((lat_Hcnt[3] & ((lat_Vcnt[1]))) # (!lat_Hcnt[3] & (!lat_Vcnt[0]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~31_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~31 .lut_mask = "7091";
defparam \EMPTY|Mux15~31 .operation_mode = "normal";
defparam \EMPTY|Mux15~31 .output_mode = "comb_only";
defparam \EMPTY|Mux15~31 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~31 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~31 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N2
maxii_lcell \WELCOME|Mux0~8 (
// Equation(s):
// \WELCOME|Mux0~8_combout  = (lat_Hcnt[2] & (\EMPTY|Mux15~31_combout )) # (!lat_Hcnt[2] & (((\EMPTY|Mux15~30_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~31_combout ),
	.datab(lat_Hcnt[2]),
	.datac(\EMPTY|Mux15~30_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~8 .lut_mask = "b8b8";
defparam \WELCOME|Mux0~8 .operation_mode = "normal";
defparam \WELCOME|Mux0~8 .output_mode = "comb_only";
defparam \WELCOME|Mux0~8 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~8 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N6
maxii_lcell \WELCOME|Mux0~9 (
// Equation(s):
// \WELCOME|Mux0~9_combout  = ((lat_Hcnt[1] & ((\WELCOME|Mux0~8_combout ))) # (!lat_Hcnt[1] & (\WELCOME|Mux0~7_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[1]),
	.datac(\WELCOME|Mux0~7_combout ),
	.datad(\WELCOME|Mux0~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~9 .lut_mask = "fc30";
defparam \WELCOME|Mux0~9 .operation_mode = "normal";
defparam \WELCOME|Mux0~9 .output_mode = "comb_only";
defparam \WELCOME|Mux0~9 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~9 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N9
maxii_lcell \lattice_Gcol~4 (
// Equation(s):
// \lattice_Gcol~4_combout  = (\onride~combout  & ((lat_Hcnt[0] & (\WELCOME|Mux0~9_combout )) # (!lat_Hcnt[0] & ((\WELCOME|Mux0~5_combout )))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\WELCOME|Mux0~9_combout ),
	.datac(\WELCOME|Mux0~5_combout ),
	.datad(lat_Hcnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~4 .lut_mask = "88a0";
defparam \lattice_Gcol~4 .operation_mode = "normal";
defparam \lattice_Gcol~4 .output_mode = "comb_only";
defparam \lattice_Gcol~4 .register_cascade_mode = "off";
defparam \lattice_Gcol~4 .sum_lutc_input = "datac";
defparam \lattice_Gcol~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N6
maxii_lcell \EMPTY|Mux15~32 (
// Equation(s):
// \EMPTY|Mux15~32_combout  = (lat_Vcnt[0] & ((lat_Vcnt[2] & ((!lat_Vcnt[1]))) # (!lat_Vcnt[2] & (!lat_Hcnt[3])))) # (!lat_Vcnt[0] & ((lat_Vcnt[1] $ (lat_Vcnt[2])) # (!lat_Hcnt[3])))

	.clk(gnd),
	.dataa(lat_Hcnt[3]),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\EMPTY|Mux15~32_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \EMPTY|Mux15~32 .lut_mask = "1f75";
defparam \EMPTY|Mux15~32 .operation_mode = "normal";
defparam \EMPTY|Mux15~32 .output_mode = "comb_only";
defparam \EMPTY|Mux15~32 .register_cascade_mode = "off";
defparam \EMPTY|Mux15~32 .sum_lutc_input = "datac";
defparam \EMPTY|Mux15~32 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N7
maxii_lcell \WELCOME|Mux0~10 (
// Equation(s):
// \WELCOME|Mux0~10_combout  = ((lat_Hcnt[2] & (\EMPTY|Mux15~32_combout )) # (!lat_Hcnt[2] & ((\EMPTY|Mux15~27_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~32_combout ),
	.datab(vcc),
	.datac(lat_Hcnt[2]),
	.datad(\EMPTY|Mux15~27_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~10 .lut_mask = "afa0";
defparam \WELCOME|Mux0~10 .operation_mode = "normal";
defparam \WELCOME|Mux0~10 .output_mode = "comb_only";
defparam \WELCOME|Mux0~10 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~10 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N6
maxii_lcell \WELCOME|Mux0~11 (
// Equation(s):
// \WELCOME|Mux0~11_combout  = ((lat_Hcnt[1] & (\WELCOME|Mux0~10_combout )) # (!lat_Hcnt[1] & ((\WELCOME|Mux0~4_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\WELCOME|Mux0~10_combout ),
	.datac(\WELCOME|Mux0~4_combout ),
	.datad(lat_Hcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~11 .lut_mask = "ccf0";
defparam \WELCOME|Mux0~11 .operation_mode = "normal";
defparam \WELCOME|Mux0~11 .output_mode = "comb_only";
defparam \WELCOME|Mux0~11 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~11 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N5
maxii_lcell \lattice_Gcol~5 (
// Equation(s):
// \lattice_Gcol~5_combout  = (\onride~combout  & ((lat_Hcnt[0] & ((\WELCOME|Mux0~11_combout ))) # (!lat_Hcnt[0] & (\WELCOME|Mux0~9_combout ))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\WELCOME|Mux0~9_combout ),
	.datac(\WELCOME|Mux0~11_combout ),
	.datad(lat_Hcnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~5 .lut_mask = "a088";
defparam \lattice_Gcol~5 .operation_mode = "normal";
defparam \lattice_Gcol~5 .output_mode = "comb_only";
defparam \lattice_Gcol~5 .register_cascade_mode = "off";
defparam \lattice_Gcol~5 .sum_lutc_input = "datac";
defparam \lattice_Gcol~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N5
maxii_lcell \WELCOME|Mux0~12 (
// Equation(s):
// \WELCOME|Mux0~12_combout  = (lat_Vcnt[0] & (lat_Vcnt[2] & (lat_Vcnt[1] $ (lat_Hcnt[3])))) # (!lat_Vcnt[0] & (lat_Hcnt[3] & (lat_Vcnt[2] $ (lat_Vcnt[1]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[1]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~12 .lut_mask = "2680";
defparam \WELCOME|Mux0~12 .operation_mode = "normal";
defparam \WELCOME|Mux0~12 .output_mode = "comb_only";
defparam \WELCOME|Mux0~12 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~12 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N5
maxii_lcell \WELCOME|Mux0~13 (
// Equation(s):
// \WELCOME|Mux0~13_combout  = ((lat_Hcnt[2] & ((\WELCOME|Mux0~12_combout ))) # (!lat_Hcnt[2] & (\EMPTY|Mux15~29_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[2]),
	.datac(\EMPTY|Mux15~29_combout ),
	.datad(\WELCOME|Mux0~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~13 .lut_mask = "fc30";
defparam \WELCOME|Mux0~13 .operation_mode = "normal";
defparam \WELCOME|Mux0~13 .output_mode = "comb_only";
defparam \WELCOME|Mux0~13 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~13 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N9
maxii_lcell \WELCOME|Mux0~14 (
// Equation(s):
// \WELCOME|Mux0~14_combout  = ((lat_Hcnt[1] & (\WELCOME|Mux0~13_combout )) # (!lat_Hcnt[1] & ((\WELCOME|Mux0~8_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[1]),
	.datac(\WELCOME|Mux0~13_combout ),
	.datad(\WELCOME|Mux0~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~14 .lut_mask = "f3c0";
defparam \WELCOME|Mux0~14 .operation_mode = "normal";
defparam \WELCOME|Mux0~14 .output_mode = "comb_only";
defparam \WELCOME|Mux0~14 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~14 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N4
maxii_lcell \lattice_Gcol~6 (
// Equation(s):
// \lattice_Gcol~6_combout  = (\onride~combout  & ((lat_Hcnt[0] & ((\WELCOME|Mux0~14_combout ))) # (!lat_Hcnt[0] & (\WELCOME|Mux0~11_combout ))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(lat_Hcnt[0]),
	.datac(\WELCOME|Mux0~11_combout ),
	.datad(\WELCOME|Mux0~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~6 .lut_mask = "a820";
defparam \lattice_Gcol~6 .operation_mode = "normal";
defparam \lattice_Gcol~6 .output_mode = "comb_only";
defparam \lattice_Gcol~6 .register_cascade_mode = "off";
defparam \lattice_Gcol~6 .sum_lutc_input = "datac";
defparam \lattice_Gcol~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N1
maxii_lcell \WELCOME|Mux0~15 (
// Equation(s):
// \WELCOME|Mux0~15_combout  = (lat_Hcnt[2] & ((lat_Hcnt[3] & ((\EMPTY|Mux15~28_combout ))) # (!lat_Hcnt[3] & (\WELCOME|lat_data_G~0_combout ))))

	.clk(gnd),
	.dataa(lat_Hcnt[3]),
	.datab(\WELCOME|lat_data_G~0_combout ),
	.datac(lat_Hcnt[2]),
	.datad(\EMPTY|Mux15~28_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~15 .lut_mask = "e040";
defparam \WELCOME|Mux0~15 .operation_mode = "normal";
defparam \WELCOME|Mux0~15 .output_mode = "comb_only";
defparam \WELCOME|Mux0~15 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~15 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N7
maxii_lcell \WELCOME|Mux0~16 (
// Equation(s):
// \WELCOME|Mux0~16_combout  = ((lat_Hcnt[1] & ((\WELCOME|Mux0~15_combout ))) # (!lat_Hcnt[1] & (\WELCOME|Mux0~10_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\WELCOME|Mux0~10_combout ),
	.datac(\WELCOME|Mux0~15_combout ),
	.datad(lat_Hcnt[1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~16 .lut_mask = "f0cc";
defparam \WELCOME|Mux0~16 .operation_mode = "normal";
defparam \WELCOME|Mux0~16 .output_mode = "comb_only";
defparam \WELCOME|Mux0~16 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~16 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N1
maxii_lcell \lattice_Gcol~7 (
// Equation(s):
// \lattice_Gcol~7_combout  = (\onride~combout  & ((lat_Hcnt[0] & (\WELCOME|Mux0~16_combout )) # (!lat_Hcnt[0] & ((\WELCOME|Mux0~14_combout )))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(lat_Hcnt[0]),
	.datac(\WELCOME|Mux0~16_combout ),
	.datad(\WELCOME|Mux0~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~7 .lut_mask = "a280";
defparam \lattice_Gcol~7 .operation_mode = "normal";
defparam \lattice_Gcol~7 .output_mode = "comb_only";
defparam \lattice_Gcol~7 .register_cascade_mode = "off";
defparam \lattice_Gcol~7 .sum_lutc_input = "datac";
defparam \lattice_Gcol~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N8
maxii_lcell \WELCOME|Mux0~17 (
// Equation(s):
// \WELCOME|Mux0~17_combout  = (lat_Vcnt[1] & (lat_Vcnt[2] & (lat_Vcnt[0]))) # (!lat_Vcnt[1] & ((lat_Vcnt[0] & (!lat_Vcnt[2] & lat_Hcnt[3])) # (!lat_Vcnt[0] & ((!lat_Hcnt[3])))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[1]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~17 .lut_mask = "9083";
defparam \WELCOME|Mux0~17 .operation_mode = "normal";
defparam \WELCOME|Mux0~17 .output_mode = "comb_only";
defparam \WELCOME|Mux0~17 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~17 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N8
maxii_lcell \WELCOME|Mux0~18 (
// Equation(s):
// \WELCOME|Mux0~18_combout  = ((lat_Hcnt[2] & ((\WELCOME|Mux0~17_combout ))) # (!lat_Hcnt[2] & (\EMPTY|Mux15~31_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[2]),
	.datac(\EMPTY|Mux15~31_combout ),
	.datad(\WELCOME|Mux0~17_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~18 .lut_mask = "fc30";
defparam \WELCOME|Mux0~18 .operation_mode = "normal";
defparam \WELCOME|Mux0~18 .output_mode = "comb_only";
defparam \WELCOME|Mux0~18 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~18 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~18 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N7
maxii_lcell \lattice_Gcol~8 (
// Equation(s):
// \lattice_Gcol~8_combout  = ((lat_Hcnt[1] & ((\WELCOME|Mux0~18_combout ))) # (!lat_Hcnt[1] & (\WELCOME|Mux0~13_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[1]),
	.datac(\WELCOME|Mux0~13_combout ),
	.datad(\WELCOME|Mux0~18_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~8 .lut_mask = "fc30";
defparam \lattice_Gcol~8 .operation_mode = "normal";
defparam \lattice_Gcol~8 .output_mode = "comb_only";
defparam \lattice_Gcol~8 .register_cascade_mode = "off";
defparam \lattice_Gcol~8 .sum_lutc_input = "datac";
defparam \lattice_Gcol~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N8
maxii_lcell \lattice_Gcol~9 (
// Equation(s):
// \lattice_Gcol~9_combout  = (\onride~combout  & ((lat_Hcnt[0] & (\lattice_Gcol~8_combout )) # (!lat_Hcnt[0] & ((\WELCOME|Mux0~16_combout )))))

	.clk(gnd),
	.dataa(\lattice_Gcol~8_combout ),
	.datab(lat_Hcnt[0]),
	.datac(\onride~combout ),
	.datad(\WELCOME|Mux0~16_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~9 .lut_mask = "b080";
defparam \lattice_Gcol~9 .operation_mode = "normal";
defparam \lattice_Gcol~9 .output_mode = "comb_only";
defparam \lattice_Gcol~9 .register_cascade_mode = "off";
defparam \lattice_Gcol~9 .sum_lutc_input = "datac";
defparam \lattice_Gcol~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N9
maxii_lcell \WELCOME|lat_data_G~1 (
// Equation(s):
// \WELCOME|lat_data_G~1_combout  = (((!lat_Vcnt[0] & lat_Vcnt[2])) # (!lat_Vcnt[1]))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Vcnt[0]),
	.datac(lat_Vcnt[1]),
	.datad(lat_Vcnt[2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|lat_data_G~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|lat_data_G~1 .lut_mask = "3f0f";
defparam \WELCOME|lat_data_G~1 .operation_mode = "normal";
defparam \WELCOME|lat_data_G~1 .output_mode = "comb_only";
defparam \WELCOME|lat_data_G~1 .register_cascade_mode = "off";
defparam \WELCOME|lat_data_G~1 .sum_lutc_input = "datac";
defparam \WELCOME|lat_data_G~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N2
maxii_lcell \WELCOME|Mux0~19 (
// Equation(s):
// \WELCOME|Mux0~19_combout  = (\EMPTY|Mux15~24_combout  & (((\EMPTY|Mux15~23_combout )))) # (!\EMPTY|Mux15~24_combout  & ((\EMPTY|Mux15~23_combout  & ((\EMPTY|Mux15~32_combout ))) # (!\EMPTY|Mux15~23_combout  & (\WELCOME|Mux0~15_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~24_combout ),
	.datab(\WELCOME|Mux0~15_combout ),
	.datac(\EMPTY|Mux15~32_combout ),
	.datad(\EMPTY|Mux15~23_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~19 .lut_mask = "fa44";
defparam \WELCOME|Mux0~19 .operation_mode = "normal";
defparam \WELCOME|Mux0~19 .output_mode = "comb_only";
defparam \WELCOME|Mux0~19 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~19 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~19 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y7_N3
maxii_lcell \WELCOME|Mux0~20 (
// Equation(s):
// \WELCOME|Mux0~20_combout  = (\EMPTY|Mux15~24_combout  & ((\WELCOME|Mux0~19_combout  & (\WELCOME|lat_data_G~1_combout )) # (!\WELCOME|Mux0~19_combout  & ((\WELCOME|lat_data_G~0_combout ))))) # (!\EMPTY|Mux15~24_combout  & (((\WELCOME|Mux0~19_combout ))))

	.clk(gnd),
	.dataa(\EMPTY|Mux15~24_combout ),
	.datab(\WELCOME|lat_data_G~1_combout ),
	.datac(\WELCOME|lat_data_G~0_combout ),
	.datad(\WELCOME|Mux0~19_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\WELCOME|Mux0~20_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \WELCOME|Mux0~20 .lut_mask = "dda0";
defparam \WELCOME|Mux0~20 .operation_mode = "normal";
defparam \WELCOME|Mux0~20 .output_mode = "comb_only";
defparam \WELCOME|Mux0~20 .register_cascade_mode = "off";
defparam \WELCOME|Mux0~20 .sum_lutc_input = "datac";
defparam \WELCOME|Mux0~20 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N2
maxii_lcell \lattice_Gcol~10 (
// Equation(s):
// \lattice_Gcol~10_combout  = (\onride~combout  & ((lat_Hcnt[0] & ((\WELCOME|Mux0~20_combout ))) # (!lat_Hcnt[0] & (\lattice_Gcol~8_combout ))))

	.clk(gnd),
	.dataa(\lattice_Gcol~8_combout ),
	.datab(lat_Hcnt[0]),
	.datac(\onride~combout ),
	.datad(\WELCOME|Mux0~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~10 .lut_mask = "e020";
defparam \lattice_Gcol~10 .operation_mode = "normal";
defparam \lattice_Gcol~10 .output_mode = "comb_only";
defparam \lattice_Gcol~10 .register_cascade_mode = "off";
defparam \lattice_Gcol~10 .sum_lutc_input = "datac";
defparam \lattice_Gcol~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y9_N6
maxii_lcell \lattice_Gcol~11 (
// Equation(s):
// \lattice_Gcol~11_combout  = (lat_Vcnt[2] & (lat_Vcnt[1] & (lat_Vcnt[0]))) # (!lat_Vcnt[2] & ((lat_Vcnt[1] & ((!lat_Hcnt[3]) # (!lat_Vcnt[0]))) # (!lat_Vcnt[1] & (lat_Vcnt[0]))))

	.clk(gnd),
	.dataa(lat_Vcnt[2]),
	.datab(lat_Vcnt[1]),
	.datac(lat_Vcnt[0]),
	.datad(lat_Hcnt[3]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~11 .lut_mask = "94d4";
defparam \lattice_Gcol~11 .operation_mode = "normal";
defparam \lattice_Gcol~11 .output_mode = "comb_only";
defparam \lattice_Gcol~11 .register_cascade_mode = "off";
defparam \lattice_Gcol~11 .sum_lutc_input = "datac";
defparam \lattice_Gcol~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N4
maxii_lcell \lattice_Gcol~12 (
// Equation(s):
// \lattice_Gcol~12_combout  = ((lat_Hcnt[2] & (\lattice_Gcol~11_combout )) # (!lat_Hcnt[2] & ((\WELCOME|Mux0~12_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[2]),
	.datac(\lattice_Gcol~11_combout ),
	.datad(\WELCOME|Mux0~12_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~12 .lut_mask = "f3c0";
defparam \lattice_Gcol~12 .operation_mode = "normal";
defparam \lattice_Gcol~12 .output_mode = "comb_only";
defparam \lattice_Gcol~12 .register_cascade_mode = "off";
defparam \lattice_Gcol~12 .sum_lutc_input = "datac";
defparam \lattice_Gcol~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y7_N1
maxii_lcell \lattice_Gcol~13 (
// Equation(s):
// \lattice_Gcol~13_combout  = ((lat_Hcnt[1] & (\lattice_Gcol~12_combout )) # (!lat_Hcnt[1] & ((\WELCOME|Mux0~18_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(lat_Hcnt[1]),
	.datac(\lattice_Gcol~12_combout ),
	.datad(\WELCOME|Mux0~18_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~13 .lut_mask = "f3c0";
defparam \lattice_Gcol~13 .operation_mode = "normal";
defparam \lattice_Gcol~13 .output_mode = "comb_only";
defparam \lattice_Gcol~13 .register_cascade_mode = "off";
defparam \lattice_Gcol~13 .sum_lutc_input = "datac";
defparam \lattice_Gcol~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y6_N3
maxii_lcell \lattice_Gcol~14 (
// Equation(s):
// \lattice_Gcol~14_combout  = (\onride~combout  & ((lat_Hcnt[0] & (\lattice_Gcol~13_combout )) # (!lat_Hcnt[0] & ((\WELCOME|Mux0~20_combout )))))

	.clk(gnd),
	.dataa(\lattice_Gcol~13_combout ),
	.datab(lat_Hcnt[0]),
	.datac(\onride~combout ),
	.datad(\WELCOME|Mux0~20_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\lattice_Gcol~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \lattice_Gcol~14 .lut_mask = "b080";
defparam \lattice_Gcol~14 .operation_mode = "normal";
defparam \lattice_Gcol~14 .output_mode = "comb_only";
defparam \lattice_Gcol~14 .register_cascade_mode = "off";
defparam \lattice_Gcol~14 .sum_lutc_input = "datac";
defparam \lattice_Gcol~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y6_N0
maxii_lcell \LCD1602|cnt_500hz[0] (
// Equation(s):
// \LCD1602|cnt_500hz [0] = DFFEAS(((!\LCD1602|cnt_500hz [0])), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[0]~33  = CARRY(((\LCD1602|cnt_500hz [0])))
// \LCD1602|cnt_500hz[0]~33COUT1_42  = CARRY(((\LCD1602|cnt_500hz [0])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [0]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[0]~33 ),
	.cout1(\LCD1602|cnt_500hz[0]~33COUT1_42 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[0] .lut_mask = "33cc";
defparam \LCD1602|cnt_500hz[0] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[0] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[0] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[0] .sum_lutc_input = "datac";
defparam \LCD1602|cnt_500hz[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N1
maxii_lcell \LCD1602|cnt_500hz[1] (
// Equation(s):
// \LCD1602|cnt_500hz [1] = DFFEAS((\LCD1602|cnt_500hz [1] $ ((\LCD1602|cnt_500hz[0]~33 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[1]~35  = CARRY(((!\LCD1602|cnt_500hz[0]~33 ) # (!\LCD1602|cnt_500hz [1])))
// \LCD1602|cnt_500hz[1]~35COUT1_43  = CARRY(((!\LCD1602|cnt_500hz[0]~33COUT1_42 ) # (!\LCD1602|cnt_500hz [1])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [1]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\LCD1602|cnt_500hz[0]~33 ),
	.cin1(\LCD1602|cnt_500hz[0]~33COUT1_42 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [1]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[1]~35 ),
	.cout1(\LCD1602|cnt_500hz[1]~35COUT1_43 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[1] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[1] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[1] .lut_mask = "3c3f";
defparam \LCD1602|cnt_500hz[1] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[1] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[1] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[1] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N2
maxii_lcell \LCD1602|cnt_500hz[2] (
// Equation(s):
// \LCD1602|cnt_500hz [2] = DFFEAS((\LCD1602|cnt_500hz [2] $ ((!\LCD1602|cnt_500hz[1]~35 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[2]~37  = CARRY(((\LCD1602|cnt_500hz [2] & !\LCD1602|cnt_500hz[1]~35 )))
// \LCD1602|cnt_500hz[2]~37COUT1_44  = CARRY(((\LCD1602|cnt_500hz [2] & !\LCD1602|cnt_500hz[1]~35COUT1_43 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\LCD1602|cnt_500hz[1]~35 ),
	.cin1(\LCD1602|cnt_500hz[1]~35COUT1_43 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [2]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[2]~37 ),
	.cout1(\LCD1602|cnt_500hz[2]~37COUT1_44 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[2] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[2] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[2] .lut_mask = "c30c";
defparam \LCD1602|cnt_500hz[2] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[2] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[2] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[2] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N3
maxii_lcell \LCD1602|cnt_500hz[3] (
// Equation(s):
// \LCD1602|cnt_500hz [3] = DFFEAS(\LCD1602|cnt_500hz [3] $ ((((\LCD1602|cnt_500hz[2]~37 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[3]~39  = CARRY(((!\LCD1602|cnt_500hz[2]~37 )) # (!\LCD1602|cnt_500hz [3]))
// \LCD1602|cnt_500hz[3]~39COUT1_45  = CARRY(((!\LCD1602|cnt_500hz[2]~37COUT1_44 )) # (!\LCD1602|cnt_500hz [3]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\LCD1602|cnt_500hz[2]~37 ),
	.cin1(\LCD1602|cnt_500hz[2]~37COUT1_44 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [3]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[3]~39 ),
	.cout1(\LCD1602|cnt_500hz[3]~39COUT1_45 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[3] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[3] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[3] .lut_mask = "5a5f";
defparam \LCD1602|cnt_500hz[3] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[3] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[3] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[3] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N4
maxii_lcell \LCD1602|cnt_500hz[4] (
// Equation(s):
// \LCD1602|cnt_500hz [4] = DFFEAS(\LCD1602|cnt_500hz [4] $ ((((!\LCD1602|cnt_500hz[3]~39 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[4]~29  = CARRY((\LCD1602|cnt_500hz [4] & ((!\LCD1602|cnt_500hz[3]~39COUT1_45 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\LCD1602|cnt_500hz[3]~39 ),
	.cin1(\LCD1602|cnt_500hz[3]~39COUT1_45 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [4]),
	.cout(\LCD1602|cnt_500hz[4]~29 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_500hz[4] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[4] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[4] .lut_mask = "a50a";
defparam \LCD1602|cnt_500hz[4] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[4] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[4] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[4] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N5
maxii_lcell \LCD1602|cnt_500hz[5] (
// Equation(s):
// \LCD1602|cnt_500hz [5] = DFFEAS(\LCD1602|cnt_500hz [5] $ ((((\LCD1602|cnt_500hz[4]~29 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[5]~31  = CARRY(((!\LCD1602|cnt_500hz[4]~29 )) # (!\LCD1602|cnt_500hz [5]))
// \LCD1602|cnt_500hz[5]~31COUT1_46  = CARRY(((!\LCD1602|cnt_500hz[4]~29 )) # (!\LCD1602|cnt_500hz [5]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[4]~29 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [5]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[5]~31 ),
	.cout1(\LCD1602|cnt_500hz[5]~31COUT1_46 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[5] .cin_used = "true";
defparam \LCD1602|cnt_500hz[5] .lut_mask = "5a5f";
defparam \LCD1602|cnt_500hz[5] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[5] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[5] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[5] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N6
maxii_lcell \LCD1602|cnt_500hz[6] (
// Equation(s):
// \LCD1602|cnt_500hz [6] = DFFEAS(\LCD1602|cnt_500hz [6] $ ((((!(!\LCD1602|cnt_500hz[4]~29  & \LCD1602|cnt_500hz[5]~31 ) # (\LCD1602|cnt_500hz[4]~29  & \LCD1602|cnt_500hz[5]~31COUT1_46 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[6]~27  = CARRY((\LCD1602|cnt_500hz [6] & ((!\LCD1602|cnt_500hz[5]~31 ))))
// \LCD1602|cnt_500hz[6]~27COUT1_47  = CARRY((\LCD1602|cnt_500hz [6] & ((!\LCD1602|cnt_500hz[5]~31COUT1_46 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[4]~29 ),
	.cin0(\LCD1602|cnt_500hz[5]~31 ),
	.cin1(\LCD1602|cnt_500hz[5]~31COUT1_46 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [6]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[6]~27 ),
	.cout1(\LCD1602|cnt_500hz[6]~27COUT1_47 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[6] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[6] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[6] .cin_used = "true";
defparam \LCD1602|cnt_500hz[6] .lut_mask = "a50a";
defparam \LCD1602|cnt_500hz[6] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[6] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[6] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[6] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N7
maxii_lcell \LCD1602|cnt_500hz[7] (
// Equation(s):
// \LCD1602|cnt_500hz [7] = DFFEAS((\LCD1602|cnt_500hz [7] $ (((!\LCD1602|cnt_500hz[4]~29  & \LCD1602|cnt_500hz[6]~27 ) # (\LCD1602|cnt_500hz[4]~29  & \LCD1602|cnt_500hz[6]~27COUT1_47 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[7]~25  = CARRY(((!\LCD1602|cnt_500hz[6]~27 ) # (!\LCD1602|cnt_500hz [7])))
// \LCD1602|cnt_500hz[7]~25COUT1_48  = CARRY(((!\LCD1602|cnt_500hz[6]~27COUT1_47 ) # (!\LCD1602|cnt_500hz [7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[4]~29 ),
	.cin0(\LCD1602|cnt_500hz[6]~27 ),
	.cin1(\LCD1602|cnt_500hz[6]~27COUT1_47 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [7]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[7]~25 ),
	.cout1(\LCD1602|cnt_500hz[7]~25COUT1_48 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[7] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[7] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[7] .cin_used = "true";
defparam \LCD1602|cnt_500hz[7] .lut_mask = "3c3f";
defparam \LCD1602|cnt_500hz[7] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[7] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[7] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[7] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N8
maxii_lcell \LCD1602|cnt_500hz[8] (
// Equation(s):
// \LCD1602|cnt_500hz [8] = DFFEAS(\LCD1602|cnt_500hz [8] $ ((((!(!\LCD1602|cnt_500hz[4]~29  & \LCD1602|cnt_500hz[7]~25 ) # (\LCD1602|cnt_500hz[4]~29  & \LCD1602|cnt_500hz[7]~25COUT1_48 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[8]~21  = CARRY((\LCD1602|cnt_500hz [8] & ((!\LCD1602|cnt_500hz[7]~25 ))))
// \LCD1602|cnt_500hz[8]~21COUT1_49  = CARRY((\LCD1602|cnt_500hz [8] & ((!\LCD1602|cnt_500hz[7]~25COUT1_48 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[4]~29 ),
	.cin0(\LCD1602|cnt_500hz[7]~25 ),
	.cin1(\LCD1602|cnt_500hz[7]~25COUT1_48 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [8]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[8]~21 ),
	.cout1(\LCD1602|cnt_500hz[8]~21COUT1_49 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[8] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[8] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[8] .cin_used = "true";
defparam \LCD1602|cnt_500hz[8] .lut_mask = "a50a";
defparam \LCD1602|cnt_500hz[8] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[8] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[8] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[8] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y6_N9
maxii_lcell \LCD1602|cnt_500hz[9] (
// Equation(s):
// \LCD1602|cnt_500hz [9] = DFFEAS((\LCD1602|cnt_500hz [9] $ (((!\LCD1602|cnt_500hz[4]~29  & \LCD1602|cnt_500hz[8]~21 ) # (\LCD1602|cnt_500hz[4]~29  & \LCD1602|cnt_500hz[8]~21COUT1_49 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[9]~23  = CARRY(((!\LCD1602|cnt_500hz[8]~21COUT1_49 ) # (!\LCD1602|cnt_500hz [9])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[4]~29 ),
	.cin0(\LCD1602|cnt_500hz[8]~21 ),
	.cin1(\LCD1602|cnt_500hz[8]~21COUT1_49 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [9]),
	.cout(\LCD1602|cnt_500hz[9]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_500hz[9] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[9] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[9] .cin_used = "true";
defparam \LCD1602|cnt_500hz[9] .lut_mask = "3c3f";
defparam \LCD1602|cnt_500hz[9] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[9] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[9] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[9] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N0
maxii_lcell \LCD1602|cnt_500hz[10] (
// Equation(s):
// \LCD1602|cnt_500hz [10] = DFFEAS((\LCD1602|cnt_500hz [10] $ ((!\LCD1602|cnt_500hz[9]~23 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[10]~11  = CARRY(((\LCD1602|cnt_500hz [10] & !\LCD1602|cnt_500hz[9]~23 )))
// \LCD1602|cnt_500hz[10]~11COUT1_50  = CARRY(((\LCD1602|cnt_500hz [10] & !\LCD1602|cnt_500hz[9]~23 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[9]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [10]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[10]~11 ),
	.cout1(\LCD1602|cnt_500hz[10]~11COUT1_50 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[10] .cin_used = "true";
defparam \LCD1602|cnt_500hz[10] .lut_mask = "c30c";
defparam \LCD1602|cnt_500hz[10] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[10] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[10] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[10] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N1
maxii_lcell \LCD1602|cnt_500hz[11] (
// Equation(s):
// \LCD1602|cnt_500hz [11] = DFFEAS((\LCD1602|cnt_500hz [11] $ (((!\LCD1602|cnt_500hz[9]~23  & \LCD1602|cnt_500hz[10]~11 ) # (\LCD1602|cnt_500hz[9]~23  & \LCD1602|cnt_500hz[10]~11COUT1_50 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[11]~13  = CARRY(((!\LCD1602|cnt_500hz[10]~11 ) # (!\LCD1602|cnt_500hz [11])))
// \LCD1602|cnt_500hz[11]~13COUT1_51  = CARRY(((!\LCD1602|cnt_500hz[10]~11COUT1_50 ) # (!\LCD1602|cnt_500hz [11])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [11]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[9]~23 ),
	.cin0(\LCD1602|cnt_500hz[10]~11 ),
	.cin1(\LCD1602|cnt_500hz[10]~11COUT1_50 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [11]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[11]~13 ),
	.cout1(\LCD1602|cnt_500hz[11]~13COUT1_51 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[11] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[11] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[11] .cin_used = "true";
defparam \LCD1602|cnt_500hz[11] .lut_mask = "3c3f";
defparam \LCD1602|cnt_500hz[11] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[11] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[11] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[11] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N2
maxii_lcell \LCD1602|cnt_500hz[12] (
// Equation(s):
// \LCD1602|cnt_500hz [12] = DFFEAS((\LCD1602|cnt_500hz [12] $ ((!(!\LCD1602|cnt_500hz[9]~23  & \LCD1602|cnt_500hz[11]~13 ) # (\LCD1602|cnt_500hz[9]~23  & \LCD1602|cnt_500hz[11]~13COUT1_51 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[12]~15  = CARRY(((\LCD1602|cnt_500hz [12] & !\LCD1602|cnt_500hz[11]~13 )))
// \LCD1602|cnt_500hz[12]~15COUT1_52  = CARRY(((\LCD1602|cnt_500hz [12] & !\LCD1602|cnt_500hz[11]~13COUT1_51 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [12]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[9]~23 ),
	.cin0(\LCD1602|cnt_500hz[11]~13 ),
	.cin1(\LCD1602|cnt_500hz[11]~13COUT1_51 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [12]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[12]~15 ),
	.cout1(\LCD1602|cnt_500hz[12]~15COUT1_52 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[12] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[12] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[12] .cin_used = "true";
defparam \LCD1602|cnt_500hz[12] .lut_mask = "c30c";
defparam \LCD1602|cnt_500hz[12] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[12] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[12] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[12] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N3
maxii_lcell \LCD1602|cnt_500hz[13] (
// Equation(s):
// \LCD1602|cnt_500hz [13] = DFFEAS(\LCD1602|cnt_500hz [13] $ (((((!\LCD1602|cnt_500hz[9]~23  & \LCD1602|cnt_500hz[12]~15 ) # (\LCD1602|cnt_500hz[9]~23  & \LCD1602|cnt_500hz[12]~15COUT1_52 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[13]~17  = CARRY(((!\LCD1602|cnt_500hz[12]~15 )) # (!\LCD1602|cnt_500hz [13]))
// \LCD1602|cnt_500hz[13]~17COUT1_53  = CARRY(((!\LCD1602|cnt_500hz[12]~15COUT1_52 )) # (!\LCD1602|cnt_500hz [13]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[9]~23 ),
	.cin0(\LCD1602|cnt_500hz[12]~15 ),
	.cin1(\LCD1602|cnt_500hz[12]~15COUT1_52 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [13]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[13]~17 ),
	.cout1(\LCD1602|cnt_500hz[13]~17COUT1_53 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[13] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[13] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[13] .cin_used = "true";
defparam \LCD1602|cnt_500hz[13] .lut_mask = "5a5f";
defparam \LCD1602|cnt_500hz[13] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[13] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[13] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[13] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N4
maxii_lcell \LCD1602|cnt_500hz[14] (
// Equation(s):
// \LCD1602|cnt_500hz [14] = DFFEAS(\LCD1602|cnt_500hz [14] $ ((((!(!\LCD1602|cnt_500hz[9]~23  & \LCD1602|cnt_500hz[13]~17 ) # (\LCD1602|cnt_500hz[9]~23  & \LCD1602|cnt_500hz[13]~17COUT1_53 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[14]~1  = CARRY((\LCD1602|cnt_500hz [14] & ((!\LCD1602|cnt_500hz[13]~17COUT1_53 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[9]~23 ),
	.cin0(\LCD1602|cnt_500hz[13]~17 ),
	.cin1(\LCD1602|cnt_500hz[13]~17COUT1_53 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [14]),
	.cout(\LCD1602|cnt_500hz[14]~1 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_500hz[14] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[14] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[14] .cin_used = "true";
defparam \LCD1602|cnt_500hz[14] .lut_mask = "a50a";
defparam \LCD1602|cnt_500hz[14] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[14] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[14] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[14] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N5
maxii_lcell \LCD1602|cnt_500hz[15] (
// Equation(s):
// \LCD1602|cnt_500hz [15] = DFFEAS(\LCD1602|cnt_500hz [15] $ ((((\LCD1602|cnt_500hz[14]~1 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[15]~19  = CARRY(((!\LCD1602|cnt_500hz[14]~1 )) # (!\LCD1602|cnt_500hz [15]))
// \LCD1602|cnt_500hz[15]~19COUT1_54  = CARRY(((!\LCD1602|cnt_500hz[14]~1 )) # (!\LCD1602|cnt_500hz [15]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[14]~1 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [15]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[15]~19 ),
	.cout1(\LCD1602|cnt_500hz[15]~19COUT1_54 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[15] .cin_used = "true";
defparam \LCD1602|cnt_500hz[15] .lut_mask = "5a5f";
defparam \LCD1602|cnt_500hz[15] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[15] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[15] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[15] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N6
maxii_lcell \LCD1602|cnt_500hz[16] (
// Equation(s):
// \LCD1602|cnt_500hz [16] = DFFEAS(\LCD1602|cnt_500hz [16] $ ((((!(!\LCD1602|cnt_500hz[14]~1  & \LCD1602|cnt_500hz[15]~19 ) # (\LCD1602|cnt_500hz[14]~1  & \LCD1602|cnt_500hz[15]~19COUT1_54 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[16]~3  = CARRY((\LCD1602|cnt_500hz [16] & ((!\LCD1602|cnt_500hz[15]~19 ))))
// \LCD1602|cnt_500hz[16]~3COUT1_55  = CARRY((\LCD1602|cnt_500hz [16] & ((!\LCD1602|cnt_500hz[15]~19COUT1_54 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[14]~1 ),
	.cin0(\LCD1602|cnt_500hz[15]~19 ),
	.cin1(\LCD1602|cnt_500hz[15]~19COUT1_54 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [16]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[16]~3 ),
	.cout1(\LCD1602|cnt_500hz[16]~3COUT1_55 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[16] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[16] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[16] .cin_used = "true";
defparam \LCD1602|cnt_500hz[16] .lut_mask = "a50a";
defparam \LCD1602|cnt_500hz[16] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[16] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[16] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[16] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y6_N0
maxii_lcell \LCD1602|Equal1~2 (
// Equation(s):
// \LCD1602|Equal1~2_combout  = (((\LCD1602|cnt_500hz [14]) # (!\LCD1602|cnt_500hz [10])) # (!\LCD1602|cnt_500hz [16])) # (!\LCD1602|cnt_500hz [15])

	.clk(gnd),
	.dataa(\LCD1602|cnt_500hz [15]),
	.datab(\LCD1602|cnt_500hz [16]),
	.datac(\LCD1602|cnt_500hz [14]),
	.datad(\LCD1602|cnt_500hz [10]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal1~2 .lut_mask = "f7ff";
defparam \LCD1602|Equal1~2 .operation_mode = "normal";
defparam \LCD1602|Equal1~2 .output_mode = "comb_only";
defparam \LCD1602|Equal1~2 .register_cascade_mode = "off";
defparam \LCD1602|Equal1~2 .sum_lutc_input = "datac";
defparam \LCD1602|Equal1~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y6_N2
maxii_lcell \LCD1602|Equal1~4 (
// Equation(s):
// \LCD1602|Equal1~4_combout  = (((\LCD1602|cnt_500hz [5]) # (!\LCD1602|cnt_500hz [4])) # (!\LCD1602|cnt_500hz [3])) # (!\LCD1602|cnt_500hz [2])

	.clk(gnd),
	.dataa(\LCD1602|cnt_500hz [2]),
	.datab(\LCD1602|cnt_500hz [3]),
	.datac(\LCD1602|cnt_500hz [5]),
	.datad(\LCD1602|cnt_500hz [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal1~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal1~4 .lut_mask = "f7ff";
defparam \LCD1602|Equal1~4 .operation_mode = "normal";
defparam \LCD1602|Equal1~4 .output_mode = "comb_only";
defparam \LCD1602|Equal1~4 .register_cascade_mode = "off";
defparam \LCD1602|Equal1~4 .sum_lutc_input = "datac";
defparam \LCD1602|Equal1~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y6_N7
maxii_lcell \LCD1602|Equal1~5 (
// Equation(s):
// \LCD1602|Equal1~5_combout  = ((\LCD1602|cnt_500hz [8]) # ((\LCD1602|cnt_500hz [6]) # (!\LCD1602|cnt_500hz [7]))) # (!\LCD1602|cnt_500hz [9])

	.clk(gnd),
	.dataa(\LCD1602|cnt_500hz [9]),
	.datab(\LCD1602|cnt_500hz [8]),
	.datac(\LCD1602|cnt_500hz [6]),
	.datad(\LCD1602|cnt_500hz [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal1~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal1~5 .lut_mask = "fdff";
defparam \LCD1602|Equal1~5 .operation_mode = "normal";
defparam \LCD1602|Equal1~5 .output_mode = "comb_only";
defparam \LCD1602|Equal1~5 .register_cascade_mode = "off";
defparam \LCD1602|Equal1~5 .sum_lutc_input = "datac";
defparam \LCD1602|Equal1~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y6_N9
maxii_lcell \LCD1602|Equal1~1 (
// Equation(s):
// \LCD1602|Equal1~1_combout  = ((!\LCD1602|cnt_500hz [13] & (!\LCD1602|cnt_500hz [11] & !\LCD1602|cnt_500hz [12])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [13]),
	.datac(\LCD1602|cnt_500hz [11]),
	.datad(\LCD1602|cnt_500hz [12]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal1~1 .lut_mask = "0003";
defparam \LCD1602|Equal1~1 .operation_mode = "normal";
defparam \LCD1602|Equal1~1 .output_mode = "comb_only";
defparam \LCD1602|Equal1~1 .register_cascade_mode = "off";
defparam \LCD1602|Equal1~1 .sum_lutc_input = "datac";
defparam \LCD1602|Equal1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y6_N7
maxii_lcell \LCD1602|cnt_500hz[17] (
// Equation(s):
// \LCD1602|cnt_500hz [17] = DFFEAS((\LCD1602|cnt_500hz [17] $ (((!\LCD1602|cnt_500hz[14]~1  & \LCD1602|cnt_500hz[16]~3 ) # (\LCD1602|cnt_500hz[14]~1  & \LCD1602|cnt_500hz[16]~3COUT1_55 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[17]~5  = CARRY(((!\LCD1602|cnt_500hz[16]~3 ) # (!\LCD1602|cnt_500hz [17])))
// \LCD1602|cnt_500hz[17]~5COUT1_56  = CARRY(((!\LCD1602|cnt_500hz[16]~3COUT1_55 ) # (!\LCD1602|cnt_500hz [17])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[14]~1 ),
	.cin0(\LCD1602|cnt_500hz[16]~3 ),
	.cin1(\LCD1602|cnt_500hz[16]~3COUT1_55 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [17]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[17]~5 ),
	.cout1(\LCD1602|cnt_500hz[17]~5COUT1_56 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[17] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[17] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[17] .cin_used = "true";
defparam \LCD1602|cnt_500hz[17] .lut_mask = "3c3f";
defparam \LCD1602|cnt_500hz[17] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[17] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[17] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[17] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N8
maxii_lcell \LCD1602|cnt_500hz[18] (
// Equation(s):
// \LCD1602|cnt_500hz [18] = DFFEAS(\LCD1602|cnt_500hz [18] $ ((((!(!\LCD1602|cnt_500hz[14]~1  & \LCD1602|cnt_500hz[17]~5 ) # (\LCD1602|cnt_500hz[14]~1  & \LCD1602|cnt_500hz[17]~5COUT1_56 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )
// \LCD1602|cnt_500hz[18]~7  = CARRY((\LCD1602|cnt_500hz [18] & ((!\LCD1602|cnt_500hz[17]~5 ))))
// \LCD1602|cnt_500hz[18]~7COUT1_57  = CARRY((\LCD1602|cnt_500hz [18] & ((!\LCD1602|cnt_500hz[17]~5COUT1_56 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_500hz [18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[14]~1 ),
	.cin0(\LCD1602|cnt_500hz[17]~5 ),
	.cin1(\LCD1602|cnt_500hz[17]~5COUT1_56 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [18]),
	.cout(),
	.cout0(\LCD1602|cnt_500hz[18]~7 ),
	.cout1(\LCD1602|cnt_500hz[18]~7COUT1_57 ));
// synopsys translate_off
defparam \LCD1602|cnt_500hz[18] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[18] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[18] .cin_used = "true";
defparam \LCD1602|cnt_500hz[18] .lut_mask = "a50a";
defparam \LCD1602|cnt_500hz[18] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_500hz[18] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[18] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[18] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y6_N9
maxii_lcell \LCD1602|cnt_500hz[19] (
// Equation(s):
// \LCD1602|cnt_500hz [19] = DFFEAS((((!\LCD1602|cnt_500hz[14]~1  & \LCD1602|cnt_500hz[18]~7 ) # (\LCD1602|cnt_500hz[14]~1  & \LCD1602|cnt_500hz[18]~7COUT1_57 ) $ (\LCD1602|cnt_500hz [19]))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , 
// \LCD1602|cnt_500hz[1]~40_combout , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\LCD1602|cnt_500hz [19]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(\LCD1602|cnt_500hz[1]~40_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\LCD1602|cnt_500hz[14]~1 ),
	.cin0(\LCD1602|cnt_500hz[18]~7 ),
	.cin1(\LCD1602|cnt_500hz[18]~7COUT1_57 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_500hz [19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_500hz[19] .cin0_used = "true";
defparam \LCD1602|cnt_500hz[19] .cin1_used = "true";
defparam \LCD1602|cnt_500hz[19] .cin_used = "true";
defparam \LCD1602|cnt_500hz[19] .lut_mask = "0ff0";
defparam \LCD1602|cnt_500hz[19] .operation_mode = "normal";
defparam \LCD1602|cnt_500hz[19] .output_mode = "reg_only";
defparam \LCD1602|cnt_500hz[19] .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[19] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_500hz[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y6_N4
maxii_lcell \LCD1602|Equal1~0 (
// Equation(s):
// \LCD1602|Equal1~0_combout  = ((!\LCD1602|cnt_500hz [17] & (!\LCD1602|cnt_500hz [18] & !\LCD1602|cnt_500hz [19])))

	.clk(gnd),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [17]),
	.datac(\LCD1602|cnt_500hz [18]),
	.datad(\LCD1602|cnt_500hz [19]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal1~0 .lut_mask = "0003";
defparam \LCD1602|Equal1~0 .operation_mode = "normal";
defparam \LCD1602|Equal1~0 .output_mode = "comb_only";
defparam \LCD1602|Equal1~0 .register_cascade_mode = "off";
defparam \LCD1602|Equal1~0 .sum_lutc_input = "datac";
defparam \LCD1602|Equal1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y6_N8
maxii_lcell \LCD1602|Equal1~3 (
// Equation(s):
// \LCD1602|Equal1~3_combout  = (((!\LCD1602|Equal1~0_combout ) # (!\LCD1602|Equal1~1_combout )) # (!\LCD1602|cnt_500hz [1])) # (!\LCD1602|cnt_500hz [0])

	.clk(gnd),
	.dataa(\LCD1602|cnt_500hz [0]),
	.datab(\LCD1602|cnt_500hz [1]),
	.datac(\LCD1602|Equal1~1_combout ),
	.datad(\LCD1602|Equal1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal1~3 .lut_mask = "7fff";
defparam \LCD1602|Equal1~3 .operation_mode = "normal";
defparam \LCD1602|Equal1~3 .output_mode = "comb_only";
defparam \LCD1602|Equal1~3 .register_cascade_mode = "off";
defparam \LCD1602|Equal1~3 .sum_lutc_input = "datac";
defparam \LCD1602|Equal1~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y6_N3
maxii_lcell \LCD1602|Equal1~6 (
// Equation(s):
// \LCD1602|Equal1~6_combout  = (!\LCD1602|Equal1~2_combout  & (!\LCD1602|Equal1~4_combout  & (!\LCD1602|Equal1~5_combout  & !\LCD1602|Equal1~3_combout )))

	.clk(gnd),
	.dataa(\LCD1602|Equal1~2_combout ),
	.datab(\LCD1602|Equal1~4_combout ),
	.datac(\LCD1602|Equal1~5_combout ),
	.datad(\LCD1602|Equal1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal1~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal1~6 .lut_mask = "0001";
defparam \LCD1602|Equal1~6 .operation_mode = "normal";
defparam \LCD1602|Equal1~6 .output_mode = "comb_only";
defparam \LCD1602|Equal1~6 .register_cascade_mode = "off";
defparam \LCD1602|Equal1~6 .sum_lutc_input = "datac";
defparam \LCD1602|Equal1~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y6_N3
maxii_lcell \LCD1602|cnt_20ms[0] (
// Equation(s):
// \LCD1602|cnt_20ms [0] = DFFEAS((((!\LCD1602|Equal0~6_combout ))) # (!\LCD1602|cnt_20ms [0]), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , , , , , )

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(\LCD1602|Equal0~6_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_20ms[0] .lut_mask = "55ff";
defparam \LCD1602|cnt_20ms[0] .operation_mode = "normal";
defparam \LCD1602|cnt_20ms[0] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[0] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[0] .sum_lutc_input = "datac";
defparam \LCD1602|cnt_20ms[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N1
maxii_lcell \LCD1602|cnt_20ms[1] (
// Equation(s):
// \LCD1602|cnt_20ms [1] = DFFEAS(\LCD1602|cnt_20ms [1] $ ((\LCD1602|cnt_20ms [0])), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[1]~9  = CARRY((\LCD1602|cnt_20ms [1] & (\LCD1602|cnt_20ms [0])))
// \LCD1602|cnt_20ms[1]~9COUT1_40  = CARRY((\LCD1602|cnt_20ms [1] & (\LCD1602|cnt_20ms [0])))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [1]),
	.datab(\LCD1602|cnt_20ms [0]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [1]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[1]~9 ),
	.cout1(\LCD1602|cnt_20ms[1]~9COUT1_40 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[1] .lut_mask = "6688";
defparam \LCD1602|cnt_20ms[1] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[1] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[1] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[1] .sum_lutc_input = "datac";
defparam \LCD1602|cnt_20ms[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N2
maxii_lcell \LCD1602|cnt_20ms[2] (
// Equation(s):
// \LCD1602|cnt_20ms [2] = DFFEAS((\LCD1602|cnt_20ms [2] $ ((\LCD1602|cnt_20ms[1]~9 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[2]~11  = CARRY(((!\LCD1602|cnt_20ms[1]~9 ) # (!\LCD1602|cnt_20ms [2])))
// \LCD1602|cnt_20ms[2]~11COUT1_41  = CARRY(((!\LCD1602|cnt_20ms[1]~9COUT1_40 ) # (!\LCD1602|cnt_20ms [2])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_20ms [2]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(gnd),
	.cin0(\LCD1602|cnt_20ms[1]~9 ),
	.cin1(\LCD1602|cnt_20ms[1]~9COUT1_40 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [2]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[2]~11 ),
	.cout1(\LCD1602|cnt_20ms[2]~11COUT1_41 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[2] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[2] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[2] .lut_mask = "3c3f";
defparam \LCD1602|cnt_20ms[2] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[2] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[2] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[2] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N3
maxii_lcell \LCD1602|cnt_20ms[3] (
// Equation(s):
// \LCD1602|cnt_20ms [3] = DFFEAS(\LCD1602|cnt_20ms [3] $ ((((!\LCD1602|cnt_20ms[2]~11 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[3]~13  = CARRY((\LCD1602|cnt_20ms [3] & ((!\LCD1602|cnt_20ms[2]~11 ))))
// \LCD1602|cnt_20ms[3]~13COUT1_42  = CARRY((\LCD1602|cnt_20ms [3] & ((!\LCD1602|cnt_20ms[2]~11COUT1_41 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(gnd),
	.cin0(\LCD1602|cnt_20ms[2]~11 ),
	.cin1(\LCD1602|cnt_20ms[2]~11COUT1_41 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [3]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[3]~13 ),
	.cout1(\LCD1602|cnt_20ms[3]~13COUT1_42 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[3] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[3] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[3] .lut_mask = "a50a";
defparam \LCD1602|cnt_20ms[3] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[3] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[3] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[3] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N4
maxii_lcell \LCD1602|cnt_20ms[4] (
// Equation(s):
// \LCD1602|cnt_20ms [4] = DFFEAS(\LCD1602|cnt_20ms [4] $ ((((\LCD1602|cnt_20ms[3]~13 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[4]~15  = CARRY(((!\LCD1602|cnt_20ms[3]~13COUT1_42 )) # (!\LCD1602|cnt_20ms [4]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(gnd),
	.cin0(\LCD1602|cnt_20ms[3]~13 ),
	.cin1(\LCD1602|cnt_20ms[3]~13COUT1_42 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [4]),
	.cout(\LCD1602|cnt_20ms[4]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_20ms[4] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[4] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[4] .lut_mask = "5a5f";
defparam \LCD1602|cnt_20ms[4] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[4] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[4] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[4] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N5
maxii_lcell \LCD1602|cnt_20ms[5] (
// Equation(s):
// \LCD1602|cnt_20ms [5] = DFFEAS(\LCD1602|cnt_20ms [5] $ ((((!\LCD1602|cnt_20ms[4]~15 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[5]~17  = CARRY((\LCD1602|cnt_20ms [5] & ((!\LCD1602|cnt_20ms[4]~15 ))))
// \LCD1602|cnt_20ms[5]~17COUT1_43  = CARRY((\LCD1602|cnt_20ms [5] & ((!\LCD1602|cnt_20ms[4]~15 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[4]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [5]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[5]~17 ),
	.cout1(\LCD1602|cnt_20ms[5]~17COUT1_43 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[5] .cin_used = "true";
defparam \LCD1602|cnt_20ms[5] .lut_mask = "a50a";
defparam \LCD1602|cnt_20ms[5] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[5] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[5] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[5] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N6
maxii_lcell \LCD1602|cnt_20ms[6] (
// Equation(s):
// \LCD1602|cnt_20ms [6] = DFFEAS(\LCD1602|cnt_20ms [6] $ (((((!\LCD1602|cnt_20ms[4]~15  & \LCD1602|cnt_20ms[5]~17 ) # (\LCD1602|cnt_20ms[4]~15  & \LCD1602|cnt_20ms[5]~17COUT1_43 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[6]~19  = CARRY(((!\LCD1602|cnt_20ms[5]~17 )) # (!\LCD1602|cnt_20ms [6]))
// \LCD1602|cnt_20ms[6]~19COUT1_44  = CARRY(((!\LCD1602|cnt_20ms[5]~17COUT1_43 )) # (!\LCD1602|cnt_20ms [6]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [6]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[4]~15 ),
	.cin0(\LCD1602|cnt_20ms[5]~17 ),
	.cin1(\LCD1602|cnt_20ms[5]~17COUT1_43 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [6]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[6]~19 ),
	.cout1(\LCD1602|cnt_20ms[6]~19COUT1_44 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[6] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[6] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[6] .cin_used = "true";
defparam \LCD1602|cnt_20ms[6] .lut_mask = "5a5f";
defparam \LCD1602|cnt_20ms[6] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[6] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[6] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[6] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N7
maxii_lcell \LCD1602|cnt_20ms[7] (
// Equation(s):
// \LCD1602|cnt_20ms [7] = DFFEAS((\LCD1602|cnt_20ms [7] $ ((!(!\LCD1602|cnt_20ms[4]~15  & \LCD1602|cnt_20ms[6]~19 ) # (\LCD1602|cnt_20ms[4]~15  & \LCD1602|cnt_20ms[6]~19COUT1_44 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[7]~21  = CARRY(((\LCD1602|cnt_20ms [7] & !\LCD1602|cnt_20ms[6]~19 )))
// \LCD1602|cnt_20ms[7]~21COUT1_45  = CARRY(((\LCD1602|cnt_20ms [7] & !\LCD1602|cnt_20ms[6]~19COUT1_44 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_20ms [7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[4]~15 ),
	.cin0(\LCD1602|cnt_20ms[6]~19 ),
	.cin1(\LCD1602|cnt_20ms[6]~19COUT1_44 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [7]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[7]~21 ),
	.cout1(\LCD1602|cnt_20ms[7]~21COUT1_45 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[7] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[7] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[7] .cin_used = "true";
defparam \LCD1602|cnt_20ms[7] .lut_mask = "c30c";
defparam \LCD1602|cnt_20ms[7] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[7] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[7] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[7] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[7] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N8
maxii_lcell \LCD1602|cnt_20ms[8] (
// Equation(s):
// \LCD1602|cnt_20ms [8] = DFFEAS(\LCD1602|cnt_20ms [8] $ (((((!\LCD1602|cnt_20ms[4]~15  & \LCD1602|cnt_20ms[7]~21 ) # (\LCD1602|cnt_20ms[4]~15  & \LCD1602|cnt_20ms[7]~21COUT1_45 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[8]~25  = CARRY(((!\LCD1602|cnt_20ms[7]~21 )) # (!\LCD1602|cnt_20ms [8]))
// \LCD1602|cnt_20ms[8]~25COUT1_46  = CARRY(((!\LCD1602|cnt_20ms[7]~21COUT1_45 )) # (!\LCD1602|cnt_20ms [8]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [8]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[4]~15 ),
	.cin0(\LCD1602|cnt_20ms[7]~21 ),
	.cin1(\LCD1602|cnt_20ms[7]~21COUT1_45 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [8]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[8]~25 ),
	.cout1(\LCD1602|cnt_20ms[8]~25COUT1_46 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[8] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[8] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[8] .cin_used = "true";
defparam \LCD1602|cnt_20ms[8] .lut_mask = "5a5f";
defparam \LCD1602|cnt_20ms[8] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[8] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[8] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[8] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[8] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N9
maxii_lcell \LCD1602|cnt_20ms[9] (
// Equation(s):
// \LCD1602|cnt_20ms [9] = DFFEAS((\LCD1602|cnt_20ms [9] $ ((!(!\LCD1602|cnt_20ms[4]~15  & \LCD1602|cnt_20ms[8]~25 ) # (\LCD1602|cnt_20ms[4]~15  & \LCD1602|cnt_20ms[8]~25COUT1_46 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[9]~23  = CARRY(((\LCD1602|cnt_20ms [9] & !\LCD1602|cnt_20ms[8]~25COUT1_46 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_20ms [9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[4]~15 ),
	.cin0(\LCD1602|cnt_20ms[8]~25 ),
	.cin1(\LCD1602|cnt_20ms[8]~25COUT1_46 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [9]),
	.cout(\LCD1602|cnt_20ms[9]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_20ms[9] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[9] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[9] .cin_used = "true";
defparam \LCD1602|cnt_20ms[9] .lut_mask = "c30c";
defparam \LCD1602|cnt_20ms[9] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[9] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[9] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[9] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[9] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N0
maxii_lcell \LCD1602|cnt_20ms[10] (
// Equation(s):
// \LCD1602|cnt_20ms [10] = DFFEAS((\LCD1602|cnt_20ms [10] $ ((\LCD1602|cnt_20ms[9]~23 ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[10]~27  = CARRY(((!\LCD1602|cnt_20ms[9]~23 ) # (!\LCD1602|cnt_20ms [10])))
// \LCD1602|cnt_20ms[10]~27COUT1_47  = CARRY(((!\LCD1602|cnt_20ms[9]~23 ) # (!\LCD1602|cnt_20ms [10])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_20ms [10]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[9]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [10]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[10]~27 ),
	.cout1(\LCD1602|cnt_20ms[10]~27COUT1_47 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[10] .cin_used = "true";
defparam \LCD1602|cnt_20ms[10] .lut_mask = "3c3f";
defparam \LCD1602|cnt_20ms[10] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[10] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[10] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[10] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[10] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N1
maxii_lcell \LCD1602|cnt_20ms[11] (
// Equation(s):
// \LCD1602|cnt_20ms [11] = DFFEAS((\LCD1602|cnt_20ms [11] $ ((!(!\LCD1602|cnt_20ms[9]~23  & \LCD1602|cnt_20ms[10]~27 ) # (\LCD1602|cnt_20ms[9]~23  & \LCD1602|cnt_20ms[10]~27COUT1_47 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[11]~29  = CARRY(((\LCD1602|cnt_20ms [11] & !\LCD1602|cnt_20ms[10]~27 )))
// \LCD1602|cnt_20ms[11]~29COUT1_48  = CARRY(((\LCD1602|cnt_20ms [11] & !\LCD1602|cnt_20ms[10]~27COUT1_47 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_20ms [11]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[9]~23 ),
	.cin0(\LCD1602|cnt_20ms[10]~27 ),
	.cin1(\LCD1602|cnt_20ms[10]~27COUT1_47 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [11]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[11]~29 ),
	.cout1(\LCD1602|cnt_20ms[11]~29COUT1_48 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[11] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[11] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[11] .cin_used = "true";
defparam \LCD1602|cnt_20ms[11] .lut_mask = "c30c";
defparam \LCD1602|cnt_20ms[11] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[11] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[11] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[11] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[11] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N2
maxii_lcell \LCD1602|cnt_20ms[12] (
// Equation(s):
// \LCD1602|cnt_20ms [12] = DFFEAS((\LCD1602|cnt_20ms [12] $ (((!\LCD1602|cnt_20ms[9]~23  & \LCD1602|cnt_20ms[11]~29 ) # (\LCD1602|cnt_20ms[9]~23  & \LCD1602|cnt_20ms[11]~29COUT1_48 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[12]~33  = CARRY(((!\LCD1602|cnt_20ms[11]~29 ) # (!\LCD1602|cnt_20ms [12])))
// \LCD1602|cnt_20ms[12]~33COUT1_49  = CARRY(((!\LCD1602|cnt_20ms[11]~29COUT1_48 ) # (!\LCD1602|cnt_20ms [12])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_20ms [12]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[9]~23 ),
	.cin0(\LCD1602|cnt_20ms[11]~29 ),
	.cin1(\LCD1602|cnt_20ms[11]~29COUT1_48 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [12]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[12]~33 ),
	.cout1(\LCD1602|cnt_20ms[12]~33COUT1_49 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[12] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[12] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[12] .cin_used = "true";
defparam \LCD1602|cnt_20ms[12] .lut_mask = "3c3f";
defparam \LCD1602|cnt_20ms[12] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[12] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[12] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[12] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[12] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N3
maxii_lcell \LCD1602|cnt_20ms[13] (
// Equation(s):
// \LCD1602|cnt_20ms [13] = DFFEAS(\LCD1602|cnt_20ms [13] $ ((((!(!\LCD1602|cnt_20ms[9]~23  & \LCD1602|cnt_20ms[12]~33 ) # (\LCD1602|cnt_20ms[9]~23  & \LCD1602|cnt_20ms[12]~33COUT1_49 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[13]~35  = CARRY((\LCD1602|cnt_20ms [13] & ((!\LCD1602|cnt_20ms[12]~33 ))))
// \LCD1602|cnt_20ms[13]~35COUT1_50  = CARRY((\LCD1602|cnt_20ms [13] & ((!\LCD1602|cnt_20ms[12]~33COUT1_49 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[9]~23 ),
	.cin0(\LCD1602|cnt_20ms[12]~33 ),
	.cin1(\LCD1602|cnt_20ms[12]~33COUT1_49 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [13]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[13]~35 ),
	.cout1(\LCD1602|cnt_20ms[13]~35COUT1_50 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[13] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[13] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[13] .cin_used = "true";
defparam \LCD1602|cnt_20ms[13] .lut_mask = "a50a";
defparam \LCD1602|cnt_20ms[13] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[13] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[13] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[13] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[13] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N4
maxii_lcell \LCD1602|cnt_20ms[14] (
// Equation(s):
// \LCD1602|cnt_20ms [14] = DFFEAS(\LCD1602|cnt_20ms [14] $ (((((!\LCD1602|cnt_20ms[9]~23  & \LCD1602|cnt_20ms[13]~35 ) # (\LCD1602|cnt_20ms[9]~23  & \LCD1602|cnt_20ms[13]~35COUT1_50 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[14]~31  = CARRY(((!\LCD1602|cnt_20ms[13]~35COUT1_50 )) # (!\LCD1602|cnt_20ms [14]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [14]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[9]~23 ),
	.cin0(\LCD1602|cnt_20ms[13]~35 ),
	.cin1(\LCD1602|cnt_20ms[13]~35COUT1_50 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [14]),
	.cout(\LCD1602|cnt_20ms[14]~31 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_20ms[14] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[14] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[14] .cin_used = "true";
defparam \LCD1602|cnt_20ms[14] .lut_mask = "5a5f";
defparam \LCD1602|cnt_20ms[14] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[14] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[14] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[14] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[14] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N5
maxii_lcell \LCD1602|cnt_20ms[15] (
// Equation(s):
// \LCD1602|cnt_20ms [15] = DFFEAS(\LCD1602|cnt_20ms [15] $ ((((!\LCD1602|cnt_20ms[14]~31 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[15]~37  = CARRY((\LCD1602|cnt_20ms [15] & ((!\LCD1602|cnt_20ms[14]~31 ))))
// \LCD1602|cnt_20ms[15]~37COUT1_51  = CARRY((\LCD1602|cnt_20ms [15] & ((!\LCD1602|cnt_20ms[14]~31 ))))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[14]~31 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [15]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[15]~37 ),
	.cout1(\LCD1602|cnt_20ms[15]~37COUT1_51 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[15] .cin_used = "true";
defparam \LCD1602|cnt_20ms[15] .lut_mask = "a50a";
defparam \LCD1602|cnt_20ms[15] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[15] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[15] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[15] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[15] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y6_N6
maxii_lcell \LCD1602|Equal0~5 (
// Equation(s):
// \LCD1602|Equal0~5_combout  = (\LCD1602|cnt_20ms [14] & (!\LCD1602|cnt_20ms [15] & (!\LCD1602|cnt_20ms [12] & !\LCD1602|cnt_20ms [13])))

	.clk(gnd),
	.dataa(\LCD1602|cnt_20ms [14]),
	.datab(\LCD1602|cnt_20ms [15]),
	.datac(\LCD1602|cnt_20ms [12]),
	.datad(\LCD1602|cnt_20ms [13]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal0~5 .lut_mask = "0002";
defparam \LCD1602|Equal0~5 .operation_mode = "normal";
defparam \LCD1602|Equal0~5 .output_mode = "comb_only";
defparam \LCD1602|Equal0~5 .register_cascade_mode = "off";
defparam \LCD1602|Equal0~5 .sum_lutc_input = "datac";
defparam \LCD1602|Equal0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N6
maxii_lcell \LCD1602|cnt_20ms[16] (
// Equation(s):
// \LCD1602|cnt_20ms [16] = DFFEAS(\LCD1602|cnt_20ms [16] $ (((((!\LCD1602|cnt_20ms[14]~31  & \LCD1602|cnt_20ms[15]~37 ) # (\LCD1602|cnt_20ms[14]~31  & \LCD1602|cnt_20ms[15]~37COUT1_51 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[16]~1  = CARRY(((!\LCD1602|cnt_20ms[15]~37 )) # (!\LCD1602|cnt_20ms [16]))
// \LCD1602|cnt_20ms[16]~1COUT1_52  = CARRY(((!\LCD1602|cnt_20ms[15]~37COUT1_51 )) # (!\LCD1602|cnt_20ms [16]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [16]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[14]~31 ),
	.cin0(\LCD1602|cnt_20ms[15]~37 ),
	.cin1(\LCD1602|cnt_20ms[15]~37COUT1_51 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [16]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[16]~1 ),
	.cout1(\LCD1602|cnt_20ms[16]~1COUT1_52 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[16] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[16] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[16] .cin_used = "true";
defparam \LCD1602|cnt_20ms[16] .lut_mask = "5a5f";
defparam \LCD1602|cnt_20ms[16] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[16] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[16] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[16] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[16] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N7
maxii_lcell \LCD1602|cnt_20ms[17] (
// Equation(s):
// \LCD1602|cnt_20ms [17] = DFFEAS((\LCD1602|cnt_20ms [17] $ ((!(!\LCD1602|cnt_20ms[14]~31  & \LCD1602|cnt_20ms[16]~1 ) # (\LCD1602|cnt_20ms[14]~31  & \LCD1602|cnt_20ms[16]~1COUT1_52 )))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[17]~3  = CARRY(((\LCD1602|cnt_20ms [17] & !\LCD1602|cnt_20ms[16]~1 )))
// \LCD1602|cnt_20ms[17]~3COUT1_53  = CARRY(((\LCD1602|cnt_20ms [17] & !\LCD1602|cnt_20ms[16]~1COUT1_52 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|cnt_20ms [17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[14]~31 ),
	.cin0(\LCD1602|cnt_20ms[16]~1 ),
	.cin1(\LCD1602|cnt_20ms[16]~1COUT1_52 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [17]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[17]~3 ),
	.cout1(\LCD1602|cnt_20ms[17]~3COUT1_53 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[17] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[17] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[17] .cin_used = "true";
defparam \LCD1602|cnt_20ms[17] .lut_mask = "c30c";
defparam \LCD1602|cnt_20ms[17] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[17] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[17] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[17] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[17] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N8
maxii_lcell \LCD1602|cnt_20ms[18] (
// Equation(s):
// \LCD1602|cnt_20ms [18] = DFFEAS(\LCD1602|cnt_20ms [18] $ (((((!\LCD1602|cnt_20ms[14]~31  & \LCD1602|cnt_20ms[17]~3 ) # (\LCD1602|cnt_20ms[14]~31  & \LCD1602|cnt_20ms[17]~3COUT1_53 ))))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )
// \LCD1602|cnt_20ms[18]~5  = CARRY(((!\LCD1602|cnt_20ms[17]~3 )) # (!\LCD1602|cnt_20ms [18]))
// \LCD1602|cnt_20ms[18]~5COUT1_54  = CARRY(((!\LCD1602|cnt_20ms[17]~3COUT1_53 )) # (!\LCD1602|cnt_20ms [18]))

	.clk(\clk~combout ),
	.dataa(\LCD1602|cnt_20ms [18]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[14]~31 ),
	.cin0(\LCD1602|cnt_20ms[17]~3 ),
	.cin1(\LCD1602|cnt_20ms[17]~3COUT1_53 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [18]),
	.cout(),
	.cout0(\LCD1602|cnt_20ms[18]~5 ),
	.cout1(\LCD1602|cnt_20ms[18]~5COUT1_54 ));
// synopsys translate_off
defparam \LCD1602|cnt_20ms[18] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[18] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[18] .cin_used = "true";
defparam \LCD1602|cnt_20ms[18] .lut_mask = "5a5f";
defparam \LCD1602|cnt_20ms[18] .operation_mode = "arithmetic";
defparam \LCD1602|cnt_20ms[18] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[18] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[18] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[18] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y5_N9
maxii_lcell \LCD1602|cnt_20ms[19] (
// Equation(s):
// \LCD1602|cnt_20ms [19] = DFFEAS((((!\LCD1602|cnt_20ms[14]~31  & \LCD1602|cnt_20ms[18]~5 ) # (\LCD1602|cnt_20ms[14]~31  & \LCD1602|cnt_20ms[18]~5COUT1_54 ) $ (!\LCD1602|cnt_20ms [19]))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , 
// \LCD1602|Equal0~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\LCD1602|cnt_20ms [19]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal0~6_combout ),
	.cin(\LCD1602|cnt_20ms[14]~31 ),
	.cin0(\LCD1602|cnt_20ms[18]~5 ),
	.cin1(\LCD1602|cnt_20ms[18]~5COUT1_54 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|cnt_20ms [19]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_20ms[19] .cin0_used = "true";
defparam \LCD1602|cnt_20ms[19] .cin1_used = "true";
defparam \LCD1602|cnt_20ms[19] .cin_used = "true";
defparam \LCD1602|cnt_20ms[19] .lut_mask = "f00f";
defparam \LCD1602|cnt_20ms[19] .operation_mode = "normal";
defparam \LCD1602|cnt_20ms[19] .output_mode = "reg_only";
defparam \LCD1602|cnt_20ms[19] .register_cascade_mode = "off";
defparam \LCD1602|cnt_20ms[19] .sum_lutc_input = "cin";
defparam \LCD1602|cnt_20ms[19] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y5_N6
maxii_lcell \LCD1602|Equal0~0 (
// Equation(s):
// \LCD1602|Equal0~0_combout  = (\LCD1602|cnt_20ms [19] & (\LCD1602|cnt_20ms [17] & (\LCD1602|cnt_20ms [16] & \LCD1602|cnt_20ms [18])))

	.clk(gnd),
	.dataa(\LCD1602|cnt_20ms [19]),
	.datab(\LCD1602|cnt_20ms [17]),
	.datac(\LCD1602|cnt_20ms [16]),
	.datad(\LCD1602|cnt_20ms [18]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal0~0 .lut_mask = "8000";
defparam \LCD1602|Equal0~0 .operation_mode = "normal";
defparam \LCD1602|Equal0~0 .output_mode = "comb_only";
defparam \LCD1602|Equal0~0 .register_cascade_mode = "off";
defparam \LCD1602|Equal0~0 .sum_lutc_input = "datac";
defparam \LCD1602|Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y6_N5
maxii_lcell \LCD1602|Equal0~4 (
// Equation(s):
// \LCD1602|Equal0~4_combout  = (!\LCD1602|cnt_20ms [10] & (!\LCD1602|cnt_20ms [11] & (\LCD1602|cnt_20ms [9] & !\LCD1602|cnt_20ms [8])))

	.clk(gnd),
	.dataa(\LCD1602|cnt_20ms [10]),
	.datab(\LCD1602|cnt_20ms [11]),
	.datac(\LCD1602|cnt_20ms [9]),
	.datad(\LCD1602|cnt_20ms [8]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal0~4 .lut_mask = "0010";
defparam \LCD1602|Equal0~4 .operation_mode = "normal";
defparam \LCD1602|Equal0~4 .output_mode = "comb_only";
defparam \LCD1602|Equal0~4 .register_cascade_mode = "off";
defparam \LCD1602|Equal0~4 .sum_lutc_input = "datac";
defparam \LCD1602|Equal0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y5_N0
maxii_lcell \LCD1602|Equal0~2 (
// Equation(s):
// \LCD1602|Equal0~2_combout  = (\LCD1602|cnt_20ms [5] & (!\LCD1602|cnt_20ms [7] & (!\LCD1602|cnt_20ms [6] & \LCD1602|cnt_20ms [4])))

	.clk(gnd),
	.dataa(\LCD1602|cnt_20ms [5]),
	.datab(\LCD1602|cnt_20ms [7]),
	.datac(\LCD1602|cnt_20ms [6]),
	.datad(\LCD1602|cnt_20ms [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal0~2 .lut_mask = "0200";
defparam \LCD1602|Equal0~2 .operation_mode = "normal";
defparam \LCD1602|Equal0~2 .output_mode = "comb_only";
defparam \LCD1602|Equal0~2 .register_cascade_mode = "off";
defparam \LCD1602|Equal0~2 .sum_lutc_input = "datac";
defparam \LCD1602|Equal0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y6_N8
maxii_lcell \LCD1602|Equal0~1 (
// Equation(s):
// \LCD1602|Equal0~1_combout  = (((\LCD1602|cnt_20ms [1] & \LCD1602|cnt_20ms [0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\LCD1602|cnt_20ms [1]),
	.datad(\LCD1602|cnt_20ms [0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal0~1 .lut_mask = "f000";
defparam \LCD1602|Equal0~1 .operation_mode = "normal";
defparam \LCD1602|Equal0~1 .output_mode = "comb_only";
defparam \LCD1602|Equal0~1 .register_cascade_mode = "off";
defparam \LCD1602|Equal0~1 .sum_lutc_input = "datac";
defparam \LCD1602|Equal0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y6_N1
maxii_lcell \LCD1602|Equal0~3 (
// Equation(s):
// \LCD1602|Equal0~3_combout  = (\LCD1602|cnt_20ms [2] & (\LCD1602|cnt_20ms [3] & (\LCD1602|Equal0~2_combout  & \LCD1602|Equal0~1_combout )))

	.clk(gnd),
	.dataa(\LCD1602|cnt_20ms [2]),
	.datab(\LCD1602|cnt_20ms [3]),
	.datac(\LCD1602|Equal0~2_combout ),
	.datad(\LCD1602|Equal0~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal0~3 .lut_mask = "8000";
defparam \LCD1602|Equal0~3 .operation_mode = "normal";
defparam \LCD1602|Equal0~3 .output_mode = "comb_only";
defparam \LCD1602|Equal0~3 .register_cascade_mode = "off";
defparam \LCD1602|Equal0~3 .sum_lutc_input = "datac";
defparam \LCD1602|Equal0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y6_N2
maxii_lcell \LCD1602|Equal0~6 (
// Equation(s):
// \LCD1602|Equal0~6_combout  = (((!\LCD1602|Equal0~3_combout ) # (!\LCD1602|Equal0~4_combout )) # (!\LCD1602|Equal0~0_combout )) # (!\LCD1602|Equal0~5_combout )

	.clk(gnd),
	.dataa(\LCD1602|Equal0~5_combout ),
	.datab(\LCD1602|Equal0~0_combout ),
	.datac(\LCD1602|Equal0~4_combout ),
	.datad(\LCD1602|Equal0~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Equal0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Equal0~6 .lut_mask = "7fff";
defparam \LCD1602|Equal0~6 .operation_mode = "normal";
defparam \LCD1602|Equal0~6 .output_mode = "comb_only";
defparam \LCD1602|Equal0~6 .register_cascade_mode = "off";
defparam \LCD1602|Equal0~6 .sum_lutc_input = "datac";
defparam \LCD1602|Equal0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y6_N7
maxii_lcell \LCD1602|cnt_500hz[1]~40 (
// Equation(s):
// \LCD1602|cnt_500hz[1]~40_combout  = (((\LCD1602|Equal1~6_combout ) # (\LCD1602|Equal0~6_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\LCD1602|Equal1~6_combout ),
	.datad(\LCD1602|Equal0~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|cnt_500hz[1]~40_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|cnt_500hz[1]~40 .lut_mask = "fff0";
defparam \LCD1602|cnt_500hz[1]~40 .operation_mode = "normal";
defparam \LCD1602|cnt_500hz[1]~40 .output_mode = "comb_only";
defparam \LCD1602|cnt_500hz[1]~40 .register_cascade_mode = "off";
defparam \LCD1602|cnt_500hz[1]~40 .sum_lutc_input = "datac";
defparam \LCD1602|cnt_500hz[1]~40 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y6_N5
maxii_lcell \LCD1602|LessThan0~0 (
// Equation(s):
// \LCD1602|LessThan0~0_combout  = (\LCD1602|cnt_500hz [7]) # ((\LCD1602|cnt_500hz [6] & ((\LCD1602|cnt_500hz [5]) # (\LCD1602|cnt_500hz [4]))))

	.clk(gnd),
	.dataa(\LCD1602|cnt_500hz [5]),
	.datab(\LCD1602|cnt_500hz [7]),
	.datac(\LCD1602|cnt_500hz [6]),
	.datad(\LCD1602|cnt_500hz [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|LessThan0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LessThan0~0 .lut_mask = "fcec";
defparam \LCD1602|LessThan0~0 .operation_mode = "normal";
defparam \LCD1602|LessThan0~0 .output_mode = "comb_only";
defparam \LCD1602|LessThan0~0 .register_cascade_mode = "off";
defparam \LCD1602|LessThan0~0 .sum_lutc_input = "datac";
defparam \LCD1602|LessThan0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y6_N6
maxii_lcell \LCD1602|LessThan0~1 (
// Equation(s):
// \LCD1602|LessThan0~1_combout  = ((\LCD1602|cnt_500hz [8] & (\LCD1602|cnt_500hz [9] & \LCD1602|LessThan0~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\LCD1602|cnt_500hz [8]),
	.datac(\LCD1602|cnt_500hz [9]),
	.datad(\LCD1602|LessThan0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|LessThan0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LessThan0~1 .lut_mask = "c000";
defparam \LCD1602|LessThan0~1 .operation_mode = "normal";
defparam \LCD1602|LessThan0~1 .output_mode = "comb_only";
defparam \LCD1602|LessThan0~1 .register_cascade_mode = "off";
defparam \LCD1602|LessThan0~1 .sum_lutc_input = "datac";
defparam \LCD1602|LessThan0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y6_N9
maxii_lcell \LCD1602|LessThan0~2 (
// Equation(s):
// \LCD1602|LessThan0~2_combout  = (\LCD1602|cnt_500hz [15] & ((\LCD1602|LessThan0~1_combout ) # ((\LCD1602|cnt_500hz [10]) # (!\LCD1602|Equal1~1_combout ))))

	.clk(gnd),
	.dataa(\LCD1602|LessThan0~1_combout ),
	.datab(\LCD1602|cnt_500hz [15]),
	.datac(\LCD1602|cnt_500hz [10]),
	.datad(\LCD1602|Equal1~1_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|LessThan0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LessThan0~2 .lut_mask = "c8cc";
defparam \LCD1602|LessThan0~2 .operation_mode = "normal";
defparam \LCD1602|LessThan0~2 .output_mode = "comb_only";
defparam \LCD1602|LessThan0~2 .register_cascade_mode = "off";
defparam \LCD1602|LessThan0~2 .sum_lutc_input = "datac";
defparam \LCD1602|LessThan0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y6_N4
maxii_lcell \LCD1602|LessThan0~3 (
// Equation(s):
// \LCD1602|LessThan0~3_combout  = (\LCD1602|cnt_500hz [16]) # (((\LCD1602|cnt_500hz [14] & \LCD1602|LessThan0~2_combout )) # (!\LCD1602|Equal1~0_combout ))

	.clk(gnd),
	.dataa(\LCD1602|cnt_500hz [14]),
	.datab(\LCD1602|cnt_500hz [16]),
	.datac(\LCD1602|LessThan0~2_combout ),
	.datad(\LCD1602|Equal1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|LessThan0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LessThan0~3 .lut_mask = "ecff";
defparam \LCD1602|LessThan0~3 .operation_mode = "normal";
defparam \LCD1602|LessThan0~3 .output_mode = "comb_only";
defparam \LCD1602|LessThan0~3 .register_cascade_mode = "off";
defparam \LCD1602|LessThan0~3 .sum_lutc_input = "datac";
defparam \LCD1602|LessThan0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y8_N5
maxii_lcell \LCD1602|c_state.ROW2_4 (
// Equation(s):
// \LCD1602|Selector7~10  = ((!\double~combout  & (\onride~combout  & !\seg_data[1][0]~regout ))) # (!C1_c_state.ROW2_4)
// \LCD1602|c_state.ROW2_4~regout  = DFFEAS(\LCD1602|Selector7~10 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_3~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\double~combout ),
	.datab(\onride~combout ),
	.datac(\LCD1602|c_state.ROW2_3~regout ),
	.datad(\seg_data[1][0]~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~10 ),
	.regout(\LCD1602|c_state.ROW2_4~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_4 .lut_mask = "0f4f";
defparam \LCD1602|c_state.ROW2_4 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_4 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_4 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_4 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_4 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y9_N2
maxii_lcell \people2_price[0][0]~1 (
// Equation(s):
// \people2_price[0][0]~1_combout  = ((\always1~0_combout  & (!\rst~combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\always1~0_combout ),
	.datac(\rst~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\people2_price[0][0]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[0][0]~1 .lut_mask = "0c0c";
defparam \people2_price[0][0]~1 .operation_mode = "normal";
defparam \people2_price[0][0]~1 .output_mode = "comb_only";
defparam \people2_price[0][0]~1 .register_cascade_mode = "off";
defparam \people2_price[0][0]~1 .sum_lutc_input = "datac";
defparam \people2_price[0][0]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y8_N7
maxii_lcell \people1_price[1][0] (
// Equation(s):
// \people1_price[1][0]~regout  = DFFEAS((((!\seg_data[1][0]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~1_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\seg_data[1][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people1_price[1][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[1][0] .lut_mask = "00ff";
defparam \people1_price[1][0] .operation_mode = "normal";
defparam \people1_price[1][0] .output_mode = "reg_only";
defparam \people1_price[1][0] .register_cascade_mode = "off";
defparam \people1_price[1][0] .sum_lutc_input = "datac";
defparam \people1_price[1][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y10_N2
maxii_lcell \comb~1 (
// Equation(s):
// \comb~1_combout  = (\onride~combout  & (((!\double~combout ))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\double~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\comb~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \comb~1 .lut_mask = "00aa";
defparam \comb~1 .operation_mode = "normal";
defparam \comb~1 .output_mode = "comb_only";
defparam \comb~1 .register_cascade_mode = "off";
defparam \comb~1 .sum_lutc_input = "datac";
defparam \comb~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y7_N2
maxii_lcell \LCD1602|c_state.IDLE (
// Equation(s):
// \LCD1602|c_state.IDLE~regout  = DFFEAS(VCC, GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|c_state.IDLE~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.IDLE .lut_mask = "ffff";
defparam \LCD1602|c_state.IDLE .operation_mode = "normal";
defparam \LCD1602|c_state.IDLE .output_mode = "reg_only";
defparam \LCD1602|c_state.IDLE .register_cascade_mode = "off";
defparam \LCD1602|c_state.IDLE .sum_lutc_input = "datac";
defparam \LCD1602|c_state.IDLE .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y7_N7
maxii_lcell \LCD1602|c_state.SET_FUNCTION (
// Equation(s):
// \LCD1602|c_state.SET_FUNCTION~regout  = DFFEAS((((!\LCD1602|c_state.IDLE~regout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\LCD1602|c_state.IDLE~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|c_state.SET_FUNCTION~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.SET_FUNCTION .lut_mask = "00ff";
defparam \LCD1602|c_state.SET_FUNCTION .operation_mode = "normal";
defparam \LCD1602|c_state.SET_FUNCTION .output_mode = "reg_only";
defparam \LCD1602|c_state.SET_FUNCTION .register_cascade_mode = "off";
defparam \LCD1602|c_state.SET_FUNCTION .sum_lutc_input = "datac";
defparam \LCD1602|c_state.SET_FUNCTION .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y9_N9
maxii_lcell \LCD1602|c_state.ROW1_1 (
// Equation(s):
// \LCD1602|Selector6~3  = (C1_c_state.ROW1_1) # ((\LCD1602|c_state.ROW1_9~regout  & (\mile_v~combout [1] $ (\mile_v~combout [0]))))
// \LCD1602|c_state.ROW1_1~regout  = DFFEAS(\LCD1602|Selector6~3 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_0~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\mile_v~combout [1]),
	.datab(\mile_v~combout [0]),
	.datac(\LCD1602|c_state.ROW1_0~regout ),
	.datad(\LCD1602|c_state.ROW1_9~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~3 ),
	.regout(\LCD1602|c_state.ROW1_1~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_1 .lut_mask = "f6f0";
defparam \LCD1602|c_state.ROW1_1 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_1 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_1 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_1 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_1 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y7_N8
maxii_lcell \LCD1602|c_state.ROW1_2 (
// Equation(s):
// \LCD1602|Selector5~10  = (\LCD1602|c_state.ROW2_0~regout ) # ((C1_c_state.ROW1_2) # ((\LCD1602|c_state.ROW1_ADDR~regout  & \seg_data[7][2]~regout )))
// \LCD1602|c_state.ROW1_2~regout  = DFFEAS(\LCD1602|Selector5~10 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_1~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW1_ADDR~regout ),
	.datab(\LCD1602|c_state.ROW2_0~regout ),
	.datac(\LCD1602|c_state.ROW1_1~regout ),
	.datad(\seg_data[7][2]~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~10 ),
	.regout(\LCD1602|c_state.ROW1_2~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_2 .lut_mask = "fefc";
defparam \LCD1602|c_state.ROW1_2 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_2 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_2 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_2 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_2 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y8_N5
maxii_lcell \LCD1602|c_state.ROW1_3 (
// Equation(s):
// \LCD1602|Selector7~0  = (\onride~combout  & (!C1_c_state.ROW1_3 & ((!\LCD1602|c_state.ROW1_ADDR~regout ) # (!\seg_data[7][0]~regout )))) # (!\onride~combout  & (((!\LCD1602|c_state.ROW1_ADDR~regout ))))
// \LCD1602|c_state.ROW1_3~regout  = DFFEAS(\LCD1602|Selector7~0 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_2~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\onride~combout ),
	.datab(\seg_data[7][0]~regout ),
	.datac(\LCD1602|c_state.ROW1_2~regout ),
	.datad(\LCD1602|c_state.ROW1_ADDR~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~0 ),
	.regout(\LCD1602|c_state.ROW1_3~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_3 .lut_mask = "025f";
defparam \LCD1602|c_state.ROW1_3 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_3 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_3 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_3 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_3 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y9_N4
maxii_lcell \LCD1602|c_state.ROW2_C (
// Equation(s):
// \LCD1602|Selector2~4  = (\onride~combout ) # ((!\LCD1602|c_state.ROW2_D~regout  & (!\LCD1602|c_state.ROW1_3~regout  & !C1_c_state.ROW2_C)))
// \LCD1602|c_state.ROW2_C~regout  = DFFEAS(\LCD1602|Selector2~4 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_B~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW2_D~regout ),
	.datab(\LCD1602|c_state.ROW1_3~regout ),
	.datac(\LCD1602|c_state.ROW2_B~regout ),
	.datad(\onride~combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~4 ),
	.regout(\LCD1602|c_state.ROW2_C~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_C .lut_mask = "ff01";
defparam \LCD1602|c_state.ROW2_C .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_C .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_C .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_C .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_C .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y10_N9
maxii_lcell \LCD1602|c_state.ROW2_D (
// Equation(s):
// \LCD1602|Selector3~0  = (\double~combout  & (((C1_c_state.ROW2_D) # (\LCD1602|c_state.ROW2_C~regout )))) # (!\double~combout  & (!\onride~combout  & ((C1_c_state.ROW2_D) # (\LCD1602|c_state.ROW2_C~regout ))))
// \LCD1602|c_state.ROW2_D~regout  = DFFEAS(\LCD1602|Selector3~0 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_C~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\double~combout ),
	.datab(\onride~combout ),
	.datac(\LCD1602|c_state.ROW2_C~regout ),
	.datad(\LCD1602|c_state.ROW2_C~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector3~0 ),
	.regout(\LCD1602|c_state.ROW2_D~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_D .lut_mask = "bbb0";
defparam \LCD1602|c_state.ROW2_D .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_D .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_D .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_D .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_D .synch_mode = "on";
// synopsys translate_on

// Location: LC_X12_Y9_N9
maxii_lcell \people2_price[0][0]~0 (
// Equation(s):
// \people2_price[0][0]~0_combout  = (!sub_cnt[1] & (\always1~0_combout  & (!sub_cnt[0] & !\rst~combout )))

	.clk(gnd),
	.dataa(sub_cnt[1]),
	.datab(\always1~0_combout ),
	.datac(sub_cnt[0]),
	.datad(\rst~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\people2_price[0][0]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[0][0]~0 .lut_mask = "0004";
defparam \people2_price[0][0]~0 .operation_mode = "normal";
defparam \people2_price[0][0]~0 .output_mode = "comb_only";
defparam \people2_price[0][0]~0 .register_cascade_mode = "off";
defparam \people2_price[0][0]~0 .sum_lutc_input = "datac";
defparam \people2_price[0][0]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y10_N2
maxii_lcell \people2_price[0][0] (
// Equation(s):
// \people2_price[0][0]~regout  = DFFEAS((((!\seg_data[0][0]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~0_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people2_price[0][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[0][0] .lut_mask = "00ff";
defparam \people2_price[0][0] .operation_mode = "normal";
defparam \people2_price[0][0] .output_mode = "reg_only";
defparam \people2_price[0][0] .register_cascade_mode = "off";
defparam \people2_price[0][0] .sum_lutc_input = "datac";
defparam \people2_price[0][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y10_N7
maxii_lcell \LCD1602|c_state.ROW2_E (
// Equation(s):
// \LCD1602|Selector7~4  = ((\double~combout  & (\onride~combout  & \people2_price[0][0]~regout ))) # (!C1_c_state.ROW2_E)
// \LCD1602|c_state.ROW2_E~regout  = DFFEAS(\LCD1602|Selector7~4 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_D~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\double~combout ),
	.datab(\onride~combout ),
	.datac(\LCD1602|c_state.ROW2_D~regout ),
	.datad(\people2_price[0][0]~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~4 ),
	.regout(\LCD1602|c_state.ROW2_E~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_E .lut_mask = "8f0f";
defparam \LCD1602|c_state.ROW2_E .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_E .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_E .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_E .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_E .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N3
maxii_lcell \LCD1602|c_state.ROW2_F (
// Equation(s):
// \LCD1602|c_state.ROW2_F~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_E~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\LCD1602|c_state.ROW2_E~regout ),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|c_state.ROW2_F~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_F .lut_mask = "0000";
defparam \LCD1602|c_state.ROW2_F .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_F .output_mode = "reg_only";
defparam \LCD1602|c_state.ROW2_F .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_F .sum_lutc_input = "datac";
defparam \LCD1602|c_state.ROW2_F .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N0
maxii_lcell \LCD1602|c_state.DISP_ON (
// Equation(s):
// \LCD1602|n_state~0  = (((C1_c_state.DISP_ON) # (\LCD1602|c_state.ROW2_F~regout )))
// \LCD1602|c_state.DISP_ON~regout  = DFFEAS(\LCD1602|n_state~0 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ENTRY_MODE~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\LCD1602|c_state.ENTRY_MODE~regout ),
	.datad(\LCD1602|c_state.ROW2_F~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|n_state~0 ),
	.regout(\LCD1602|c_state.DISP_ON~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.DISP_ON .lut_mask = "fff0";
defparam \LCD1602|c_state.DISP_ON .operation_mode = "normal";
defparam \LCD1602|c_state.DISP_ON .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.DISP_ON .register_cascade_mode = "off";
defparam \LCD1602|c_state.DISP_ON .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.DISP_ON .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N1
maxii_lcell \LCD1602|c_state.DISP_CLEAR (
// Equation(s):
// \LCD1602|Selector2~0  = (!\LCD1602|c_state.ENTRY_MODE~regout  & (!\LCD1602|c_state.SET_FUNCTION~regout  & (!C1_c_state.DISP_CLEAR & !\LCD1602|n_state~0 )))
// \LCD1602|c_state.DISP_CLEAR~regout  = DFFEAS(\LCD1602|Selector2~0 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.DISP_OFF~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ENTRY_MODE~regout ),
	.datab(\LCD1602|c_state.SET_FUNCTION~regout ),
	.datac(\LCD1602|c_state.DISP_OFF~regout ),
	.datad(\LCD1602|n_state~0 ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~0 ),
	.regout(\LCD1602|c_state.DISP_CLEAR~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.DISP_CLEAR .lut_mask = "0001";
defparam \LCD1602|c_state.DISP_CLEAR .operation_mode = "normal";
defparam \LCD1602|c_state.DISP_CLEAR .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.DISP_CLEAR .register_cascade_mode = "off";
defparam \LCD1602|c_state.DISP_CLEAR .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.DISP_CLEAR .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N5
maxii_lcell \people2_price[2][3] (
// Equation(s):
// \LCD1602|Selector4~15  = ((\double~combout  & (people2_price[2][3] & \LCD1602|c_state.ROW2_C~regout ))) # (!\LCD1602|c_state.IDLE~regout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\double~combout ),
	.datab(\LCD1602|c_state.IDLE~regout ),
	.datac(\seg_data[2][3]~regout ),
	.datad(\LCD1602|c_state.ROW2_C~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~15 ),
	.regout(\people2_price[2][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[2][3] .lut_mask = "b333";
defparam \people2_price[2][3] .operation_mode = "normal";
defparam \people2_price[2][3] .output_mode = "comb_only";
defparam \people2_price[2][3] .register_cascade_mode = "off";
defparam \people2_price[2][3] .sum_lutc_input = "qfbk";
defparam \people2_price[2][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N6
maxii_lcell \LCD1602|c_state.ENTRY_MODE (
// Equation(s):
// \LCD1602|Selector4~16  = (\LCD1602|c_state.ROW1_B~regout ) # ((\LCD1602|c_state.SET_FUNCTION~regout ) # ((C1_c_state.ENTRY_MODE) # (\LCD1602|Selector4~15 )))
// \LCD1602|c_state.ENTRY_MODE~regout  = DFFEAS(\LCD1602|Selector4~16 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.DISP_CLEAR~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW1_B~regout ),
	.datab(\LCD1602|c_state.SET_FUNCTION~regout ),
	.datac(\LCD1602|c_state.DISP_CLEAR~regout ),
	.datad(\LCD1602|Selector4~15 ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~16 ),
	.regout(\LCD1602|c_state.ENTRY_MODE~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ENTRY_MODE .lut_mask = "fffe";
defparam \LCD1602|c_state.ENTRY_MODE .operation_mode = "normal";
defparam \LCD1602|c_state.ENTRY_MODE .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ENTRY_MODE .register_cascade_mode = "off";
defparam \LCD1602|c_state.ENTRY_MODE .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ENTRY_MODE .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y9_N7
maxii_lcell \LCD1602|c_state.ROW1_4 (
// Equation(s):
// \LCD1602|Selector6~4  = (\seg_data[6][1]~regout  & ((\LCD1602|c_state.ROW1_0~regout ) # ((C1_c_state.ROW1_4 & \seg_data[5][1]~regout )))) # (!\seg_data[6][1]~regout  & (((C1_c_state.ROW1_4 & \seg_data[5][1]~regout ))))
// \LCD1602|c_state.ROW1_4~regout  = DFFEAS(\LCD1602|Selector6~4 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_3~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\seg_data[6][1]~regout ),
	.datab(\LCD1602|c_state.ROW1_0~regout ),
	.datac(\LCD1602|c_state.ROW1_3~regout ),
	.datad(\seg_data[5][1]~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~4 ),
	.regout(\LCD1602|c_state.ROW1_4~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_4 .lut_mask = "f888";
defparam \LCD1602|c_state.ROW1_4 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_4 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_4 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_4 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_4 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X10_Y8_N9
maxii_lcell \LCD1602|c_state.ROW1_5 (
// Equation(s):
// \LCD1602|Selector7~1  = (!\LCD1602|c_state.ROW1_E~regout  & (((\seg_data[4][0]~regout ) # (!C1_c_state.ROW1_5)) # (!\onride~combout )))
// \LCD1602|c_state.ROW1_5~regout  = DFFEAS(\LCD1602|Selector7~1 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_4~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\onride~combout ),
	.datab(\seg_data[4][0]~regout ),
	.datac(\LCD1602|c_state.ROW1_4~regout ),
	.datad(\LCD1602|c_state.ROW1_E~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~1 ),
	.regout(\LCD1602|c_state.ROW1_5~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_5 .lut_mask = "00df";
defparam \LCD1602|c_state.ROW1_5 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_5 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_5 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_5 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_5 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y9_N6
maxii_lcell \LCD1602|c_state.ROW1_6 (
// Equation(s):
// \LCD1602|Selector6~2  = (\LCD1602|c_state.ROW1_5~regout  & ((\seg_data[4][1]~regout ) # ((\seg_data[3][1]~regout  & C1_c_state.ROW1_6)))) # (!\LCD1602|c_state.ROW1_5~regout  & (\seg_data[3][1]~regout  & (C1_c_state.ROW1_6)))
// \LCD1602|c_state.ROW1_6~regout  = DFFEAS(\LCD1602|Selector6~2 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_5~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW1_5~regout ),
	.datab(\seg_data[3][1]~regout ),
	.datac(\LCD1602|c_state.ROW1_5~regout ),
	.datad(\seg_data[4][1]~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~2 ),
	.regout(\LCD1602|c_state.ROW1_6~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_6 .lut_mask = "eac0";
defparam \LCD1602|c_state.ROW1_6 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_6 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_6 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_6 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_6 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y9_N8
maxii_lcell \people1_price[2][1] (
// Equation(s):
// \LCD1602|Selector6~1  = (\LCD1602|c_state.ROW2_5~regout  & ((\double~combout  & ((people1_price[2][1]))) # (!\double~combout  & (!\seg_data[0][1]~regout ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(\LCD1602|c_state.ROW2_5~regout ),
	.datab(\seg_data[0][1]~regout ),
	.datac(\seg_data[2][1]~regout ),
	.datad(\double~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~1 ),
	.regout(\people1_price[2][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[2][1] .lut_mask = "a022";
defparam \people1_price[2][1] .operation_mode = "normal";
defparam \people1_price[2][1] .output_mode = "comb_only";
defparam \people1_price[2][1] .register_cascade_mode = "off";
defparam \people1_price[2][1] .sum_lutc_input = "qfbk";
defparam \people1_price[2][1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y9_N1
maxii_lcell \LCD1602|Selector6~5 (
// Equation(s):
// \LCD1602|Selector6~5_combout  = (\LCD1602|Selector6~2 ) # ((\LCD1602|Selector6~3 ) # ((\LCD1602|Selector6~4 ) # (\LCD1602|Selector6~1 )))

	.clk(gnd),
	.dataa(\LCD1602|Selector6~2 ),
	.datab(\LCD1602|Selector6~3 ),
	.datac(\LCD1602|Selector6~4 ),
	.datad(\LCD1602|Selector6~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector6~5 .lut_mask = "fffe";
defparam \LCD1602|Selector6~5 .operation_mode = "normal";
defparam \LCD1602|Selector6~5 .output_mode = "comb_only";
defparam \LCD1602|Selector6~5 .register_cascade_mode = "off";
defparam \LCD1602|Selector6~5 .sum_lutc_input = "datac";
defparam \LCD1602|Selector6~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y9_N2
maxii_lcell \LCD1602|c_state.ROW1_C (
// Equation(s):
// \LCD1602|Selector6~6  = (C1_c_state.ROW1_C) # ((\LCD1602|Selector6~5_combout ) # ((\seg_data[7][1]~regout  & \LCD1602|c_state.ROW1_ADDR~regout )))
// \LCD1602|c_state.ROW1_C~regout  = DFFEAS(\LCD1602|Selector6~6 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_B~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\seg_data[7][1]~regout ),
	.datab(\LCD1602|c_state.ROW1_ADDR~regout ),
	.datac(\LCD1602|c_state.ROW1_B~regout ),
	.datad(\LCD1602|Selector6~5_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~6 ),
	.regout(\LCD1602|c_state.ROW1_C~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_C .lut_mask = "fff8";
defparam \LCD1602|c_state.ROW1_C .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_C .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_C .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_C .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_C .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y9_N8
maxii_lcell \LCD1602|c_state.ROW1_D (
// Equation(s):
// \LCD1602|Selector2~8  = ((!\LCD1602|c_state.ROW1_A~regout  & (!C1_c_state.ROW1_D & !\LCD1602|c_state.ROW1_1~regout )))
// \LCD1602|c_state.ROW1_D~regout  = DFFEAS(\LCD1602|Selector2~8 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_C~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|c_state.ROW1_A~regout ),
	.datac(\LCD1602|c_state.ROW1_C~regout ),
	.datad(\LCD1602|c_state.ROW1_1~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~8 ),
	.regout(\LCD1602|c_state.ROW1_D~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_D .lut_mask = "0003";
defparam \LCD1602|c_state.ROW1_D .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_D .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_D .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_D .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_D .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N4
maxii_lcell \LCD1602|c_state.ROW1_E (
// Equation(s):
// \LCD1602|c_state.ROW1_E~regout  = DFFEAS(GND, GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_D~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\LCD1602|c_state.ROW1_D~regout ),
	.datad(vcc),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|c_state.ROW1_E~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_E .lut_mask = "0000";
defparam \LCD1602|c_state.ROW1_E .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_E .output_mode = "reg_only";
defparam \LCD1602|c_state.ROW1_E .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_E .sum_lutc_input = "datac";
defparam \LCD1602|c_state.ROW1_E .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y8_N3
maxii_lcell \LCD1602|c_state.ROW1_F (
// Equation(s):
// \LCD1602|Selector7~5  = (\LCD1602|c_state.IDLE~regout  & (\LCD1602|Selector2~0  & (!C1_c_state.ROW1_F & \LCD1602|Selector7~4 )))
// \LCD1602|c_state.ROW1_F~regout  = DFFEAS(\LCD1602|Selector7~5 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_E~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.IDLE~regout ),
	.datab(\LCD1602|Selector2~0 ),
	.datac(\LCD1602|c_state.ROW1_E~regout ),
	.datad(\LCD1602|Selector7~4 ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~5 ),
	.regout(\LCD1602|c_state.ROW1_F~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_F .lut_mask = "0800";
defparam \LCD1602|c_state.ROW1_F .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_F .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_F .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_F .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_F .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y10_N4
maxii_lcell \LCD1602|c_state.ROW2_ADDR (
// Equation(s):
// \LCD1602|Selector6~16  = (((C1_c_state.ROW2_ADDR & \onride~combout )))
// \LCD1602|c_state.ROW2_ADDR~regout  = DFFEAS(\LCD1602|Selector6~16 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_F~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\LCD1602|c_state.ROW1_F~regout ),
	.datad(\onride~combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~16 ),
	.regout(\LCD1602|c_state.ROW2_ADDR~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_ADDR .lut_mask = "f000";
defparam \LCD1602|c_state.ROW2_ADDR .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_ADDR .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_ADDR .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_ADDR .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_ADDR .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y7_N9
maxii_lcell \LCD1602|c_state.ROW2_0 (
// Equation(s):
// \LCD1602|Selector4~2  = (C1_c_state.ROW2_0) # ((\LCD1602|c_state.ROW2_4~regout  & ((\double~combout ) # (\seg_data[1][3]~regout ))))
// \LCD1602|c_state.ROW2_0~regout  = DFFEAS(\LCD1602|Selector4~2 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_ADDR~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW2_4~regout ),
	.datab(\double~combout ),
	.datac(\LCD1602|c_state.ROW2_ADDR~regout ),
	.datad(\seg_data[1][3]~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~2 ),
	.regout(\LCD1602|c_state.ROW2_0~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_0 .lut_mask = "faf8";
defparam \LCD1602|c_state.ROW2_0 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_0 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_0 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_0 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y10_N3
maxii_lcell \LCD1602|c_state.ROW2_1 (
// Equation(s):
// \LCD1602|Selector5~5  = (\LCD1602|c_state.ROW1_0~regout ) # ((\LCD1602|c_state.ROW2_2~regout ) # ((C1_c_state.ROW2_1) # (\LCD1602|c_state.ROW2_6~regout )))
// \LCD1602|c_state.ROW2_1~regout  = DFFEAS(\LCD1602|Selector5~5 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_0~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW1_0~regout ),
	.datab(\LCD1602|c_state.ROW2_2~regout ),
	.datac(\LCD1602|c_state.ROW2_0~regout ),
	.datad(\LCD1602|c_state.ROW2_6~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~5 ),
	.regout(\LCD1602|c_state.ROW2_1~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_1 .lut_mask = "fffe";
defparam \LCD1602|c_state.ROW2_1 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_1 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_1 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_1 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_1 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y10_N0
maxii_lcell \LCD1602|c_state.ROW2_2 (
// Equation(s):
// \LCD1602|Selector4~12  = (\comb~1_combout  & ((C1_c_state.ROW2_2) # ((\LCD1602|c_state.ROW2_3~regout  & \seg_data[2][3]~regout ))))
// \LCD1602|c_state.ROW2_2~regout  = DFFEAS(\LCD1602|Selector4~12 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_1~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW2_3~regout ),
	.datab(\comb~1_combout ),
	.datac(\LCD1602|c_state.ROW2_1~regout ),
	.datad(\seg_data[2][3]~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~12 ),
	.regout(\LCD1602|c_state.ROW2_2~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_2 .lut_mask = "c8c0";
defparam \LCD1602|c_state.ROW2_2 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_2 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_2 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_2 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_2 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y10_N7
maxii_lcell \LCD1602|c_state.ROW2_5 (
// Equation(s):
// \LCD1602|Selector1~0  = (\LCD1602|c_state.ROW2_3~regout ) # ((\LCD1602|c_state.ROW2_2~regout ) # ((C1_c_state.ROW2_5) # (\LCD1602|c_state.ROW2_6~regout )))
// \LCD1602|c_state.ROW2_5~regout  = DFFEAS(\LCD1602|Selector1~0 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_4~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW2_3~regout ),
	.datab(\LCD1602|c_state.ROW2_2~regout ),
	.datac(\LCD1602|c_state.ROW2_4~regout ),
	.datad(\LCD1602|c_state.ROW2_6~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector1~0 ),
	.regout(\LCD1602|c_state.ROW2_5~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_5 .lut_mask = "fffe";
defparam \LCD1602|c_state.ROW2_5 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_5 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_5 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_5 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_5 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y9_N9
maxii_lcell \comb~0 (
// Equation(s):
// \comb~0_combout  = (((\onride~combout  & \double~combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\onride~combout ),
	.datad(\double~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\comb~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \comb~0 .lut_mask = "f000";
defparam \comb~0 .operation_mode = "normal";
defparam \comb~0 .output_mode = "comb_only";
defparam \comb~0 .register_cascade_mode = "off";
defparam \comb~0 .sum_lutc_input = "datac";
defparam \comb~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y8_N8
maxii_lcell \LCD1602|c_state.ROW2_6 (
// Equation(s):
// \LCD1602|Selector7~11  = (\LCD1602|Selector7~10  & (((\people1_price[1][0]~regout  & \comb~0_combout )) # (!C1_c_state.ROW2_6)))
// \LCD1602|c_state.ROW2_6~regout  = DFFEAS(\LCD1602|Selector7~11 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_5~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|Selector7~10 ),
	.datab(\people1_price[1][0]~regout ),
	.datac(\LCD1602|c_state.ROW2_5~regout ),
	.datad(\comb~0_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~11 ),
	.regout(\LCD1602|c_state.ROW2_6~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_6 .lut_mask = "8a0a";
defparam \LCD1602|c_state.ROW2_6 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_6 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_6 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_6 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_6 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y8_N1
maxii_lcell \people1_price[0][0] (
// Equation(s):
// \people1_price[0][0]~regout  = DFFEAS((((!\seg_data[0][0]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~1_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people1_price[0][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[0][0] .lut_mask = "00ff";
defparam \people1_price[0][0] .operation_mode = "normal";
defparam \people1_price[0][0] .output_mode = "reg_only";
defparam \people1_price[0][0] .register_cascade_mode = "off";
defparam \people1_price[0][0] .sum_lutc_input = "datac";
defparam \people1_price[0][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y8_N0
maxii_lcell \LCD1602|c_state.ROW2_7 (
// Equation(s):
// \LCD1602|Selector7~6  = ((\double~combout  & (\onride~combout  & \people1_price[0][0]~regout ))) # (!C1_c_state.ROW2_7)
// \LCD1602|c_state.ROW2_7~regout  = DFFEAS(\LCD1602|Selector7~6 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_6~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\double~combout ),
	.datab(\onride~combout ),
	.datac(\LCD1602|c_state.ROW2_6~regout ),
	.datad(\people1_price[0][0]~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~6 ),
	.regout(\LCD1602|c_state.ROW2_7~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_7 .lut_mask = "8f0f";
defparam \LCD1602|c_state.ROW2_7 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_7 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_7 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_7 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_7 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y10_N8
maxii_lcell \LCD1602|c_state.ROW2_9 (
// Equation(s):
// \LCD1602|Selector3~3  = (!\onride~combout  & ((\LCD1602|c_state.ROW2_0~regout ) # ((C1_c_state.ROW2_9) # (\LCD1602|c_state.ROW1_2~regout ))))
// \LCD1602|c_state.ROW2_9~regout  = DFFEAS(\LCD1602|Selector3~3 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_8~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\onride~combout ),
	.datab(\LCD1602|c_state.ROW2_0~regout ),
	.datac(\LCD1602|c_state.ROW2_8~regout ),
	.datad(\LCD1602|c_state.ROW1_2~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector3~3 ),
	.regout(\LCD1602|c_state.ROW2_9~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_9 .lut_mask = "5554";
defparam \LCD1602|c_state.ROW2_9 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_9 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_9 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_9 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_9 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y10_N1
maxii_lcell \LCD1602|c_state.ROW2_A (
// Equation(s):
// \LCD1602|Selector3~4  = (\LCD1602|c_state.ROW2_7~regout ) # ((\LCD1602|c_state.ROW2_B~regout ) # ((C1_c_state.ROW2_A) # (\LCD1602|c_state.ROW2_6~regout )))
// \LCD1602|c_state.ROW2_A~regout  = DFFEAS(\LCD1602|Selector3~4 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_9~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW2_7~regout ),
	.datab(\LCD1602|c_state.ROW2_B~regout ),
	.datac(\LCD1602|c_state.ROW2_9~regout ),
	.datad(\LCD1602|c_state.ROW2_6~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector3~4 ),
	.regout(\LCD1602|c_state.ROW2_A~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_A .lut_mask = "fffe";
defparam \LCD1602|c_state.ROW2_A .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_A .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_A .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_A .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_A .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y9_N2
maxii_lcell \people2_price[0][1] (
// Equation(s):
// \people2_price[0][1]~regout  = DFFEAS((((!\seg_data[0][1]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~0_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[0][1]~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people2_price[0][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[0][1] .lut_mask = "0f0f";
defparam \people2_price[0][1] .operation_mode = "normal";
defparam \people2_price[0][1] .output_mode = "reg_only";
defparam \people2_price[0][1] .register_cascade_mode = "off";
defparam \people2_price[0][1] .sum_lutc_input = "datac";
defparam \people2_price[0][1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y9_N4
maxii_lcell \people2_price[2][1] (
// Equation(s):
// \LCD1602|Selector6~7  = (\LCD1602|c_state.ROW2_E~regout  & ((\people2_price[0][1]~regout ) # ((\LCD1602|c_state.ROW2_C~regout  & people2_price[2][1])))) # (!\LCD1602|c_state.ROW2_E~regout  & (\LCD1602|c_state.ROW2_C~regout  & (people2_price[2][1])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(\LCD1602|c_state.ROW2_E~regout ),
	.datab(\LCD1602|c_state.ROW2_C~regout ),
	.datac(\seg_data[2][1]~regout ),
	.datad(\people2_price[0][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~7 ),
	.regout(\people2_price[2][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[2][1] .lut_mask = "eac0";
defparam \people2_price[2][1] .operation_mode = "normal";
defparam \people2_price[2][1] .output_mode = "comb_only";
defparam \people2_price[2][1] .register_cascade_mode = "off";
defparam \people2_price[2][1] .sum_lutc_input = "qfbk";
defparam \people2_price[2][1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y9_N2
maxii_lcell \people1_price[0][1] (
// Equation(s):
// \people1_price[0][1]~regout  = DFFEAS((((!\seg_data[0][1]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~1_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\seg_data[0][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people1_price[0][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[0][1] .lut_mask = "00ff";
defparam \people1_price[0][1] .operation_mode = "normal";
defparam \people1_price[0][1] .output_mode = "reg_only";
defparam \people1_price[0][1] .register_cascade_mode = "off";
defparam \people1_price[0][1] .sum_lutc_input = "datac";
defparam \people1_price[0][1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y9_N8
maxii_lcell \people1_price[1][1] (
// Equation(s):
// \LCD1602|Selector6~8  = (\LCD1602|c_state.ROW2_7~regout  & ((\people1_price[0][1]~regout ) # ((\LCD1602|c_state.ROW2_6~regout  & people1_price[1][1])))) # (!\LCD1602|c_state.ROW2_7~regout  & (\LCD1602|c_state.ROW2_6~regout  & (people1_price[1][1])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(\LCD1602|c_state.ROW2_7~regout ),
	.datab(\LCD1602|c_state.ROW2_6~regout ),
	.datac(\seg_data[1][1]~regout ),
	.datad(\people1_price[0][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~8 ),
	.regout(\people1_price[1][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[1][1] .lut_mask = "eac0";
defparam \people1_price[1][1] .operation_mode = "normal";
defparam \people1_price[1][1] .output_mode = "comb_only";
defparam \people1_price[1][1] .register_cascade_mode = "off";
defparam \people1_price[1][1] .sum_lutc_input = "qfbk";
defparam \people1_price[1][1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y9_N5
maxii_lcell \LCD1602|c_state.ROW2_B (
// Equation(s):
// \LCD1602|Selector6~9  = (\LCD1602|c_state.ROW2_A~regout ) # ((\LCD1602|Selector6~7 ) # ((C1_c_state.ROW2_B) # (\LCD1602|Selector6~8 )))
// \LCD1602|c_state.ROW2_B~regout  = DFFEAS(\LCD1602|Selector6~9 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_A~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW2_A~regout ),
	.datab(\LCD1602|Selector6~7 ),
	.datac(\LCD1602|c_state.ROW2_A~regout ),
	.datad(\LCD1602|Selector6~8 ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~9 ),
	.regout(\LCD1602|c_state.ROW2_B~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_B .lut_mask = "fffe";
defparam \LCD1602|c_state.ROW2_B .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_B .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_B .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_B .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_B .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y7_N0
maxii_lcell \LCD1602|c_state.ROW1_7 (
// Equation(s):
// \LCD1602|Selector2~2  = ((\onride~combout ) # ((!\LCD1602|c_state.ROW1_C~regout  & !C1_c_state.ROW1_7)))
// \LCD1602|c_state.ROW1_7~regout  = DFFEAS(\LCD1602|Selector2~2 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_6~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|c_state.ROW1_C~regout ),
	.datac(\LCD1602|c_state.ROW1_6~regout ),
	.datad(\onride~combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~2 ),
	.regout(\LCD1602|c_state.ROW1_7~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_7 .lut_mask = "ff03";
defparam \LCD1602|c_state.ROW1_7 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_7 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_7 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_7 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_7 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y9_N7
maxii_lcell \LCD1602|c_state.ROW1_8 (
// Equation(s):
// \LCD1602|Selector2~3  = ((\onride~combout ) # ((!\LCD1602|c_state.ROW2_B~regout  & !C1_c_state.ROW1_8)))
// \LCD1602|c_state.ROW1_8~regout  = DFFEAS(\LCD1602|Selector2~3 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_7~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|c_state.ROW2_B~regout ),
	.datac(\LCD1602|c_state.ROW1_7~regout ),
	.datad(\onride~combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~3 ),
	.regout(\LCD1602|c_state.ROW1_8~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_8 .lut_mask = "ff03";
defparam \LCD1602|c_state.ROW1_8 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_8 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_8 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_8 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_8 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y10_N5
maxii_lcell \LCD1602|c_state.ROW1_9 (
// Equation(s):
// \LCD1602|Selector5~4  = (C1_c_state.ROW1_9 & (\mile_v~combout [2] $ (((\mile_v~combout [0] & \mile_v~combout [1])))))
// \LCD1602|c_state.ROW1_9~regout  = DFFEAS(\LCD1602|Selector5~4 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_8~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\mile_v~combout [0]),
	.datab(\mile_v~combout [1]),
	.datac(\LCD1602|c_state.ROW1_8~regout ),
	.datad(\mile_v~combout [2]),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~4 ),
	.regout(\LCD1602|c_state.ROW1_9~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_9 .lut_mask = "7080";
defparam \LCD1602|c_state.ROW1_9 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_9 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_9 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_9 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_9 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y10_N1
maxii_lcell \LCD1602|c_state.ROW2_3 (
// Equation(s):
// \LCD1602|Selector5~6  = (!\LCD1602|c_state.ROW1_9~regout  & (!\LCD1602|c_state.ROW2_5~regout  & (!C1_c_state.ROW2_3 & !\LCD1602|c_state.ROW1_5~regout )))
// \LCD1602|c_state.ROW2_3~regout  = DFFEAS(\LCD1602|Selector5~6 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_2~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW1_9~regout ),
	.datab(\LCD1602|c_state.ROW2_5~regout ),
	.datac(\LCD1602|c_state.ROW2_2~regout ),
	.datad(\LCD1602|c_state.ROW1_5~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~6 ),
	.regout(\LCD1602|c_state.ROW2_3~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_3 .lut_mask = "0001";
defparam \LCD1602|c_state.ROW2_3 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_3 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_3 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_3 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_3 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y10_N5
maxii_lcell \LCD1602|c_state.ROW2_8 (
// Equation(s):
// \LCD1602|Selector1~1  = (\LCD1602|c_state.ROW2_4~regout ) # ((\LCD1602|Selector1~0 ) # ((C1_c_state.ROW2_8) # (\LCD1602|c_state.ROW2_9~regout )))
// \LCD1602|c_state.ROW2_8~regout  = DFFEAS(\LCD1602|Selector1~1 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW2_7~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW2_4~regout ),
	.datab(\LCD1602|Selector1~0 ),
	.datac(\LCD1602|c_state.ROW2_7~regout ),
	.datad(\LCD1602|c_state.ROW2_9~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector1~1 ),
	.regout(\LCD1602|c_state.ROW2_8~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW2_8 .lut_mask = "fffe";
defparam \LCD1602|c_state.ROW2_8 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW2_8 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW2_8 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW2_8 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW2_8 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y7_N1
maxii_lcell \LCD1602|c_state.ROW1_B (
// Equation(s):
// \LCD1602|Selector6~14  = (C1_c_state.ROW1_B) # ((\LCD1602|c_state.DISP_CLEAR~regout ) # ((!\onride~combout  & \LCD1602|c_state.ROW2_8~regout )))
// \LCD1602|c_state.ROW1_B~regout  = DFFEAS(\LCD1602|Selector6~14 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_A~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\onride~combout ),
	.datab(\LCD1602|c_state.ROW2_8~regout ),
	.datac(\LCD1602|c_state.ROW1_A~regout ),
	.datad(\LCD1602|c_state.DISP_CLEAR~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~14 ),
	.regout(\LCD1602|c_state.ROW1_B~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_B .lut_mask = "fff4";
defparam \LCD1602|c_state.ROW1_B .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_B .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_B .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_B .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_B .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y9_N0
maxii_lcell \LCD1602|c_state.ROW1_0 (
// Equation(s):
// \LCD1602|Selector2~5  = (\onride~combout ) # ((!\LCD1602|c_state.ROW1_B~regout  & (!C1_c_state.ROW1_0 & !\LCD1602|c_state.ROW1_9~regout )))
// \LCD1602|c_state.ROW1_0~regout  = DFFEAS(\LCD1602|Selector2~5 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_ADDR~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW1_B~regout ),
	.datab(\onride~combout ),
	.datac(\LCD1602|c_state.ROW1_ADDR~regout ),
	.datad(\LCD1602|c_state.ROW1_9~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~5 ),
	.regout(\LCD1602|c_state.ROW1_0~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_0 .lut_mask = "cccd";
defparam \LCD1602|c_state.ROW1_0 .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_0 .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_0 .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_0 .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_0 .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y7_N5
maxii_lcell \LCD1602|c_state.ROW1_ADDR (
// Equation(s):
// \LCD1602|Selector4~3  = (\seg_data[7][3]~regout  & (\LCD1602|c_state.ROW1_0~regout  & ((!\seg_data[6][3]~regout )))) # (!\seg_data[7][3]~regout  & ((C1_c_state.ROW1_ADDR) # ((\LCD1602|c_state.ROW1_0~regout  & !\seg_data[6][3]~regout ))))
// \LCD1602|c_state.ROW1_ADDR~regout  = DFFEAS(\LCD1602|Selector4~3 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|n_state~0 , , , VCC)

	.clk(\clk~combout ),
	.dataa(\seg_data[7][3]~regout ),
	.datab(\LCD1602|c_state.ROW1_0~regout ),
	.datac(\LCD1602|n_state~0 ),
	.datad(\seg_data[6][3]~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~3 ),
	.regout(\LCD1602|c_state.ROW1_ADDR~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_ADDR .lut_mask = "50dc";
defparam \LCD1602|c_state.ROW1_ADDR .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_ADDR .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_ADDR .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_ADDR .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_ADDR .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y7_N2
maxii_lcell \LCD1602|c_state.ROW1_A (
// Equation(s):
// \LCD1602|Selector3~1  = (\LCD1602|c_state.ROW1_ADDR~regout ) # ((\LCD1602|c_state.ROW1_6~regout ) # ((C1_c_state.ROW1_A) # (\LCD1602|c_state.ROW1_4~regout )))
// \LCD1602|c_state.ROW1_A~regout  = DFFEAS(\LCD1602|Selector3~1 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.ROW1_9~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ROW1_ADDR~regout ),
	.datab(\LCD1602|c_state.ROW1_6~regout ),
	.datac(\LCD1602|c_state.ROW1_9~regout ),
	.datad(\LCD1602|c_state.ROW1_4~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector3~1 ),
	.regout(\LCD1602|c_state.ROW1_A~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.ROW1_A .lut_mask = "fffe";
defparam \LCD1602|c_state.ROW1_A .operation_mode = "normal";
defparam \LCD1602|c_state.ROW1_A .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.ROW1_A .register_cascade_mode = "off";
defparam \LCD1602|c_state.ROW1_A .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.ROW1_A .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y9_N9
maxii_lcell \LCD1602|Selector2~1 (
// Equation(s):
// \LCD1602|Selector2~1_combout  = ((\onride~combout  & (!\LCD1602|c_state.ROW2_1~regout )) # (!\onride~combout  & ((!\LCD1602|c_state.ROW1_2~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\LCD1602|c_state.ROW2_1~regout ),
	.datac(\onride~combout ),
	.datad(\LCD1602|c_state.ROW1_2~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector2~1 .lut_mask = "303f";
defparam \LCD1602|Selector2~1 .operation_mode = "normal";
defparam \LCD1602|Selector2~1 .output_mode = "comb_only";
defparam \LCD1602|Selector2~1 .register_cascade_mode = "off";
defparam \LCD1602|Selector2~1 .sum_lutc_input = "datac";
defparam \LCD1602|Selector2~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y9_N1
maxii_lcell \LCD1602|c_state.DISP_OFF (
// Equation(s):
// \LCD1602|Selector2~9  = (!C1_c_state.DISP_OFF & (\LCD1602|Selector2~1_combout  & ((\LCD1602|Selector2~8 ) # (\onride~combout ))))
// \LCD1602|c_state.DISP_OFF~regout  = DFFEAS(\LCD1602|Selector2~9 , GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , \LCD1602|c_state.SET_FUNCTION~regout , , , VCC)

	.clk(\clk~combout ),
	.dataa(\LCD1602|Selector2~8 ),
	.datab(\onride~combout ),
	.datac(\LCD1602|c_state.SET_FUNCTION~regout ),
	.datad(\LCD1602|Selector2~1_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~9 ),
	.regout(\LCD1602|c_state.DISP_OFF~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|c_state.DISP_OFF .lut_mask = "0e00";
defparam \LCD1602|c_state.DISP_OFF .operation_mode = "normal";
defparam \LCD1602|c_state.DISP_OFF .output_mode = "reg_and_comb";
defparam \LCD1602|c_state.DISP_OFF .register_cascade_mode = "off";
defparam \LCD1602|c_state.DISP_OFF .sum_lutc_input = "qfbk";
defparam \LCD1602|c_state.DISP_OFF .synch_mode = "on";
// synopsys translate_on

// Location: LC_X11_Y7_N8
maxii_lcell \LCD1602|LCD_RS (
// Equation(s):
// \LCD1602|LCD_RS~regout  = DFFEAS((!\LCD1602|c_state.DISP_OFF~regout  & (\LCD1602|Selector2~0  & (!\LCD1602|c_state.ROW1_F~regout  & \LCD1602|c_state.IDLE~regout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.DISP_OFF~regout ),
	.datab(\LCD1602|Selector2~0 ),
	.datac(\LCD1602|c_state.ROW1_F~regout ),
	.datad(\LCD1602|c_state.IDLE~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|LCD_RS~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LCD_RS .lut_mask = "0400";
defparam \LCD1602|LCD_RS .operation_mode = "normal";
defparam \LCD1602|LCD_RS .output_mode = "reg_only";
defparam \LCD1602|LCD_RS .register_cascade_mode = "off";
defparam \LCD1602|LCD_RS .sum_lutc_input = "datac";
defparam \LCD1602|LCD_RS .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y8_N6
maxii_lcell \LCD1602|Selector7~2 (
// Equation(s):
// \LCD1602|Selector7~2_combout  = (!\LCD1602|c_state.ROW2_A~regout  & (!\LCD1602|c_state.ROW2_B~regout  & (!\LCD1602|c_state.ROW2_8~regout  & \LCD1602|Selector7~1 )))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW2_A~regout ),
	.datab(\LCD1602|c_state.ROW2_B~regout ),
	.datac(\LCD1602|c_state.ROW2_8~regout ),
	.datad(\LCD1602|Selector7~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~2 .lut_mask = "0100";
defparam \LCD1602|Selector7~2 .operation_mode = "normal";
defparam \LCD1602|Selector7~2 .output_mode = "comb_only";
defparam \LCD1602|Selector7~2 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~2 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y8_N4
maxii_lcell \LCD1602|Selector7~3 (
// Equation(s):
// \LCD1602|Selector7~3_combout  = (\LCD1602|Selector7~2_combout  & (!\LCD1602|c_state.ROW2_ADDR~regout  & (\LCD1602|Selector2~1_combout  & \LCD1602|Selector7~0 )))

	.clk(gnd),
	.dataa(\LCD1602|Selector7~2_combout ),
	.datab(\LCD1602|c_state.ROW2_ADDR~regout ),
	.datac(\LCD1602|Selector2~1_combout ),
	.datad(\LCD1602|Selector7~0 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~3 .lut_mask = "2000";
defparam \LCD1602|Selector7~3 .operation_mode = "normal";
defparam \LCD1602|Selector7~3 .output_mode = "comb_only";
defparam \LCD1602|Selector7~3 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~3 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y10_N4
maxii_lcell \LCD1602|Selector7~14 (
// Equation(s):
// \LCD1602|Selector7~14_combout  = (\onride~combout  & (!\LCD1602|c_state.ROW2_9~regout  & ((!\LCD1602|c_state.ROW1_9~regout ) # (!\mile_v~combout [0])))) # (!\onride~combout  & (((!\LCD1602|c_state.ROW1_9~regout ))))

	.clk(gnd),
	.dataa(\mile_v~combout [0]),
	.datab(\onride~combout ),
	.datac(\LCD1602|c_state.ROW1_9~regout ),
	.datad(\LCD1602|c_state.ROW2_9~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~14 .lut_mask = "034f";
defparam \LCD1602|Selector7~14 .operation_mode = "normal";
defparam \LCD1602|Selector7~14 .output_mode = "comb_only";
defparam \LCD1602|Selector7~14 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~14 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y8_N9
maxii_lcell \LCD1602|Selector7~15 (
// Equation(s):
// \LCD1602|Selector7~15_combout  = (\onride~combout  & (!\LCD1602|c_state.ROW2_2~regout  & ((\seg_data[3][0]~regout ) # (!\LCD1602|c_state.ROW1_6~regout )))) # (!\onride~combout  & (!\LCD1602|c_state.ROW1_6~regout ))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\LCD1602|c_state.ROW1_6~regout ),
	.datac(\LCD1602|c_state.ROW2_2~regout ),
	.datad(\seg_data[3][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~15 .lut_mask = "1b13";
defparam \LCD1602|Selector7~15 .operation_mode = "normal";
defparam \LCD1602|Selector7~15 .output_mode = "comb_only";
defparam \LCD1602|Selector7~15 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~15 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y8_N0
maxii_lcell \LCD1602|Selector7~17 (
// Equation(s):
// \LCD1602|Selector7~17_combout  = (\onride~combout  & (!\LCD1602|c_state.ROW1_8~regout  & ((!\LCD1602|c_state.ROW1_0~regout ) # (!\seg_data[6][0]~regout )))) # (!\onride~combout  & (((!\LCD1602|c_state.ROW1_0~regout ))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\seg_data[6][0]~regout ),
	.datac(\LCD1602|c_state.ROW1_8~regout ),
	.datad(\LCD1602|c_state.ROW1_0~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~17 .lut_mask = "025f";
defparam \LCD1602|Selector7~17 .operation_mode = "normal";
defparam \LCD1602|Selector7~17 .output_mode = "comb_only";
defparam \LCD1602|Selector7~17 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~17 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y8_N1
maxii_lcell \LCD1602|Selector7~16 (
// Equation(s):
// \LCD1602|Selector7~16_combout  = (\onride~combout  & (((!\seg_data[5][0]~regout ) # (!\LCD1602|c_state.ROW1_4~regout )))) # (!\onride~combout  & (!\LCD1602|c_state.ROW2_0~regout  & (!\LCD1602|c_state.ROW1_4~regout )))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\LCD1602|c_state.ROW2_0~regout ),
	.datac(\LCD1602|c_state.ROW1_4~regout ),
	.datad(\seg_data[5][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~16 .lut_mask = "0bab";
defparam \LCD1602|Selector7~16 .operation_mode = "normal";
defparam \LCD1602|Selector7~16 .output_mode = "comb_only";
defparam \LCD1602|Selector7~16 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~16 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y8_N2
maxii_lcell \LCD1602|Selector7~18 (
// Equation(s):
// \LCD1602|Selector7~18_combout  = (\LCD1602|Selector7~14_combout  & (\LCD1602|Selector7~15_combout  & (\LCD1602|Selector7~17_combout  & \LCD1602|Selector7~16_combout )))

	.clk(gnd),
	.dataa(\LCD1602|Selector7~14_combout ),
	.datab(\LCD1602|Selector7~15_combout ),
	.datac(\LCD1602|Selector7~17_combout ),
	.datad(\LCD1602|Selector7~16_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~18_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~18 .lut_mask = "8000";
defparam \LCD1602|Selector7~18 .operation_mode = "normal";
defparam \LCD1602|Selector7~18 .output_mode = "comb_only";
defparam \LCD1602|Selector7~18 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~18 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~18 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y9_N5
maxii_lcell \people2_price[2][0] (
// Equation(s):
// \LCD1602|Selector7~12  = (((\double~combout  & people2_price[2][0])) # (!\LCD1602|c_state.ROW2_C~regout )) # (!\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\double~combout ),
	.datab(\onride~combout ),
	.datac(\seg_data[2][0]~regout ),
	.datad(\LCD1602|c_state.ROW2_C~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~12 ),
	.regout(\people2_price[2][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[2][0] .lut_mask = "b3ff";
defparam \people2_price[2][0] .operation_mode = "normal";
defparam \people2_price[2][0] .output_mode = "comb_only";
defparam \people2_price[2][0] .register_cascade_mode = "off";
defparam \people2_price[2][0] .sum_lutc_input = "qfbk";
defparam \people2_price[2][0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y10_N4
maxii_lcell \LCD1602|Selector6~0 (
// Equation(s):
// \LCD1602|Selector6~0_combout  = (!\double~combout  & (\onride~combout  & ((\LCD1602|c_state.ROW2_3~regout ))))

	.clk(gnd),
	.dataa(\double~combout ),
	.datab(\onride~combout ),
	.datac(vcc),
	.datad(\LCD1602|c_state.ROW2_3~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector6~0 .lut_mask = "4400";
defparam \LCD1602|Selector6~0 .operation_mode = "normal";
defparam \LCD1602|Selector6~0 .output_mode = "comb_only";
defparam \LCD1602|Selector6~0 .register_cascade_mode = "off";
defparam \LCD1602|Selector6~0 .sum_lutc_input = "datac";
defparam \LCD1602|Selector6~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y8_N9
maxii_lcell \LCD1602|Selector7~13 (
// Equation(s):
// \LCD1602|Selector7~13_combout  = (\LCD1602|Selector7~12  & (\LCD1602|Selector7~11  & ((\seg_data[2][0]~regout ) # (!\LCD1602|Selector6~0_combout ))))

	.clk(gnd),
	.dataa(\LCD1602|Selector7~12 ),
	.datab(\LCD1602|Selector6~0_combout ),
	.datac(\seg_data[2][0]~regout ),
	.datad(\LCD1602|Selector7~11 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~13 .lut_mask = "a200";
defparam \LCD1602|Selector7~13 .operation_mode = "normal";
defparam \LCD1602|Selector7~13 .output_mode = "comb_only";
defparam \LCD1602|Selector7~13 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~13 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y8_N6
maxii_lcell \people2_price[1][0] (
// Equation(s):
// \people2_price[1][0]~regout  = DFFEAS((((!\seg_data[1][0]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~0_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[1][0]~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people2_price[1][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[1][0] .lut_mask = "0f0f";
defparam \people2_price[1][0] .operation_mode = "normal";
defparam \people2_price[1][0] .output_mode = "reg_only";
defparam \people2_price[1][0] .register_cascade_mode = "off";
defparam \people2_price[1][0] .sum_lutc_input = "datac";
defparam \people2_price[1][0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y8_N2
maxii_lcell \LCD1602|Selector7~7 (
// Equation(s):
// \LCD1602|Selector7~7_combout  = (\LCD1602|Selector7~6  & (((\comb~0_combout  & \people2_price[1][0]~regout )) # (!\LCD1602|c_state.ROW2_D~regout )))

	.clk(gnd),
	.dataa(\comb~0_combout ),
	.datab(\LCD1602|Selector7~6 ),
	.datac(\people2_price[1][0]~regout ),
	.datad(\LCD1602|c_state.ROW2_D~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~7 .lut_mask = "80cc";
defparam \LCD1602|Selector7~7 .operation_mode = "normal";
defparam \LCD1602|Selector7~7 .output_mode = "comb_only";
defparam \LCD1602|Selector7~7 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~7 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y8_N6
maxii_lcell \people1_price[2][0] (
// Equation(s):
// \LCD1602|Selector7~8  = ((\double~combout  & (people1_price[2][0])) # (!\double~combout  & ((!\seg_data[0][0]~regout )))) # (!\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\double~combout ),
	.datab(\onride~combout ),
	.datac(\seg_data[2][0]~regout ),
	.datad(\seg_data[0][0]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~8 ),
	.regout(\people1_price[2][0]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[2][0] .lut_mask = "b3f7";
defparam \people1_price[2][0] .operation_mode = "normal";
defparam \people1_price[2][0] .output_mode = "comb_only";
defparam \people1_price[2][0] .register_cascade_mode = "off";
defparam \people1_price[2][0] .sum_lutc_input = "qfbk";
defparam \people1_price[2][0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y8_N4
maxii_lcell \LCD1602|Selector7~9 (
// Equation(s):
// \LCD1602|Selector7~9_combout  = (\LCD1602|Selector7~7_combout  & (\LCD1602|Selector7~5  & ((\LCD1602|Selector7~8 ) # (!\LCD1602|c_state.ROW2_5~regout ))))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW2_5~regout ),
	.datab(\LCD1602|Selector7~7_combout ),
	.datac(\LCD1602|Selector7~8 ),
	.datad(\LCD1602|Selector7~5 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector7~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector7~9 .lut_mask = "c400";
defparam \LCD1602|Selector7~9 .operation_mode = "normal";
defparam \LCD1602|Selector7~9 .output_mode = "comb_only";
defparam \LCD1602|Selector7~9 .register_cascade_mode = "off";
defparam \LCD1602|Selector7~9 .sum_lutc_input = "datac";
defparam \LCD1602|Selector7~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y8_N5
maxii_lcell \LCD1602|LCD_DATA[0] (
// Equation(s):
// \LCD1602|LCD_DATA [0] = DFFEAS((\LCD1602|Selector7~3_combout  & (\LCD1602|Selector7~18_combout  & (\LCD1602|Selector7~13_combout  & \LCD1602|Selector7~9_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\LCD1602|Selector7~3_combout ),
	.datab(\LCD1602|Selector7~18_combout ),
	.datac(\LCD1602|Selector7~13_combout ),
	.datad(\LCD1602|Selector7~9_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|LCD_DATA [0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LCD_DATA[0] .lut_mask = "8000";
defparam \LCD1602|LCD_DATA[0] .operation_mode = "normal";
defparam \LCD1602|LCD_DATA[0] .output_mode = "reg_only";
defparam \LCD1602|LCD_DATA[0] .register_cascade_mode = "off";
defparam \LCD1602|LCD_DATA[0] .sum_lutc_input = "datac";
defparam \LCD1602|LCD_DATA[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y10_N6
maxii_lcell \LCD1602|Selector6~17 (
// Equation(s):
// \LCD1602|Selector6~17_combout  = (!\LCD1602|Selector6~16  & (!\LCD1602|c_state.ROW1_7~regout  & ((\comb~0_combout ) # (!\LCD1602|c_state.ROW2_2~regout ))))

	.clk(gnd),
	.dataa(\comb~0_combout ),
	.datab(\LCD1602|Selector6~16 ),
	.datac(\LCD1602|c_state.ROW2_2~regout ),
	.datad(\LCD1602|c_state.ROW1_7~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector6~17 .lut_mask = "0023";
defparam \LCD1602|Selector6~17 .operation_mode = "normal";
defparam \LCD1602|Selector6~17 .output_mode = "comb_only";
defparam \LCD1602|Selector6~17 .register_cascade_mode = "off";
defparam \LCD1602|Selector6~17 .sum_lutc_input = "datac";
defparam \LCD1602|Selector6~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y9_N4
maxii_lcell \people2_price[1][1] (
// Equation(s):
// \LCD1602|Selector6~11  = (((people2_price[1][1] & \double~combout ))) # (!\onride~combout )

	.clk(\divide1000|clk_p~regout ),
	.dataa(\onride~combout ),
	.datab(vcc),
	.datac(\seg_data[1][1]~regout ),
	.datad(\double~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~11 ),
	.regout(\people2_price[1][1]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[1][1] .lut_mask = "f555";
defparam \people2_price[1][1] .operation_mode = "normal";
defparam \people2_price[1][1] .output_mode = "comb_only";
defparam \people2_price[1][1] .register_cascade_mode = "off";
defparam \people2_price[1][1] .sum_lutc_input = "qfbk";
defparam \people2_price[1][1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y9_N6
maxii_lcell \LCD1602|Selector6~12 (
// Equation(s):
// \LCD1602|Selector6~12_combout  = (\LCD1602|Selector6~0_combout  & ((\seg_data[2][1]~regout ) # ((\LCD1602|c_state.ROW2_D~regout  & \LCD1602|Selector6~11 )))) # (!\LCD1602|Selector6~0_combout  & (\LCD1602|c_state.ROW2_D~regout  & (\LCD1602|Selector6~11 )))

	.clk(gnd),
	.dataa(\LCD1602|Selector6~0_combout ),
	.datab(\LCD1602|c_state.ROW2_D~regout ),
	.datac(\LCD1602|Selector6~11 ),
	.datad(\seg_data[2][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector6~12 .lut_mask = "eac0";
defparam \LCD1602|Selector6~12 .operation_mode = "normal";
defparam \LCD1602|Selector6~12 .output_mode = "comb_only";
defparam \LCD1602|Selector6~12 .register_cascade_mode = "off";
defparam \LCD1602|Selector6~12 .sum_lutc_input = "datac";
defparam \LCD1602|Selector6~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N0
maxii_lcell \LCD1602|Selector6~13 (
// Equation(s):
// \LCD1602|Selector6~13_combout  = (\LCD1602|c_state.ROW2_4~regout  & ((\double~combout ) # ((\seg_data[1][1]~regout ) # (!\onride~combout ))))

	.clk(gnd),
	.dataa(\double~combout ),
	.datab(\LCD1602|c_state.ROW2_4~regout ),
	.datac(\onride~combout ),
	.datad(\seg_data[1][1]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector6~13 .lut_mask = "cc8c";
defparam \LCD1602|Selector6~13 .operation_mode = "normal";
defparam \LCD1602|Selector6~13 .output_mode = "comb_only";
defparam \LCD1602|Selector6~13 .register_cascade_mode = "off";
defparam \LCD1602|Selector6~13 .sum_lutc_input = "datac";
defparam \LCD1602|Selector6~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y7_N1
maxii_lcell \LCD1602|Selector6~15 (
// Equation(s):
// \LCD1602|Selector6~15_combout  = (\LCD1602|Selector6~14 ) # ((\LCD1602|c_state.ROW1_A~regout ) # ((\LCD1602|c_state.ROW2_1~regout ) # (\LCD1602|Selector6~13_combout )))

	.clk(gnd),
	.dataa(\LCD1602|Selector6~14 ),
	.datab(\LCD1602|c_state.ROW1_A~regout ),
	.datac(\LCD1602|c_state.ROW2_1~regout ),
	.datad(\LCD1602|Selector6~13_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector6~15 .lut_mask = "fffe";
defparam \LCD1602|Selector6~15 .operation_mode = "normal";
defparam \LCD1602|Selector6~15 .output_mode = "comb_only";
defparam \LCD1602|Selector6~15 .register_cascade_mode = "off";
defparam \LCD1602|Selector6~15 .sum_lutc_input = "datac";
defparam \LCD1602|Selector6~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y9_N3
maxii_lcell \LCD1602|Selector6~10 (
// Equation(s):
// \LCD1602|Selector6~10_combout  = (\onride~combout  & ((\LCD1602|Selector6~6 ) # ((\double~combout  & \LCD1602|Selector6~9 ))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\double~combout ),
	.datac(\LCD1602|Selector6~9 ),
	.datad(\LCD1602|Selector6~6 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector6~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector6~10 .lut_mask = "aa80";
defparam \LCD1602|Selector6~10 .operation_mode = "normal";
defparam \LCD1602|Selector6~10 .output_mode = "comb_only";
defparam \LCD1602|Selector6~10 .register_cascade_mode = "off";
defparam \LCD1602|Selector6~10 .sum_lutc_input = "datac";
defparam \LCD1602|Selector6~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y9_N4
maxii_lcell \LCD1602|LCD_DATA[1] (
// Equation(s):
// \LCD1602|LCD_DATA [1] = DFFEAS(((\LCD1602|Selector6~12_combout ) # ((\LCD1602|Selector6~15_combout ) # (\LCD1602|Selector6~10_combout ))) # (!\LCD1602|Selector6~17_combout ), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , 
// , )

	.clk(\clk~combout ),
	.dataa(\LCD1602|Selector6~17_combout ),
	.datab(\LCD1602|Selector6~12_combout ),
	.datac(\LCD1602|Selector6~15_combout ),
	.datad(\LCD1602|Selector6~10_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|LCD_DATA [1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LCD_DATA[1] .lut_mask = "fffd";
defparam \LCD1602|LCD_DATA[1] .operation_mode = "normal";
defparam \LCD1602|LCD_DATA[1] .output_mode = "reg_only";
defparam \LCD1602|LCD_DATA[1] .register_cascade_mode = "off";
defparam \LCD1602|LCD_DATA[1] .sum_lutc_input = "datac";
defparam \LCD1602|LCD_DATA[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N3
maxii_lcell \LCD1602|Selector5~0 (
// Equation(s):
// \LCD1602|Selector5~0_combout  = (\LCD1602|c_state.ROW1_D~regout ) # ((\LCD1602|c_state.DISP_CLEAR~regout ) # ((\LCD1602|c_state.ROW1_B~regout ) # (!\LCD1602|Selector2~2 )))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW1_D~regout ),
	.datab(\LCD1602|c_state.DISP_CLEAR~regout ),
	.datac(\LCD1602|Selector2~2 ),
	.datad(\LCD1602|c_state.ROW1_B~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~0 .lut_mask = "ffef";
defparam \LCD1602|Selector5~0 .operation_mode = "normal";
defparam \LCD1602|Selector5~0 .output_mode = "comb_only";
defparam \LCD1602|Selector5~0 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~0 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y9_N8
maxii_lcell \people1_price[0][2] (
// Equation(s):
// \people1_price[0][2]~regout  = DFFEAS((((\seg_data[0][2]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~1_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\seg_data[0][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people1_price[0][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[0][2] .lut_mask = "ff00";
defparam \people1_price[0][2] .operation_mode = "normal";
defparam \people1_price[0][2] .output_mode = "reg_only";
defparam \people1_price[0][2] .register_cascade_mode = "off";
defparam \people1_price[0][2] .sum_lutc_input = "datac";
defparam \people1_price[0][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y9_N7
maxii_lcell \people2_price[2][2] (
// Equation(s):
// \LCD1602|Selector5~2  = (\LCD1602|c_state.ROW2_C~regout  & ((people2_price[2][2]) # ((\LCD1602|c_state.ROW2_7~regout  & \people1_price[0][2]~regout )))) # (!\LCD1602|c_state.ROW2_C~regout  & (\LCD1602|c_state.ROW2_7~regout  & ((\people1_price[0][2]~regout 
// ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(\LCD1602|c_state.ROW2_C~regout ),
	.datab(\LCD1602|c_state.ROW2_7~regout ),
	.datac(\seg_data[2][2]~regout ),
	.datad(\people1_price[0][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~2 ),
	.regout(\people2_price[2][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[2][2] .lut_mask = "eca0";
defparam \people2_price[2][2] .operation_mode = "normal";
defparam \people2_price[2][2] .output_mode = "comb_only";
defparam \people2_price[2][2] .register_cascade_mode = "off";
defparam \people2_price[2][2] .sum_lutc_input = "qfbk";
defparam \people2_price[2][2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y9_N3
maxii_lcell \people2_price[0][2] (
// Equation(s):
// \people2_price[0][2]~regout  = DFFEAS((((\seg_data[0][2]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~0_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\seg_data[0][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people2_price[0][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[0][2] .lut_mask = "ff00";
defparam \people2_price[0][2] .operation_mode = "normal";
defparam \people2_price[0][2] .output_mode = "reg_only";
defparam \people2_price[0][2] .register_cascade_mode = "off";
defparam \people2_price[0][2] .sum_lutc_input = "datac";
defparam \people2_price[0][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y9_N0
maxii_lcell \people2_price[1][2] (
// Equation(s):
// \LCD1602|Selector5~1  = (\people2_price[0][2]~regout  & ((\LCD1602|c_state.ROW2_E~regout ) # ((people2_price[1][2] & \LCD1602|c_state.ROW2_D~regout )))) # (!\people2_price[0][2]~regout  & (((people2_price[1][2] & \LCD1602|c_state.ROW2_D~regout ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(\people2_price[0][2]~regout ),
	.datab(\LCD1602|c_state.ROW2_E~regout ),
	.datac(\seg_data[1][2]~regout ),
	.datad(\LCD1602|c_state.ROW2_D~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~1 ),
	.regout(\people2_price[1][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[1][2] .lut_mask = "f888";
defparam \people2_price[1][2] .operation_mode = "normal";
defparam \people2_price[1][2] .output_mode = "comb_only";
defparam \people2_price[1][2] .register_cascade_mode = "off";
defparam \people2_price[1][2] .sum_lutc_input = "qfbk";
defparam \people2_price[1][2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X6_Y9_N1
maxii_lcell \LCD1602|Selector5~3 (
// Equation(s):
// \LCD1602|Selector5~3_combout  = (\comb~0_combout  & ((\LCD1602|c_state.ROW2_8~regout ) # ((\LCD1602|Selector5~2 ) # (\LCD1602|Selector5~1 ))))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW2_8~regout ),
	.datab(\comb~0_combout ),
	.datac(\LCD1602|Selector5~2 ),
	.datad(\LCD1602|Selector5~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~3 .lut_mask = "ccc8";
defparam \LCD1602|Selector5~3 .operation_mode = "normal";
defparam \LCD1602|Selector5~3 .output_mode = "comb_only";
defparam \LCD1602|Selector5~3 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~3 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y10_N6
maxii_lcell \LCD1602|Selector5~7 (
// Equation(s):
// \LCD1602|Selector5~7_combout  = (\LCD1602|Selector5~4 ) # ((!\onride~combout  & ((\LCD1602|Selector5~5 ) # (!\LCD1602|Selector5~6 ))))

	.clk(gnd),
	.dataa(\onride~combout ),
	.datab(\LCD1602|Selector5~6 ),
	.datac(\LCD1602|Selector5~5 ),
	.datad(\LCD1602|Selector5~4 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~7 .lut_mask = "ff51";
defparam \LCD1602|Selector5~7 .operation_mode = "normal";
defparam \LCD1602|Selector5~7 .output_mode = "comb_only";
defparam \LCD1602|Selector5~7 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~7 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N4
maxii_lcell \LCD1602|Selector5~12 (
// Equation(s):
// \LCD1602|Selector5~12_combout  = (\LCD1602|c_state.ROW1_0~regout  & ((\seg_data[6][2]~regout ) # ((\LCD1602|c_state.ROW1_5~regout  & \seg_data[4][2]~regout )))) # (!\LCD1602|c_state.ROW1_0~regout  & (((\LCD1602|c_state.ROW1_5~regout  & 
// \seg_data[4][2]~regout ))))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW1_0~regout ),
	.datab(\seg_data[6][2]~regout ),
	.datac(\LCD1602|c_state.ROW1_5~regout ),
	.datad(\seg_data[4][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~12_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~12 .lut_mask = "f888";
defparam \LCD1602|Selector5~12 .operation_mode = "normal";
defparam \LCD1602|Selector5~12 .output_mode = "comb_only";
defparam \LCD1602|Selector5~12 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~12 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~12 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y8_N6
maxii_lcell \people1_price[2][2] (
// Equation(s):
// \people1_price[2][2]~regout  = DFFEAS((((\seg_data[2][2]~regout ))), GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~1_combout , , , , )

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(\seg_data[2][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people1_price[2][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[2][2] .lut_mask = "ff00";
defparam \people1_price[2][2] .operation_mode = "normal";
defparam \people1_price[2][2] .output_mode = "reg_only";
defparam \people1_price[2][2] .register_cascade_mode = "off";
defparam \people1_price[2][2] .sum_lutc_input = "datac";
defparam \people1_price[2][2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y8_N3
maxii_lcell \people1_price[1][2] (
// Equation(s):
// \LCD1602|Selector5~13  = (\people1_price[2][2]~regout  & ((\LCD1602|c_state.ROW2_5~regout ) # ((\LCD1602|c_state.ROW2_6~regout  & people1_price[1][2])))) # (!\people1_price[2][2]~regout  & (\LCD1602|c_state.ROW2_6~regout  & (people1_price[1][2])))

	.clk(\divide1000|clk_p~regout ),
	.dataa(\people1_price[2][2]~regout ),
	.datab(\LCD1602|c_state.ROW2_6~regout ),
	.datac(\seg_data[1][2]~regout ),
	.datad(\LCD1602|c_state.ROW2_5~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~13 ),
	.regout(\people1_price[1][2]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[1][2] .lut_mask = "eac0";
defparam \people1_price[1][2] .operation_mode = "normal";
defparam \people1_price[1][2] .output_mode = "comb_only";
defparam \people1_price[1][2] .register_cascade_mode = "off";
defparam \people1_price[1][2] .sum_lutc_input = "qfbk";
defparam \people1_price[1][2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y8_N2
maxii_lcell \LCD1602|Selector5~14 (
// Equation(s):
// \LCD1602|Selector5~14_combout  = (\LCD1602|c_state.ROW2_3~regout  & ((\seg_data[2][2]~regout ) # ((\LCD1602|c_state.ROW2_5~regout  & \seg_data[0][2]~regout )))) # (!\LCD1602|c_state.ROW2_3~regout  & (((\LCD1602|c_state.ROW2_5~regout  & 
// \seg_data[0][2]~regout ))))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW2_3~regout ),
	.datab(\seg_data[2][2]~regout ),
	.datac(\LCD1602|c_state.ROW2_5~regout ),
	.datad(\seg_data[0][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~14 .lut_mask = "f888";
defparam \LCD1602|Selector5~14 .operation_mode = "normal";
defparam \LCD1602|Selector5~14 .output_mode = "comb_only";
defparam \LCD1602|Selector5~14 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~14 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N0
maxii_lcell \LCD1602|Selector5~15 (
// Equation(s):
// \LCD1602|Selector5~15_combout  = (\LCD1602|Selector5~12_combout ) # ((\double~combout  & (\LCD1602|Selector5~13 )) # (!\double~combout  & ((\LCD1602|Selector5~14_combout ))))

	.clk(gnd),
	.dataa(\LCD1602|Selector5~12_combout ),
	.datab(\double~combout ),
	.datac(\LCD1602|Selector5~13 ),
	.datad(\LCD1602|Selector5~14_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~15_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~15 .lut_mask = "fbea";
defparam \LCD1602|Selector5~15 .operation_mode = "normal";
defparam \LCD1602|Selector5~15 .output_mode = "comb_only";
defparam \LCD1602|Selector5~15 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~15 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~15 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N8
maxii_lcell \LCD1602|Selector5~8 (
// Equation(s):
// \LCD1602|Selector5~8_combout  = (\seg_data[1][2]~regout  & (!\double~combout  & (\LCD1602|c_state.ROW2_4~regout  & \onride~combout )))

	.clk(gnd),
	.dataa(\seg_data[1][2]~regout ),
	.datab(\double~combout ),
	.datac(\LCD1602|c_state.ROW2_4~regout ),
	.datad(\onride~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~8 .lut_mask = "2000";
defparam \LCD1602|Selector5~8 .operation_mode = "normal";
defparam \LCD1602|Selector5~8 .output_mode = "comb_only";
defparam \LCD1602|Selector5~8 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~8 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y9_N2
maxii_lcell \LCD1602|Selector5~9 (
// Equation(s):
// \LCD1602|Selector5~9_combout  = (\seg_data[3][2]~regout  & ((\LCD1602|c_state.ROW1_6~regout ) # ((\LCD1602|c_state.ROW1_4~regout  & \seg_data[5][2]~regout )))) # (!\seg_data[3][2]~regout  & (\LCD1602|c_state.ROW1_4~regout  & ((\seg_data[5][2]~regout ))))

	.clk(gnd),
	.dataa(\seg_data[3][2]~regout ),
	.datab(\LCD1602|c_state.ROW1_4~regout ),
	.datac(\LCD1602|c_state.ROW1_6~regout ),
	.datad(\seg_data[5][2]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~9 .lut_mask = "eca0";
defparam \LCD1602|Selector5~9 .operation_mode = "normal";
defparam \LCD1602|Selector5~9 .output_mode = "comb_only";
defparam \LCD1602|Selector5~9 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~9 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N5
maxii_lcell \LCD1602|Selector5~11 (
// Equation(s):
// \LCD1602|Selector5~11_combout  = (\LCD1602|Selector5~8_combout ) # ((\onride~combout  & ((\LCD1602|Selector5~9_combout ) # (\LCD1602|Selector5~10 ))))

	.clk(gnd),
	.dataa(\LCD1602|Selector5~8_combout ),
	.datab(\onride~combout ),
	.datac(\LCD1602|Selector5~9_combout ),
	.datad(\LCD1602|Selector5~10 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~11 .lut_mask = "eeea";
defparam \LCD1602|Selector5~11 .operation_mode = "normal";
defparam \LCD1602|Selector5~11 .output_mode = "comb_only";
defparam \LCD1602|Selector5~11 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~11 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N6
maxii_lcell \LCD1602|Selector5~16 (
// Equation(s):
// \LCD1602|Selector5~16_combout  = (\LCD1602|Selector5~3_combout ) # ((\LCD1602|Selector5~7_combout ) # ((\LCD1602|Selector5~15_combout ) # (\LCD1602|Selector5~11_combout )))

	.clk(gnd),
	.dataa(\LCD1602|Selector5~3_combout ),
	.datab(\LCD1602|Selector5~7_combout ),
	.datac(\LCD1602|Selector5~15_combout ),
	.datad(\LCD1602|Selector5~11_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector5~16_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector5~16 .lut_mask = "fffe";
defparam \LCD1602|Selector5~16 .operation_mode = "normal";
defparam \LCD1602|Selector5~16 .output_mode = "comb_only";
defparam \LCD1602|Selector5~16 .register_cascade_mode = "off";
defparam \LCD1602|Selector5~16 .sum_lutc_input = "datac";
defparam \LCD1602|Selector5~16 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y8_N7
maxii_lcell \LCD1602|LCD_DATA[2] (
// Equation(s):
// \LCD1602|LCD_DATA [2] = DFFEAS((\LCD1602|c_state.ENTRY_MODE~regout ) # (((\LCD1602|Selector5~0_combout ) # (\LCD1602|Selector5~16_combout )) # (!\LCD1602|Selector2~3 )), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\LCD1602|c_state.ENTRY_MODE~regout ),
	.datab(\LCD1602|Selector2~3 ),
	.datac(\LCD1602|Selector5~0_combout ),
	.datad(\LCD1602|Selector5~16_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|LCD_DATA [2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LCD_DATA[2] .lut_mask = "fffb";
defparam \LCD1602|LCD_DATA[2] .operation_mode = "normal";
defparam \LCD1602|LCD_DATA[2] .output_mode = "reg_only";
defparam \LCD1602|LCD_DATA[2] .register_cascade_mode = "off";
defparam \LCD1602|LCD_DATA[2] .sum_lutc_input = "datac";
defparam \LCD1602|LCD_DATA[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y10_N2
maxii_lcell \people2_price[0][3] (
// Equation(s):
// \people2_price[0][3]~regout  = DFFEAS(GND, GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~0_combout , \seg_data[0][3]~regout , , , VCC)

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[0][3]~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people2_price[0][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[0][3] .lut_mask = "0000";
defparam \people2_price[0][3] .operation_mode = "normal";
defparam \people2_price[0][3] .output_mode = "reg_only";
defparam \people2_price[0][3] .register_cascade_mode = "off";
defparam \people2_price[0][3] .sum_lutc_input = "datac";
defparam \people2_price[0][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X7_Y10_N5
maxii_lcell \people2_price[1][3] (
// Equation(s):
// \LCD1602|Selector4~6  = (\LCD1602|c_state.ROW2_D~regout  & ((people2_price[1][3]) # ((\LCD1602|c_state.ROW2_E~regout  & \people2_price[0][3]~regout )))) # (!\LCD1602|c_state.ROW2_D~regout  & (\LCD1602|c_state.ROW2_E~regout  & ((\people2_price[0][3]~regout 
// ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(\LCD1602|c_state.ROW2_D~regout ),
	.datab(\LCD1602|c_state.ROW2_E~regout ),
	.datac(\seg_data[1][3]~regout ),
	.datad(\people2_price[0][3]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~0_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~6 ),
	.regout(\people2_price[1][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people2_price[1][3] .lut_mask = "eca0";
defparam \people2_price[1][3] .operation_mode = "normal";
defparam \people2_price[1][3] .output_mode = "comb_only";
defparam \people2_price[1][3] .register_cascade_mode = "off";
defparam \people2_price[1][3] .sum_lutc_input = "qfbk";
defparam \people2_price[1][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y8_N9
maxii_lcell \people1_price[0][3] (
// Equation(s):
// \people1_price[0][3]~regout  = DFFEAS(GND, GLOBAL(\divide1000|clk_p~regout ), VCC, , \people2_price[0][0]~1_combout , \seg_data[0][3]~regout , , , VCC)

	.clk(\divide1000|clk_p~regout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\seg_data[0][3]~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\people1_price[0][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[0][3] .lut_mask = "0000";
defparam \people1_price[0][3] .operation_mode = "normal";
defparam \people1_price[0][3] .output_mode = "reg_only";
defparam \people1_price[0][3] .register_cascade_mode = "off";
defparam \people1_price[0][3] .sum_lutc_input = "datac";
defparam \people1_price[0][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y8_N5
maxii_lcell \people1_price[1][3] (
// Equation(s):
// \LCD1602|Selector4~7  = (\LCD1602|c_state.ROW2_7~regout  & ((\people1_price[0][3]~regout ) # ((people1_price[1][3] & \LCD1602|c_state.ROW2_6~regout )))) # (!\LCD1602|c_state.ROW2_7~regout  & (((people1_price[1][3] & \LCD1602|c_state.ROW2_6~regout ))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(\LCD1602|c_state.ROW2_7~regout ),
	.datab(\people1_price[0][3]~regout ),
	.datac(\seg_data[1][3]~regout ),
	.datad(\LCD1602|c_state.ROW2_6~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~7 ),
	.regout(\people1_price[1][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[1][3] .lut_mask = "f888";
defparam \people1_price[1][3] .operation_mode = "normal";
defparam \people1_price[1][3] .output_mode = "comb_only";
defparam \people1_price[1][3] .register_cascade_mode = "off";
defparam \people1_price[1][3] .sum_lutc_input = "qfbk";
defparam \people1_price[1][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X8_Y7_N9
maxii_lcell \LCD1602|Selector4~8 (
// Equation(s):
// \LCD1602|Selector4~8_combout  = (\comb~0_combout  & ((\LCD1602|c_state.ROW2_8~regout ) # ((\LCD1602|Selector4~6 ) # (\LCD1602|Selector4~7 ))))

	.clk(gnd),
	.dataa(\comb~0_combout ),
	.datab(\LCD1602|c_state.ROW2_8~regout ),
	.datac(\LCD1602|Selector4~6 ),
	.datad(\LCD1602|Selector4~7 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~8 .lut_mask = "aaa8";
defparam \LCD1602|Selector4~8 .operation_mode = "normal";
defparam \LCD1602|Selector4~8 .output_mode = "comb_only";
defparam \LCD1602|Selector4~8 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~8 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y10_N8
maxii_lcell \LCD1602|Selector4~9 (
// Equation(s):
// \LCD1602|Selector4~9_combout  = (\mile_v~combout [0] & (\mile_v~combout [1] & (\LCD1602|c_state.ROW1_9~regout  & \mile_v~combout [2])))

	.clk(gnd),
	.dataa(\mile_v~combout [0]),
	.datab(\mile_v~combout [1]),
	.datac(\LCD1602|c_state.ROW1_9~regout ),
	.datad(\mile_v~combout [2]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~9 .lut_mask = "8000";
defparam \LCD1602|Selector4~9 .operation_mode = "normal";
defparam \LCD1602|Selector4~9 .output_mode = "comb_only";
defparam \LCD1602|Selector4~9 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~9 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y10_N3
maxii_lcell \LCD1602|Selector4~10 (
// Equation(s):
// \LCD1602|Selector4~10_combout  = (\LCD1602|c_state.ROW1_9~regout ) # ((\LCD1602|c_state.ROW2_9~regout ) # ((\LCD1602|c_state.ROW2_1~regout ) # (\LCD1602|c_state.ROW1_5~regout )))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW1_9~regout ),
	.datab(\LCD1602|c_state.ROW2_9~regout ),
	.datac(\LCD1602|c_state.ROW2_1~regout ),
	.datad(\LCD1602|c_state.ROW1_5~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~10 .lut_mask = "fffe";
defparam \LCD1602|Selector4~10 .operation_mode = "normal";
defparam \LCD1602|Selector4~10 .output_mode = "comb_only";
defparam \LCD1602|Selector4~10 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~10 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y10_N0
maxii_lcell \LCD1602|Selector4~11 (
// Equation(s):
// \LCD1602|Selector4~11_combout  = (\LCD1602|Selector4~9_combout ) # ((!\onride~combout  & ((\LCD1602|Selector4~10_combout ) # (\LCD1602|c_state.ROW2_C~regout ))))

	.clk(gnd),
	.dataa(\LCD1602|Selector4~9_combout ),
	.datab(\onride~combout ),
	.datac(\LCD1602|Selector4~10_combout ),
	.datad(\LCD1602|c_state.ROW2_C~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~11 .lut_mask = "bbba";
defparam \LCD1602|Selector4~11 .operation_mode = "normal";
defparam \LCD1602|Selector4~11 .output_mode = "comb_only";
defparam \LCD1602|Selector4~11 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~11 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N8
maxii_lcell \LCD1602|Selector4~1 (
// Equation(s):
// \LCD1602|Selector4~1_combout  = (\LCD1602|c_state.ROW1_4~regout  & (((\seg_data[3][3]~regout  & \LCD1602|c_state.ROW1_6~regout )) # (!\seg_data[5][3]~regout ))) # (!\LCD1602|c_state.ROW1_4~regout  & (\seg_data[3][3]~regout  & 
// ((\LCD1602|c_state.ROW1_6~regout ))))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW1_4~regout ),
	.datab(\seg_data[3][3]~regout ),
	.datac(\seg_data[5][3]~regout ),
	.datad(\LCD1602|c_state.ROW1_6~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~1 .lut_mask = "ce0a";
defparam \LCD1602|Selector4~1 .operation_mode = "normal";
defparam \LCD1602|Selector4~1 .output_mode = "comb_only";
defparam \LCD1602|Selector4~1 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~1 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y8_N5
maxii_lcell \people1_price[2][3] (
// Equation(s):
// \LCD1602|Selector4~0  = (\LCD1602|c_state.ROW2_5~regout  & ((\double~combout  & (people1_price[2][3])) # (!\double~combout  & ((\seg_data[0][3]~regout )))))

	.clk(\divide1000|clk_p~regout ),
	.dataa(\LCD1602|c_state.ROW2_5~regout ),
	.datab(\double~combout ),
	.datac(\seg_data[2][3]~regout ),
	.datad(\seg_data[0][3]~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(vcc),
	.ena(\people2_price[0][0]~1_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~0 ),
	.regout(\people1_price[2][3]~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \people1_price[2][3] .lut_mask = "a280";
defparam \people1_price[2][3] .operation_mode = "normal";
defparam \people1_price[2][3] .output_mode = "comb_only";
defparam \people1_price[2][3] .register_cascade_mode = "off";
defparam \people1_price[2][3] .sum_lutc_input = "qfbk";
defparam \people1_price[2][3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X9_Y7_N6
maxii_lcell \LCD1602|Selector4~4 (
// Equation(s):
// \LCD1602|Selector4~4_combout  = (\LCD1602|Selector4~1_combout ) # ((\LCD1602|Selector4~2 ) # ((\LCD1602|Selector4~0 ) # (\LCD1602|Selector4~3 )))

	.clk(gnd),
	.dataa(\LCD1602|Selector4~1_combout ),
	.datab(\LCD1602|Selector4~2 ),
	.datac(\LCD1602|Selector4~0 ),
	.datad(\LCD1602|Selector4~3 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~4 .lut_mask = "fffe";
defparam \LCD1602|Selector4~4 .operation_mode = "normal";
defparam \LCD1602|Selector4~4 .output_mode = "comb_only";
defparam \LCD1602|Selector4~4 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~4 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N7
maxii_lcell \LCD1602|Selector4~5 (
// Equation(s):
// \LCD1602|Selector4~5_combout  = (\onride~combout  & ((\LCD1602|c_state.ROW1_D~regout ) # ((\LCD1602|c_state.ROW1_1~regout ) # (\LCD1602|Selector4~4_combout ))))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW1_D~regout ),
	.datab(\LCD1602|c_state.ROW1_1~regout ),
	.datac(\LCD1602|Selector4~4_combout ),
	.datad(\onride~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~5 .lut_mask = "fe00";
defparam \LCD1602|Selector4~5 .operation_mode = "normal";
defparam \LCD1602|Selector4~5 .output_mode = "comb_only";
defparam \LCD1602|Selector4~5 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~5 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N3
maxii_lcell \LCD1602|Selector4~14 (
// Equation(s):
// \LCD1602|Selector4~14_combout  = (\LCD1602|c_state.ROW1_C~regout ) # ((\LCD1602|c_state.ROW1_2~regout ) # ((\seg_data[4][3]~regout  & \LCD1602|c_state.ROW1_5~regout )))

	.clk(gnd),
	.dataa(\seg_data[4][3]~regout ),
	.datab(\LCD1602|c_state.ROW1_C~regout ),
	.datac(\LCD1602|c_state.ROW1_2~regout ),
	.datad(\LCD1602|c_state.ROW1_5~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~14_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~14 .lut_mask = "fefc";
defparam \LCD1602|Selector4~14 .operation_mode = "normal";
defparam \LCD1602|Selector4~14 .output_mode = "comb_only";
defparam \LCD1602|Selector4~14 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~14 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~14 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y8_N8
maxii_lcell \LCD1602|Selector4~13 (
// Equation(s):
// \LCD1602|Selector4~13_combout  = (\onride~combout  & (\double~combout  & ((\LCD1602|c_state.ROW2_B~regout )))) # (!\onride~combout  & (((\LCD1602|c_state.ROW1_3~regout ) # (\LCD1602|c_state.ROW2_B~regout ))))

	.clk(gnd),
	.dataa(\double~combout ),
	.datab(\LCD1602|c_state.ROW1_3~regout ),
	.datac(\onride~combout ),
	.datad(\LCD1602|c_state.ROW2_B~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~13_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~13 .lut_mask = "af0c";
defparam \LCD1602|Selector4~13 .operation_mode = "normal";
defparam \LCD1602|Selector4~13 .output_mode = "comb_only";
defparam \LCD1602|Selector4~13 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~13 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~13 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X10_Y7_N1
maxii_lcell \LCD1602|Selector4~17 (
// Equation(s):
// \LCD1602|Selector4~17_combout  = (\LCD1602|Selector4~14_combout ) # ((\LCD1602|Selector4~13_combout ) # ((\LCD1602|Selector4~16 ) # (\LCD1602|Selector4~12 )))

	.clk(gnd),
	.dataa(\LCD1602|Selector4~14_combout ),
	.datab(\LCD1602|Selector4~13_combout ),
	.datac(\LCD1602|Selector4~16 ),
	.datad(\LCD1602|Selector4~12 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~17_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~17 .lut_mask = "fffe";
defparam \LCD1602|Selector4~17 .operation_mode = "normal";
defparam \LCD1602|Selector4~17 .output_mode = "comb_only";
defparam \LCD1602|Selector4~17 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~17 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~17 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y7_N4
maxii_lcell \LCD1602|LCD_DATA[3] (
// Equation(s):
// \LCD1602|LCD_DATA [3] = DFFEAS((\LCD1602|Selector4~8_combout ) # ((\LCD1602|Selector4~11_combout ) # ((\LCD1602|Selector4~5_combout ) # (\LCD1602|Selector4~17_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , , 
// )

	.clk(\clk~combout ),
	.dataa(\LCD1602|Selector4~8_combout ),
	.datab(\LCD1602|Selector4~11_combout ),
	.datac(\LCD1602|Selector4~5_combout ),
	.datad(\LCD1602|Selector4~17_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|LCD_DATA [3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LCD_DATA[3] .lut_mask = "fffe";
defparam \LCD1602|LCD_DATA[3] .operation_mode = "normal";
defparam \LCD1602|LCD_DATA[3] .output_mode = "reg_only";
defparam \LCD1602|LCD_DATA[3] .register_cascade_mode = "off";
defparam \LCD1602|LCD_DATA[3] .sum_lutc_input = "datac";
defparam \LCD1602|LCD_DATA[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y10_N0
maxii_lcell \LCD1602|Selector3~6 (
// Equation(s):
// \LCD1602|Selector3~6_combout  = ((\LCD1602|c_state.ROW1_0~regout ) # ((\LCD1602|c_state.ROW2_4~regout ) # (!\LCD1602|c_state.IDLE~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\LCD1602|c_state.ROW1_0~regout ),
	.datac(\LCD1602|c_state.ROW2_4~regout ),
	.datad(\LCD1602|c_state.IDLE~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector3~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector3~6 .lut_mask = "fcff";
defparam \LCD1602|Selector3~6 .operation_mode = "normal";
defparam \LCD1602|Selector3~6 .output_mode = "comb_only";
defparam \LCD1602|Selector3~6 .register_cascade_mode = "off";
defparam \LCD1602|Selector3~6 .sum_lutc_input = "datac";
defparam \LCD1602|Selector3~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X8_Y10_N9
maxii_lcell \LCD1602|Selector3~2 (
// Equation(s):
// \LCD1602|Selector3~2_combout  = (\LCD1602|Selector3~0 ) # ((\onride~combout  & ((\LCD1602|Selector3~1 ) # (!\LCD1602|Selector5~6 ))))

	.clk(gnd),
	.dataa(\LCD1602|Selector3~0 ),
	.datab(\LCD1602|Selector5~6 ),
	.datac(\onride~combout ),
	.datad(\LCD1602|Selector3~1 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector3~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector3~2 .lut_mask = "faba";
defparam \LCD1602|Selector3~2 .operation_mode = "normal";
defparam \LCD1602|Selector3~2 .output_mode = "comb_only";
defparam \LCD1602|Selector3~2 .register_cascade_mode = "off";
defparam \LCD1602|Selector3~2 .sum_lutc_input = "datac";
defparam \LCD1602|Selector3~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X9_Y10_N9
maxii_lcell \LCD1602|Selector3~5 (
// Equation(s):
// \LCD1602|Selector3~5_combout  = (\LCD1602|Selector3~3 ) # ((\comb~0_combout  & ((\LCD1602|Selector3~4 ) # (\LCD1602|c_state.ROW2_E~regout ))))

	.clk(gnd),
	.dataa(\comb~0_combout ),
	.datab(\LCD1602|Selector3~4 ),
	.datac(\LCD1602|c_state.ROW2_E~regout ),
	.datad(\LCD1602|Selector3~3 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector3~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector3~5 .lut_mask = "ffa8";
defparam \LCD1602|Selector3~5 .operation_mode = "normal";
defparam \LCD1602|Selector3~5 .output_mode = "comb_only";
defparam \LCD1602|Selector3~5 .register_cascade_mode = "off";
defparam \LCD1602|Selector3~5 .sum_lutc_input = "datac";
defparam \LCD1602|Selector3~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y10_N8
maxii_lcell \LCD1602|LCD_DATA[4] (
// Equation(s):
// \LCD1602|LCD_DATA [4] = DFFEAS((\LCD1602|Selector3~6_combout ) # (((\LCD1602|Selector3~2_combout ) # (\LCD1602|Selector3~5_combout )) # (!\LCD1602|Selector6~17_combout )), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , , 
// )

	.clk(\clk~combout ),
	.dataa(\LCD1602|Selector3~6_combout ),
	.datab(\LCD1602|Selector6~17_combout ),
	.datac(\LCD1602|Selector3~2_combout ),
	.datad(\LCD1602|Selector3~5_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|LCD_DATA [4]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LCD_DATA[4] .lut_mask = "fffb";
defparam \LCD1602|LCD_DATA[4] .operation_mode = "normal";
defparam \LCD1602|LCD_DATA[4] .output_mode = "reg_only";
defparam \LCD1602|LCD_DATA[4] .register_cascade_mode = "off";
defparam \LCD1602|LCD_DATA[4] .sum_lutc_input = "datac";
defparam \LCD1602|LCD_DATA[4] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X12_Y9_N7
maxii_lcell \LCD1602|Selector2~6 (
// Equation(s):
// \LCD1602|Selector2~6_combout  = (\LCD1602|Selector2~5  & (!\LCD1602|c_state.ROW2_0~regout  & (!\LCD1602|c_state.ROW1_F~regout )))

	.clk(gnd),
	.dataa(\LCD1602|Selector2~5 ),
	.datab(\LCD1602|c_state.ROW2_0~regout ),
	.datac(\LCD1602|c_state.ROW1_F~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector2~6 .lut_mask = "0202";
defparam \LCD1602|Selector2~6 .operation_mode = "normal";
defparam \LCD1602|Selector2~6 .output_mode = "comb_only";
defparam \LCD1602|Selector2~6 .register_cascade_mode = "off";
defparam \LCD1602|Selector2~6 .sum_lutc_input = "datac";
defparam \LCD1602|Selector2~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y9_N2
maxii_lcell \LCD1602|Selector2~7 (
// Equation(s):
// \LCD1602|Selector2~7_combout  = (\LCD1602|Selector2~4  & (\LCD1602|Selector2~3  & (!\LCD1602|Selector6~16  & \LCD1602|Selector2~6_combout )))

	.clk(gnd),
	.dataa(\LCD1602|Selector2~4 ),
	.datab(\LCD1602|Selector2~3 ),
	.datac(\LCD1602|Selector6~16 ),
	.datad(\LCD1602|Selector2~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector2~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector2~7 .lut_mask = "0800";
defparam \LCD1602|Selector2~7 .operation_mode = "normal";
defparam \LCD1602|Selector2~7 .output_mode = "comb_only";
defparam \LCD1602|Selector2~7 .register_cascade_mode = "off";
defparam \LCD1602|Selector2~7 .sum_lutc_input = "datac";
defparam \LCD1602|Selector2~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y9_N5
maxii_lcell \LCD1602|LCD_DATA[5] (
// Equation(s):
// \LCD1602|LCD_DATA [5] = DFFEAS((\LCD1602|Selector2~2  & (\LCD1602|Selector2~9  & (\LCD1602|Selector2~0  & \LCD1602|Selector2~7_combout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(\LCD1602|Selector2~2 ),
	.datab(\LCD1602|Selector2~9 ),
	.datac(\LCD1602|Selector2~0 ),
	.datad(\LCD1602|Selector2~7_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|LCD_DATA [5]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LCD_DATA[5] .lut_mask = "8000";
defparam \LCD1602|LCD_DATA[5] .operation_mode = "normal";
defparam \LCD1602|LCD_DATA[5] .output_mode = "reg_only";
defparam \LCD1602|LCD_DATA[5] .register_cascade_mode = "off";
defparam \LCD1602|LCD_DATA[5] .sum_lutc_input = "datac";
defparam \LCD1602|LCD_DATA[5] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y9_N6
maxii_lcell \LCD1602|Selector4~19 (
// Equation(s):
// \LCD1602|Selector4~19_combout  = ((!\LCD1602|c_state.ROW1_2~regout  & ((!\LCD1602|c_state.ROW1_C~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\LCD1602|c_state.ROW1_2~regout ),
	.datac(vcc),
	.datad(\LCD1602|c_state.ROW1_C~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector4~19_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector4~19 .lut_mask = "0033";
defparam \LCD1602|Selector4~19 .operation_mode = "normal";
defparam \LCD1602|Selector4~19 .output_mode = "comb_only";
defparam \LCD1602|Selector4~19 .register_cascade_mode = "off";
defparam \LCD1602|Selector4~19 .sum_lutc_input = "datac";
defparam \LCD1602|Selector4~19 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y9_N0
maxii_lcell \LCD1602|Selector1~2 (
// Equation(s):
// \LCD1602|Selector1~2_combout  = (\LCD1602|c_state.ROW1_7~regout ) # (((!\onride~combout  & \LCD1602|Selector1~1 )) # (!\LCD1602|Selector2~8 ))

	.clk(gnd),
	.dataa(\LCD1602|c_state.ROW1_7~regout ),
	.datab(\onride~combout ),
	.datac(\LCD1602|Selector1~1 ),
	.datad(\LCD1602|Selector2~8 ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\LCD1602|Selector1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|Selector1~2 .lut_mask = "baff";
defparam \LCD1602|Selector1~2 .operation_mode = "normal";
defparam \LCD1602|Selector1~2 .output_mode = "comb_only";
defparam \LCD1602|Selector1~2 .register_cascade_mode = "off";
defparam \LCD1602|Selector1~2 .sum_lutc_input = "datac";
defparam \LCD1602|Selector1~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y9_N3
maxii_lcell \LCD1602|LCD_DATA[6] (
// Equation(s):
// \LCD1602|LCD_DATA [6] = DFFEAS(((\LCD1602|c_state.ROW2_1~regout ) # ((\LCD1602|Selector1~2_combout ) # (!\LCD1602|Selector2~7_combout ))) # (!\LCD1602|Selector4~19_combout ), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , 
// , )

	.clk(\clk~combout ),
	.dataa(\LCD1602|Selector4~19_combout ),
	.datab(\LCD1602|c_state.ROW2_1~regout ),
	.datac(\LCD1602|Selector1~2_combout ),
	.datad(\LCD1602|Selector2~7_combout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|LCD_DATA [6]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LCD_DATA[6] .lut_mask = "fdff";
defparam \LCD1602|LCD_DATA[6] .operation_mode = "normal";
defparam \LCD1602|LCD_DATA[6] .output_mode = "reg_only";
defparam \LCD1602|LCD_DATA[6] .register_cascade_mode = "off";
defparam \LCD1602|LCD_DATA[6] .sum_lutc_input = "datac";
defparam \LCD1602|LCD_DATA[6] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X11_Y7_N9
maxii_lcell \LCD1602|LCD_DATA[7] (
// Equation(s):
// \LCD1602|LCD_DATA [7] = DFFEAS(((\LCD1602|c_state.DISP_ON~regout ) # ((\LCD1602|c_state.ROW1_F~regout ) # (\LCD1602|c_state.ROW2_F~regout ))), GLOBAL(\clk~combout ), !GLOBAL(\rst~combout ), , \LCD1602|Equal1~6_combout , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\LCD1602|c_state.DISP_ON~regout ),
	.datac(\LCD1602|c_state.ROW1_F~regout ),
	.datad(\LCD1602|c_state.ROW2_F~regout ),
	.aclr(\rst~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(\LCD1602|Equal1~6_combout ),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\LCD1602|LCD_DATA [7]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \LCD1602|LCD_DATA[7] .lut_mask = "fffc";
defparam \LCD1602|LCD_DATA[7] .operation_mode = "normal";
defparam \LCD1602|LCD_DATA[7] .output_mode = "reg_only";
defparam \LCD1602|LCD_DATA[7] .register_cascade_mode = "off";
defparam \LCD1602|LCD_DATA[7] .sum_lutc_input = "datac";
defparam \LCD1602|LCD_DATA[7] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_63,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_cat[0]~I (
	.datain(\seg_cat[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seg_cat[0]));
// synopsys translate_off
defparam \seg_cat[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_66,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_cat[1]~I (
	.datain(\seg_cat[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seg_cat[1]));
// synopsys translate_off
defparam \seg_cat[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_67,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_cat[2]~I (
	.datain(\seg_cat[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seg_cat[2]));
// synopsys translate_off
defparam \seg_cat[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_68,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_cat[3]~I (
	.datain(\seg_cat[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seg_cat[3]));
// synopsys translate_off
defparam \seg_cat[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_69,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_cat[4]~I (
	.datain(\seg_cat[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seg_cat[4]));
// synopsys translate_off
defparam \seg_cat[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_70,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_cat[5]~I (
	.datain(\seg_cat[5]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seg_cat[5]));
// synopsys translate_off
defparam \seg_cat[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_30,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_cat[6]~I (
	.datain(\seg_cat[6]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seg_cat[6]));
// synopsys translate_off
defparam \seg_cat[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_31,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_cat[7]~I (
	.datain(\seg_cat[7]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(seg_cat[7]));
// synopsys translate_off
defparam \seg_cat[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_62,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_AX[0]~I (
	.datain(!\seg_high|seg~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(seg_AX[0]));
// synopsys translate_off
defparam \seg_AX[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_59,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_AX[1]~I (
	.datain(!\seg_high|seg~1_combout ),
	.oe(vcc),
	.combout(),
	.padio(seg_AX[1]));
// synopsys translate_off
defparam \seg_AX[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_58,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_AX[2]~I (
	.datain(!\seg_high|seg~2_combout ),
	.oe(vcc),
	.combout(),
	.padio(seg_AX[2]));
// synopsys translate_off
defparam \seg_AX[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_57,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_AX[3]~I (
	.datain(!\seg_high|seg~3_combout ),
	.oe(vcc),
	.combout(),
	.padio(seg_AX[3]));
// synopsys translate_off
defparam \seg_AX[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_55,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_AX[4]~I (
	.datain(!\seg_high|seg~4_combout ),
	.oe(vcc),
	.combout(),
	.padio(seg_AX[4]));
// synopsys translate_off
defparam \seg_AX[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_53,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_AX[5]~I (
	.datain(!\seg_high|seg~5_combout ),
	.oe(vcc),
	.combout(),
	.padio(seg_AX[5]));
// synopsys translate_off
defparam \seg_AX[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_52,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_AX[6]~I (
	.datain(\seg_high|seg~6_combout ),
	.oe(vcc),
	.combout(),
	.padio(seg_AX[6]));
// synopsys translate_off
defparam \seg_AX[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_51,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \seg_AX[7]~I (
	.datain(gnd),
	.oe(vcc),
	.combout(),
	.padio(seg_AX[7]));
// synopsys translate_off
defparam \seg_AX[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_80,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \speed_led[0]~I (
	.datain(\onride~combout ),
	.oe(vcc),
	.combout(),
	.padio(speed_led[0]));
// synopsys translate_off
defparam \speed_led[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_79,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \speed_led[1]~I (
	.datain(!\speedLED|led[1]~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(speed_led[1]));
// synopsys translate_off
defparam \speed_led[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_78,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \speed_led[2]~I (
	.datain(!\speedLED|led[2]~1_combout ),
	.oe(vcc),
	.combout(),
	.padio(speed_led[2]));
// synopsys translate_off
defparam \speed_led[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_77,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \speed_led[3]~I (
	.datain(\speedLED|led[3]~2_combout ),
	.oe(vcc),
	.combout(),
	.padio(speed_led[3]));
// synopsys translate_off
defparam \speed_led[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_76,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \speed_led[4]~I (
	.datain(\speedLED|led[4]~3_combout ),
	.oe(vcc),
	.combout(),
	.padio(speed_led[4]));
// synopsys translate_off
defparam \speed_led[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_75,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \speed_led[5]~I (
	.datain(\speedLED|led[5]~4_combout ),
	.oe(vcc),
	.combout(),
	.padio(speed_led[5]));
// synopsys translate_off
defparam \speed_led[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_74,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \speed_led[6]~I (
	.datain(\speedLED|led[6]~5_combout ),
	.oe(vcc),
	.combout(),
	.padio(speed_led[6]));
// synopsys translate_off
defparam \speed_led[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_73,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \speed_led[7]~I (
	.datain(\speedLED|led[7]~6_combout ),
	.oe(vcc),
	.combout(),
	.padio(speed_led[7]));
// synopsys translate_off
defparam \speed_led[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_139,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \night_led~I (
	.datain(\night~combout ),
	.oe(vcc),
	.combout(),
	.padio(night_led));
// synopsys translate_off
defparam \night_led~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_138,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \double_led~I (
	.datain(\double~combout ),
	.oe(vcc),
	.combout(),
	.padio(double_led));
// synopsys translate_off
defparam \double_led~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_137,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \ride_led~I (
	.datain(!\onride~combout ),
	.oe(vcc),
	.combout(),
	.padio(ride_led));
// synopsys translate_off
defparam \ride_led~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_60,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \clk_sound~I (
	.datain(\soundBUZ|buz_sound~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(clk_sound));
// synopsys translate_off
defparam \clk_sound~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_row[0]~I (
	.datain(\lattice_row[0]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_row[0]));
// synopsys translate_off
defparam \lattice_row[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_row[1]~I (
	.datain(\lattice_row[1]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_row[1]));
// synopsys translate_off
defparam \lattice_row[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_row[2]~I (
	.datain(\lattice_row[2]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_row[2]));
// synopsys translate_off
defparam \lattice_row[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_4,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_row[3]~I (
	.datain(\lattice_row[3]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_row[3]));
// synopsys translate_off
defparam \lattice_row[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_row[4]~I (
	.datain(\lattice_row[4]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_row[4]));
// synopsys translate_off
defparam \lattice_row[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_row[5]~I (
	.datain(\lattice_row[5]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_row[5]));
// synopsys translate_off
defparam \lattice_row[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_row[6]~I (
	.datain(\lattice_row[6]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_row[6]));
// synopsys translate_off
defparam \lattice_row[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_row[7]~I (
	.datain(\lattice_row[7]~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_row[7]));
// synopsys translate_off
defparam \lattice_row[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_22,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Rcol[0]~I (
	.datain(\lattice_Rcol~4_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Rcol[0]));
// synopsys translate_off
defparam \lattice_Rcol[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_21,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Rcol[1]~I (
	.datain(\lattice_Rcol~6_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Rcol[1]));
// synopsys translate_off
defparam \lattice_Rcol[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Rcol[2]~I (
	.datain(\lattice_Rcol~9_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Rcol[2]));
// synopsys translate_off
defparam \lattice_Rcol[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_15,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Rcol[3]~I (
	.datain(\lattice_Rcol~12_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Rcol[3]));
// synopsys translate_off
defparam \lattice_Rcol[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Rcol[4]~I (
	.datain(\lattice_Rcol~14_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Rcol[4]));
// synopsys translate_off
defparam \lattice_Rcol[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_13,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Rcol[5]~I (
	.datain(\lattice_Rcol~16_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Rcol[5]));
// synopsys translate_off
defparam \lattice_Rcol[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Rcol[6]~I (
	.datain(\lattice_Rcol~18_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Rcol[6]));
// synopsys translate_off
defparam \lattice_Rcol[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_11,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Rcol[7]~I (
	.datain(\lattice_Rcol~22_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Rcol[7]));
// synopsys translate_off
defparam \lattice_Rcol[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_45,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Gcol[0]~I (
	.datain(\lattice_Gcol~3_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Gcol[0]));
// synopsys translate_off
defparam \lattice_Gcol[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_44,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Gcol[1]~I (
	.datain(\lattice_Gcol~4_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Gcol[1]));
// synopsys translate_off
defparam \lattice_Gcol[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_43,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Gcol[2]~I (
	.datain(\lattice_Gcol~5_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Gcol[2]));
// synopsys translate_off
defparam \lattice_Gcol[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_42,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Gcol[3]~I (
	.datain(\lattice_Gcol~6_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Gcol[3]));
// synopsys translate_off
defparam \lattice_Gcol[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_41,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Gcol[4]~I (
	.datain(\lattice_Gcol~7_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Gcol[4]));
// synopsys translate_off
defparam \lattice_Gcol[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_40,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Gcol[5]~I (
	.datain(\lattice_Gcol~9_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Gcol[5]));
// synopsys translate_off
defparam \lattice_Gcol[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_39,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Gcol[6]~I (
	.datain(\lattice_Gcol~10_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Gcol[6]));
// synopsys translate_off
defparam \lattice_Gcol[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lattice_Gcol[7]~I (
	.datain(\lattice_Gcol~14_combout ),
	.oe(vcc),
	.combout(),
	.padio(lattice_Gcol[7]));
// synopsys translate_off
defparam \lattice_Gcol[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_108,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_en~I (
	.datain(!\LCD1602|LessThan0~3_combout ),
	.oe(vcc),
	.combout(),
	.padio(lcd_en));
// synopsys translate_off
defparam \lcd_en~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_48,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_rs~I (
	.datain(\LCD1602|LCD_RS~regout ),
	.oe(vcc),
	.combout(),
	.padio(lcd_rs));
// synopsys translate_off
defparam \lcd_rs~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_101,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_data[0]~I (
	.datain(\LCD1602|LCD_DATA [0]),
	.oe(vcc),
	.combout(),
	.padio(lcd_data[0]));
// synopsys translate_off
defparam \lcd_data[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_110,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_data[1]~I (
	.datain(\LCD1602|LCD_DATA [1]),
	.oe(vcc),
	.combout(),
	.padio(lcd_data[1]));
// synopsys translate_off
defparam \lcd_data[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_102,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_data[2]~I (
	.datain(\LCD1602|LCD_DATA [2]),
	.oe(vcc),
	.combout(),
	.padio(lcd_data[2]));
// synopsys translate_off
defparam \lcd_data[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_103,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_data[3]~I (
	.datain(\LCD1602|LCD_DATA [3]),
	.oe(vcc),
	.combout(),
	.padio(lcd_data[3]));
// synopsys translate_off
defparam \lcd_data[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_104,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_data[4]~I (
	.datain(\LCD1602|LCD_DATA [4]),
	.oe(vcc),
	.combout(),
	.padio(lcd_data[4]));
// synopsys translate_off
defparam \lcd_data[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_105,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_data[5]~I (
	.datain(\LCD1602|LCD_DATA [5]),
	.oe(vcc),
	.combout(),
	.padio(lcd_data[5]));
// synopsys translate_off
defparam \lcd_data[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_106,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_data[6]~I (
	.datain(\LCD1602|LCD_DATA [6]),
	.oe(vcc),
	.combout(),
	.padio(lcd_data[6]));
// synopsys translate_off
defparam \lcd_data[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_107,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \lcd_data[7]~I (
	.datain(\LCD1602|LCD_DATA [7]),
	.oe(vcc),
	.combout(),
	.padio(lcd_data[7]));
// synopsys translate_off
defparam \lcd_data[7]~I .operation_mode = "output";
// synopsys translate_on

endmodule
